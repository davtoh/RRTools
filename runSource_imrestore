// run as: dot -Tpng -orun_imrestore.png runSource_imrestore

digraph G {

    // Attributes
    node [ shape = "rect", fontcolor = "#000000ff", fontname = "Verdana", fontsize = "7", style = "filled" ];
    graph [ fontcolor = "#0000007f", fontname = "Verdana", fontsize = "7", overlap = "scalexy", label = "" ];
    edge [ fontcolor = "#000000ff", fontname = "Verdana", fontsize = "7" ];

    // Groups
    subgraph "cluster_fractions" { "fractions._operator_fallbacks" "fractions.<module>" "fractions.Fraction"; label = "fractions"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_cmd" { "cmd.Cmd" "cmd.<module>"; label = "cmd"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_copy_reg" { "copy_reg.constructor" "copy_reg.pickle"; label = "copy_reg"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_PartsRule" { "PartsRule"; label = "PartsRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_distutils" { "distutils.version.Version" "distutils.version.LooseVersion" "distutils.version.<module>" "distutils.version.StrictVersion"; label = "distutils"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_imrestore" { "imrestore.<module>"; label = "imrestore"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_locale" { "locale.setlocale" "locale.getpreferredencoding"; label = "locale"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_unittest" { "unittest.main.<module>" "unittest.signals.<module>" "unittest.case._UnexpectedSuccess" "unittest.suite.<module>" "unittest.result.failfast" "unittest.runner.<module>" "unittest.case.TestCase" "unittest.suite._DebugResult" "unittest.case.FunctionTestCase" "unittest.case._deprecate" "unittest.main.TestProgram" "unittest.runner.TextTestResult" "unittest.<module>" "unittest.runner.TextTestRunner" "unittest.runner._WritelnDecorator" "unittest.case._ExpectedFailure" "unittest.result.TestResult" "unittest.suite.TestSuite" "unittest.case.SkipTest" "unittest.result.<module>" "unittest.signals._InterruptHandler" "unittest.case.<module>" "unittest.util.<module>" "unittest.suite._ErrorHolder" "unittest.case._AssertRaisesContext" "unittest.suite.BaseTestSuite" "unittest.loader.TestLoader" "unittest.loader.<module>"; label = "unittest"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster___main__" { "__main__"; label = "__main__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_PowerRule" { "PowerRule"; label = "PowerRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_subprocess" { "subprocess.<module>" "subprocess.CalledProcessError" "subprocess.Popen"; label = "subprocess"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_atexit" { "atexit.<module>" "atexit.register"; label = "atexit"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DecimalTuple" { "DecimalTuple"; label = "DecimalTuple"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_contextlib" { "contextlib.contextmanager"; label = "contextlib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_numbers" { "numbers.Number" "numbers.Complex" "numbers.Rational" "numbers.Integral" "numbers.<module>" "numbers.Real"; label = "numbers"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_encodings" { "encodings.hex_codec.IncrementalEncoder" "encodings.hex_codec.<module>" "encodings.hex_codec.getregentry" "encodings.hex_codec.IncrementalDecoder" "encodings.search_function" "encodings.hex_codec.StreamWriter" "encodings.normalize_encoding" "encodings.hex_codec.Codec" "encodings.hex_codec.hex_decode" "encodings.hex_codec.StreamReader"; label = "encodings"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_<module>" { "<module>"; label = "<module>"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pkgutil" { "pkgutil.register" "pkgutil.ImpLoader" "pkgutil.simplegeneric" "pkgutil.<module>" "pkgutil.ImpImporter"; label = "pkgutil"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Match" { "Match"; label = "Match"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_sre_compile" { "sre_compile._mk_bitmap" "sre_compile._simple" "sre_compile._compile_info" "sre_compile._optimize_charset" "sre_compile._compile_charset" "sre_compile._compile" "sre_compile.fixup" "sre_compile.compile" "sre_compile._code" "sre_compile.isstring"; label = "sre_compile"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_weakref" { "weakref.WeakValueDictionary.__init__" "weakref.WeakValueDictionary.__setitem__" "weakref.__new__" "weakref.WeakKeyDictionary.__init__" "weakref.KeyedRef.__init__" "weakref.remove"; label = "weakref"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_timeit" { "timeit.<module>" "timeit.Timer"; label = "timeit"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_abc" { "abc.register" "abc.abstractmethod" "abc.__new__" "abc.<genexpr>" "abc.__instancecheck__" "abc.__subclasscheck__"; label = "abc"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_posixpath" { "posixpath.isabs" "posixpath.dirname" "posixpath.normpath" "posixpath.abspath" "posixpath.join" "posixpath.normcase"; label = "posixpath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_PiecewiseRule" { "PiecewiseRule"; label = "PiecewiseRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_threading" { "threading._RLock.__init__" "threading.currentThread" "threading._RLock._note" "threading._RLock.release" "threading._RLock.__exit__" "threading._RLock.acquire" "threading.RLock"; label = "threading"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_AddRule" { "AddRule"; label = "AddRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pprint" { "pprint.<module>" "pprint.PrettyPrinter"; label = "pprint"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_Mismatch" { "Mismatch"; label = "Mismatch"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_json" { "json.<module>" "json.decoder.JSONDecoder.__init__" "json.decoder._floatconstants" "json.decoder.JSONDecoder" "json.encoder.<module>" "json.encoder.JSONEncoder" "json.decoder.<module>" "json.encoder.JSONEncoder.__init__" "json.scanner.<module>"; label = "json"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_platform" { "platform._popen" "platform.<module>"; label = "platform"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ConstantRule" { "ConstantRule"; label = "ConstantRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_functools" { "functools.cmp_to_key" "functools.update_wrapper" "functools.wraps" "functools.K" "functools.K.__lt__" "functools.K.__init__"; label = "functools"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_collections" { "collections.<genexpr>" "collections.namedtuple"; label = "collections"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DontKnowRule" { "DontKnowRule"; label = "DontKnowRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_sympy" { "sympy.core.numbers.AlgebraicNumber" "sympy.functions.special.polynomials.hermite" "sympy.functions.elementary.hyperbolic.HyperbolicFunction" "sympy.series.series.<module>" "sympy.matrices.matrices.ShapeError" "sympy.mpmath.libmp.libintmath.sqrtrem_python" "sympy.core.basic.Pi.__hash__" "sympy.core.basic.ImaginaryUnit.compare" "sympy.core.numbers.Half._hashable_content" "sympy.logic.inference.KB" "sympy.core.function.FunctionClass.nargs" "sympy.mpmath.libmp.libmpc.<module>" "sympy.__sympy_debug" "sympy.integrals.transforms.HankelTypeTransform" "sympy.functions.elementary.exponential.ExpBase" "sympy.mpmath.libmp.six.<module>" "sympy.functions.elementary.trigonometric.ReciprocalTrigonometricFunction" "sympy.integrals.integrals.<module>" "sympy.core.evalf._create_evalf_table" "sympy.mpmath.ctx_fp._wrap_specfun" "sympy.core.compatibility._HashedSeq.__init__" "sympy.functions.special.hyper.<module>" "sympy.mpmath.libmp.libintmath.<module>" "sympy.geometry.point3d.Point3D" "sympy.mpmath.ctx_fp.FPContext" "sympy.utilities.iterables.<module>" "sympy.utilities.magic.<module>" "sympy.printing.pretty.pretty_symbology.pretty_use_unicode" "sympy.matrices.expressions.hadamard.<module>" "sympy.mpmath.libmp.libmpf.prec_to_dps" "sympy.matrices.expressions.matexpr.ZeroMatrix" "sympy.functions.combinatorial.factorials.factorial2" "sympy.mpmath.calculus.quadrature.TanhSinh" "sympy.functions.special.error_functions._erfs" "sympy.core.expr.AtomicExpr" "sympy.functions.special.beta_functions.beta" "sympy.core.numbers.Integer" "sympy.logic.boolalg.BooleanFunction" "sympy.mpmath.ctx_base.StandardBaseContext" "sympy.utilities.decorator.doctest_depends_on" "sympy.polys.rings.PolyRing" "sympy.core.numbers.NegativeOne.__hash__" "sympy.polys.domains.pythonrationalfield.PythonRationalField" "sympy.mpmath.libmp.six.MovedModule.__init__" "sympy.utilities.runtests.get_sympy_dir" "sympy.simplify.epathtools.<module>" "sympy.matrices.expressions.matexpr.MatrixExpr" "sympy.mpmath.calculus.optimization.Illinois" "sympy.polys.polyerrors.NotAlgebraic" "sympy.core.facts.<genexpr>" "sympy.core.multidimensional.<module>" "sympy.core.function.Equivalent.func" "sympy.core.rules.<module>" "sympy.matrices.expressions.adjoint.<module>" "sympy.concrete.summations.Sum" "sympy.utilities.runtests.SymPyDocTests" "sympy.geometry.line.Undecidable" "sympy.core.assumptions.Half.getit" "sympy.core.basic.Pow.args" "sympy.functions.special.hyper.TupleParametersBase" "sympy.core.logic.Not.__hash__" "sympy.geometry.line3d.Segment3D" "sympy.mpmath.libmp.gammazeta.<module>" "sympy.core.exprtools.Term" "sympy.core.expr.Expr" "sympy.polys.polyerrors.UnificationFailed" "sympy.logic.boolalg.Nor" "sympy.polys.domains.mpelements.__init__" "sympy.mpmath.ctx_mp_python.__new__" "sympy.geometry.line.<module>" "sympy.polys.orderings.ReversedGradedLexOrder" "sympy.logic.inference.PropKB" "sympy.polys.domains.expressiondomain.Expression" "sympy.core.compatibility.ordered" "sympy.functions.elementary.trigonometric.cos" "sympy.tensor.<module>" "sympy.mpmath.calculus.optimization.<module>" "sympy.core.numbers.One.as_coeff_Mul" "sympy.integrals.transforms.InverseHankelTransform" "sympy.plotting.plot.BaseBackend" "sympy.logic.boolalg.__new__" "sympy.integrals.manualintegrate.rewriter" "sympy.polys.compatibility.<module>" "sympy.core.logic.Or.__hash__" "sympy.core.compatibility.__new__" "sympy.core.numbers.ComplexInfinity" "sympy.functions.combinatorial.factorials.<module>" "sympy.polys.polyclasses.DMF" "sympy.polys.polyoptions.Formal" "sympy.integrals.manualintegrate.<module>" "sympy.concrete.expr_with_intlimits.ExprWithIntLimits" "sympy.mpmath.functions.rszeta.__init__" "sympy.core.singleton.SingletonRegistry" "sympy.matrices.sparse.SparseMatrix" "sympy.core.logic.<module>" "sympy.polys.orderings.MonomialOrder" "sympy.core.logic.And" "sympy.matrices.expressions.matmul.<module>" "sympy.polys.polyoptions.Gen" "sympy.core.symbol.Dummy" "sympy.core.relational.Relational" "sympy.core.numbers.NegativeInfinity.__eq__" "sympy.core.decorators.call_highest_priority" "sympy.printing.preview.<module>" "sympy.mpmath.functions.functions.defun" "sympy.polys.domains.gmpyrationalfield.GMPYRationalField.__init__" "sympy.mpmath.calculus.quadrature.GaussLegendre" "sympy.geometry.point.Point" "sympy.plotting.plot_implicit.ImplicitSeries" "sympy.integrals.<module>" "sympy.mpmath.calculus.optimization.MNewton" "sympy.core.operations.And.args" "sympy.functions.special.spherical_harmonics.<module>" "sympy.functions.special.hyper.HyperRep_log2" "sympy.functions.special.hyper.HyperRep_log1" "sympy.core.decorators._sympifyit" "sympy.series.order.<module>" "sympy.polys.fields.<module>" "sympy.utilities.enumerative.MultisetPartitionTraverser" "sympy.matrices.expressions.matmul.MatMul" "sympy.core.assumptions._ask" "sympy.mpmath.libmp.libmpf.python_mpf_mul" "sympy.ntheory.<module>" "sympy.ntheory.factor_.<module>" "sympy.mpmath.ctx_mp_python._mpf" "sympy.integrals.transforms.LaplaceTransform" "sympy.mpmath.ctx_mp_python._mpc" "sympy.core.numbers.Number" "sympy.functions.special.polynomials.jacobi" "sympy.functions.elementary.trigonometric.<module>" "sympy.core.numbers.One.__mul__" "sympy.core.numbers.Integer._eval_power" "sympy.core.numbers.Integer.factors" "sympy.polys.polyoptions._init_dependencies_order" "sympy.polys.partfrac.<module>" "sympy.utilities.timeutils.decorator" "sympy.polys.polyclasses.<module>" "sympy.polys.domains.mpelements.ComplexElement._set_mpc" "sympy.functions.special.polynomials.chebyshevt_root" "sympy.integrals.rationaltools.<module>" "sympy.printing.latex.LatexPrinter" "sympy.core.relational.GreaterThan" "sympy.mpmath.ctx_base._init_aliases" "sympy.polys.polyoptions.Extension" "sympy.mpmath.matrices.matrices.__init__" "sympy.geometry.polygon.RegularPolygon" "sympy.functions.special.error_functions.TrigonometricIntegral" "sympy.polys.polyoptions.Composite" "sympy.functions.elementary.trigonometric.InverseTrigonometricFunction" "sympy.mpmath.calculus.optimization.ANewton" "sympy.polys.rootoftools.RootOf" "sympy.core.numbers.Integer.__lt__" "sympy.mpmath.libmp.<module>" "sympy.functions.elementary.complexes.<module>" "sympy.mpmath.libmp.libmpf.mpf_eq" "sympy.polys.densetools.<module>" "sympy.polys.domains.mpelements.<module>" "sympy.geometry.<module>" "sympy.mpmath.functions.elliptic.<module>" "sympy.functions.elementary.trigonometric.atan" "sympy.assumptions.assume.Predicate.add_handler" "sympy.matrices.expressions.matadd.MatAdd" "sympy.functions.elementary.trigonometric.asec" "sympy.core.expr.ImaginaryUnit.__mul__" "sympy.functions.special.hyper.HyperRep_asin1" "sympy.core.assumptions.make_property" "sympy.core.mul.<module>" "sympy.functions.special.hyper.HyperRep_asin2" "sympy.mpmath.libmp.libmpf.mpf_cmp" "sympy.core.basic.preorder_traversal.__iter__" "sympy.core.symbol._sanitize" "sympy.core.evalf.<module>" "sympy.core.numbers.NegativeOne.__mul__" "sympy.sets.sets.<genexpr>" "sympy.functions.special.error_functions.Ei" "sympy.tensor.indexed.IndexException" "sympy.plotting.plot.ParametricSurfaceSeries" "sympy.functions.special.bessel.airyaiprime" "sympy.printing.pretty.pretty.PrettyPrinter" "sympy.functions.elementary.complexes.polar_lift" "sympy.logic.boolalg.BooleanFalse" "sympy.logic.boolalg.Nand" "sympy.mpmath.ctx_iv._binary_op" "sympy.core.basic.Predicate.args" "sympy.functions.elementary.trigonometric.acos" "sympy.polys.polyoptions.Symbols" "sympy.functions.elementary.trigonometric.acot" "sympy.polys.polyquinticconst.PolyQuintic" "sympy.tensor.indexed.<module>" "sympy.mpmath.math2._mathfun_real" "sympy.utilities.decorator.<module>" "sympy.core.expr.Pow.__rmul__" "sympy.polys.domains.expressiondomain.ExpressionDomain" "sympy.polys.polyoptions.Flag" "sympy.functions.special.polynomials.assoc_laguerre" "sympy.matrices.expressions.matexpr.MatrixSymbol" "sympy.geometry.entity.<module>" "sympy.core.function.Or.func" "sympy.polys.fields.FracField" "sympy.core.facts.Prover" "sympy.mpmath.functions.hypergeometric.<module>" "sympy.polys.domains.pythonfinitefield.PythonFiniteField" "sympy.mpmath.calculus.optimization.OptimizationMethods" "sympy.printing.latex.<module>" "sympy.mpmath.ctx_iv.ivmpf" "sympy.mpmath.libmp.backend.<module>" "sympy.mpmath.ctx_iv.ivmpc" "sympy.core.basic.Integer.compare" "sympy.core.basic.Equivalent.__hash__" "sympy.mpmath.ctx_mp_python.__float__" "sympy.polys.polyoptions.Option" "sympy.core.numbers.One.__divmod__" "sympy.assumptions.assume.__new__" "sympy.core.numbers.igcd" "sympy.core.power.Pow._eval_power" "sympy.utilities.runtests.Skipped" "sympy.functions.elementary.hyperbolic.acosh" "sympy.mpmath.ctx_mp_python.<lambda>" "sympy.mpmath.libmp.libmpf._normalize1" "sympy.functions.special.error_functions.erf2" "sympy.polys.domains.fractionfield.FractionField" "sympy.core.basic.Float.__hash__" "sympy.polys.domains.complexfield.ComplexField" "sympy.plotting.intervalmath.interval_arithmetic.interval" "sympy.plotting.experimental_lambdify.vectorized_lambdify" "sympy.polys.polyclasses.DMP" "sympy.polys.solvers.<module>" "sympy.mpmath.ctx_iv.MPIntervalContext" "sympy.mpmath.libmp.six.Iterator" "sympy.utilities.decorator.depends_on_deco" "sympy.interactive.session.<module>" "sympy.core.compatibility.preorder_traversal.next" "sympy.core.assumptions.Pow.getit" "sympy.mpmath.functions.functions.defun_wrapped" "sympy.mpmath.libmp.libmpf.from_float" "sympy.core.numbers.class_key" "sympy.polys.domains.polynomialring.<module>" "sympy.polys.polytools.<module>" "sympy.core.compatibility.<module>" "sympy.functions.combinatorial.factorials.FallingFactorial" "sympy.mpmath.ctx_mp_python.PythonMPContext" "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode" "sympy.core.numbers.Zero.__nonzero__" "sympy.matrices.expressions.slice.MatrixSlice" "sympy.core.operations.AssocOp" "sympy.utilities.memoization.decorator" "sympy.integrals.transforms.make_wrapper" "sympy.core.basic.Not.__hash__" "sympy.core.basic.Pi._hashable_content" "sympy.functions.special.polynomials.legendre" "sympy.core.facts.Prover._process_rule" "sympy.core.numbers.One.__rmul__" "sympy.core.numbers.__new__" "sympy.utilities.runtests.PyTestReporter" "sympy.polys.euclidtools.<module>" "sympy.polys.polyquinticconst.<module>" "sympy.logic.boolalg.Boolean" "sympy.plotting.plot.ContourSeries" "sympy.mpmath.ctx_mp.<module>" "sympy.polys.compatibility.IPolys" "sympy.functions.combinatorial.numbers.lucas" "sympy.core.numbers.One.__lt__" "sympy.matrices.expressions.funcmatrix.FunctionMatrix" "sympy.concrete.<module>" "sympy.simplify.hyperexpand.Formula" "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing.__init__" "sympy.simplify.hyperexpand.MeijerFormula" "sympy.mpmath.ctx_iv.<lambda>" "sympy.core.numbers.Exp1" "sympy.sets.sets.FiniteSet" "sympy.matrices.expressions.transpose.<module>" "sympy.core.numbers.Zero.__add__" "sympy.core.basic.Or.__eq__" "sympy.functions.elementary.complexes.conjugate" "sympy.matrices.immutable.<module>" "sympy.core.numbers.mpf_norm" "sympy.printing.tree.<module>" "sympy.core.facts.StdFactKB._tell" "sympy.sets.sets.Interval" "sympy.sets.<module>" "sympy.plotting.plot.Line3DBaseSeries" "sympy.core.evaluate.<module>" "sympy.polys.polyerrors.MultivariatePolynomialError" "sympy.integrals.transforms.<module>" "sympy.functions.elementary.trigonometric.atan2" "sympy.printing.jscode.<module>" "sympy.strategies.util.assoc" "sympy.core.facts.FactRules.__init__" "sympy.polys.rings.PolyElement" "sympy.matrices.matrices.MatrixError" "sympy.core.basic.preorder_traversal.__init__" "sympy.core.logic.AndOr_Base" "sympy.printing.codeprinter.<module>" "sympy.series.gruntz.<module>" "sympy.core.compatibility.lru_cache" "sympy.ntheory.factor_.divisor_sigma" "sympy.core.basic.Equivalent.__eq__" "sympy.mpmath.ctx_iv._init_builtins" "sympy.utilities.enumerative.PartComponent" "sympy.printing.python.<module>" "sympy.sets.fancysets.Range" "sympy.functions.elementary.miscellaneous.Max" "sympy.mpmath.ctx_fp.<module>" "sympy.core.symbol.<lambda>" "sympy.core.basic.<genexpr>" "sympy.sets.sets.EmptySet" "sympy.concrete.summations.<module>" "sympy.functions.special.hyper.meijerg" "sympy.functions.elementary.integers.<module>" "sympy.mpmath.libmp.libmpf.from_str" "sympy.core.<module>" "sympy.core.logic.fromstring" "sympy.core.facts.deduce_alpha_implications" "sympy.functions.special.error_functions.erfinv" "sympy.solvers.polysys.SolveFailed" "sympy.polys.polyutils.PicklableWithSlots" "sympy.polys.domains.pythonrationalfield.PythonRationalField.__init__" "sympy.polys.galoistools.<module>" "sympy.core.assumptions.StdFactKB" "sympy.polys.fields.FracElement" "sympy.polys.polyoptions.Expand" "sympy.core.numbers.__neg__" "sympy.core.numbers.Pi" "sympy.integrals.transforms.FourierTransform" "sympy.core.sympify.CantSympify" "sympy.parsing.<module>" "sympy.polys.rootisolation.ComplexInterval" "sympy.functions.elementary.complexes.im" "sympy.logic.boolalg.<module>" "sympy.core.operations._from_args" "sympy.core.function.AppliedUndef" "sympy.matrices.expressions.funcmatrix.<module>" "sympy.sets.fancysets.Integers" "sympy.core.evalf.Integer.evalf" "sympy.plotting.plot.MatplotlibBackend" "sympy.functions.elementary.hyperbolic.<module>" "sympy.core.coreerrors.NonCommutativeExpression" "sympy.sets.fancysets.ImageSet" "sympy.matrices.<module>" "sympy.functions.elementary.trigonometric.asin" "sympy.polys.factortools.<module>" "sympy.core.assumptions.StdFactKB.__init__" "sympy.core.decorators.ImaginaryUnit.binary_op_wrapper" "sympy.plotting.plot.List2DSeries" "sympy.functions.special.bessel.BesselBase" "sympy.mpmath.libmp.six.X" "sympy.core.numbers.Infinity.__lt__" "sympy.polys.domains.mpelements.ComplexElement" "sympy.mpmath.ctx_fp.<lambda>" "sympy.core.operations.<genexpr>" "sympy.utilities.lambdify.<module>" "sympy.strategies.branch.core.<module>" "sympy.core.compatibility.NotIterable" "sympy.mpmath.libmp.libmpi.mpi_neg" "sympy.ntheory.factor_.<genexpr>" "sympy.integrals.manualintegrate.trig_rewriter" "sympy.sets.fancysets.<module>" "sympy.mpmath.ctx_iv._wrap_mpi_function" "sympy.logic.boolalg.Implies" "sympy.matrices.expressions.diagonal.<module>" "sympy.polys.polyconfig.<module>" "sympy.functions.elementary.trigonometric.acsc" "sympy.polys.polyoptions.Split" "sympy.functions.elementary.hyperbolic.sinh" "sympy.polys.heuristicgcd.<module>" "sympy.core.numbers.Float.__hash__" "sympy.geometry.line.Segment" "sympy.functions.special.polynomials.chebyshevt" "sympy.functions.special.polynomials.chebyshevu" "sympy.polys.orderings.<module>" "sympy.mpmath.functions.theta.<module>" "sympy.mpmath.calculus.differentiation.<module>" "sympy.functions.special.error_functions.<module>" "sympy.mpmath.ctx_mp_python.__int__" "sympy.utilities.memoization.recurrence_memo" "sympy.simplify.hyperexpand.MultOperator" "sympy.matrices.matrices.MatrixBase" "sympy.core.numbers.One" "sympy.printing.lambdarepr.NumExprPrinter" "sympy.polys.domains.mpelements.MPContext" "sympy.core.basic.Mul.args" "sympy.core.symbol.__new__" "sympy.core.decorators.deprecated" "sympy.polys.polyerrors.CoercionFailed" "sympy.mpmath.ctx_base.Context" "sympy.core.numbers.NegativeInfinity" "sympy.core.numbers.ImaginaryUnit" "sympy.logic.boolalg.Xor" "sympy.core.basic.Predicate.__eq__" "sympy.plotting.plot.SurfaceOver2DRangeSeries" "sympy.logic.<module>" "sympy.strategies.traverse.<module>" "sympy.core.logic.And.__hash__" "sympy.mpmath.ctx_mp_python._constant" "sympy.integrals.transforms.InverseCosineTransform" "sympy.core.numbers.Float.__lt__" "sympy.simplify.cse_opts.<module>" "sympy.printing.defaults.DefaultPrinting" "sympy.core.basic.preorder_traversal._preorder_traversal" "sympy.core.mod.<module>" "sympy.mpmath.math2._mathfun" "sympy.core.function.And.func" "sympy.polys.rings.<module>" "sympy.mpmath.libmp.six.exec_" "sympy.core.mul.NC_Marker" "sympy.polys.domains.groundtypes.GMPYInteger.__init__" "sympy.mpmath.calculus.optimization.Ridder" "sympy.core.basic.Basic" "sympy.core.function.UndefinedFunction" "sympy.mpmath.libmp.six.X.__len__" "sympy.core.basic.Rational.__hash__" "sympy.utilities.decorator.threaded_factory" "sympy.utilities.timeutils.timethis" "sympy.utilities.runtests.SymPyDocTestFinder" "sympy.functions.special.bessel.airybiprime" "sympy.mpmath.usertools.<module>" "sympy.polys.domains.domainelement.DomainElement" "sympy.assumptions.ask.<module>" "sympy.polys.monomials.Monomial" "sympy.polys.solvers.RawMatrix" "sympy.polys.rootisolation.<module>" "sympy.geometry.point.<module>" "sympy.core.power.Pow._eval_is_rational" "sympy.core.basic.class_key" "sympy.core.basic.Not._hashable_content" "sympy.concrete.gosper.<module>" "sympy.core.compatibility.metaclass" "sympy.polys.domains.realfield.RealField" "sympy.logic.boolalg.Not" "sympy.core.assumptions.__init__" "sympy.printing.lambdarepr.LambdaPrinter" "sympy.polys.polyerrors.RefinementFailed" "sympy.polys.domains.pythonintegerring.PythonIntegerRing.__init__" "sympy.polys.polyoptions.Sort" "sympy.functions.combinatorial.factorials.MultiFactorial" "sympy.core.sympify.sympify" "sympy.printing.octave.OctaveCodePrinter" "sympy.core.logic.__new__" "sympy.geometry.util.<module>" "sympy.polys.monomials.MonomialOps" "sympy.assumptions.assume.<module>" "sympy.functions.special.hyper.HyperRep_atanh" "sympy.matrices.expressions.matexpr.Identity" "sympy.functions.special.gamma_functions.loggamma" "sympy.core.numbers.Float._hashable_content" "sympy.geometry.line3d.Ray3D" "sympy.core.facts.apply_beta_to_alpha_route" "sympy.core.facts.FactRules" "sympy.ntheory.residue_ntheory.<module>" "sympy.sets.sets.Union" "sympy.plotting.intervalmath.<module>" "sympy.matrices.immutable.ImmutableSparseMatrix" "sympy.mpmath.identification.<module>" "sympy.simplify.hyperexpand.MeijerFormulaCollection" "sympy.external.<module>" "sympy.logic.inference.<module>" "sympy.core.basic.Implies.__eq__" "sympy.core.sympify._sympify" "sympy.functions.special.hyper.HyperRep_cosasin" "sympy.core.basic.ImaginaryUnit.__hash__" "sympy.polys.polyerrors.ModularGCDFailed" "sympy.utilities.<module>" "sympy.printing.pretty.pretty.<module>" "sympy.core.facts.StdFactKB.deduce_all_facts" "sympy.core.numbers.NaN.__eq__" "sympy.core.numbers.NegativeOne._eval_is_zero" "sympy.integrals.meijerint._CoeffExpValueError" "sympy.polys.rootoftools.<module>" "sympy.external.importtools.import_module" "sympy.functions.elementary.hyperbolic.acoth" "sympy.tensor.indexed.IndexedBase" "sympy.functions.special.bessel.hankel2" "sympy.functions.special.bessel.hankel1" "sympy.utilities.iterables.topological_sort" "sympy.tensor.indexed.Idx" "sympy.polys.domains.groundtypes.<module>" "sympy.core.facts.StdFactKB.<genexpr>" "sympy.integrals.transforms.MellinTransform" "sympy.core.mul._mulsort" "sympy.mpmath.libmp.libmpf.from_man_exp" "sympy.functions.elementary.complexes.transpose" "sympy.polys.domains.domain.<module>" "sympy.functions.special.hyper.TupleArg" "sympy.concrete.products.Product" "sympy.polys.polyerrors.EvaluationFailed" "sympy.mpmath.identification.IdentificationMethods" "sympy.core.assumptions.as_property" "sympy.core.numbers.Infinity.__neg__" "sympy.core.singleton.Singleton" "sympy.polys.domains.ring.<module>" "sympy.integrals.integrals.Integral" "sympy.core.containers.Tuple.__iter__" "sympy.core.compatibility.u" "sympy.mpmath.functions.functions.defun_static" "sympy.assumptions.ask_generated.<module>" "sympy.functions.elementary.trigonometric.TrigonometricFunction" "sympy.matrices.expressions.<module>" "sympy.printing.pretty.<module>" "sympy.core.facts.Prover.rules_alpha" "sympy.polys.domains.expressiondomain.ExpressionDomain.__init__" "sympy.sets.sets.Set" "sympy.core.basic._make_find_query" "sympy.polys.domains.expressiondomain.<module>" "sympy.functions.elementary.miscellaneous.sqrt" "sympy.printing.precedence.<module>" "sympy.polys.polyfuncs.<module>" "sympy.integrals.transforms.InverseSineTransform" "sympy.mpmath.ctx_iv._set_prec" "sympy.functions.special.polynomials.chebyshevu_root" "sympy.core.numbers.Integer.__hash__" "sympy.core.basic.preorder_traversal" "sympy.simplify.hyperexpand.G_Function" "sympy.functions.special.gamma_functions.<module>" "sympy.mpmath.ctx_mp_python.__init__" "sympy.core.numbers.GoldenRatio" "sympy.geometry.curve.Curve" "sympy.core.facts.FactKB" "sympy.functions.special.bsplines.<module>" "sympy.core.expr.Integer._eval_is_negative" "sympy.core.logic.flatten" "sympy.calculus.finite_diff.<module>" "sympy.core.function.__init__" "sympy.core.numbers.Rational.as_coeff_Mul" "sympy.printing.ccode.CCodePrinter" "sympy.core.mul.Mul" "sympy.sets.sets.UniversalSet" "sympy.mpmath.libmp.libmpf.mpf_div" "sympy.matrices.dense.<module>" "sympy.core.core.__lt__" "sympy.mpmath.libmp.libmpf.dps_to_prec" "sympy.functions.special.<module>" "sympy.mpmath.functions.rszeta.<module>" "sympy.core.coreerrors.<module>" "sympy.functions.special.error_functions._eis" "sympy.core.numbers.Half.__mul__" "sympy.core.basic.Or._hashable_content" "sympy.core.function.Derivative" "sympy.core.singleton.__new__" "sympy.functions.special.zeta_functions.dirichlet_eta" "sympy.core.mul.Mul.as_coeff_Mul" "sympy.core.basic.__new__" "sympy.polys.polyoptions.Options" "sympy.core.singleton.__init__" "sympy.solvers.inequalities.<module>" "sympy.mpmath.ctx_mp_python.<module>" "sympy.concrete.expr_with_intlimits.<module>" "sympy.mpmath.ctx_iv._mpq" "sympy.logic.boolalg.Predicate.__invert__" "sympy.core.numbers.Infinity.__eq__" "sympy.functions.special.delta_functions.DiracDelta" "sympy.functions.special.error_functions.fresnels" "sympy.polys.domains.fractionfield.<module>" "sympy.matrices.dense.DenseMatrix" "sympy.polys.domains.pythonintegerring.<module>" "sympy.matrices.expressions.determinant.Determinant" "sympy.polys.polyoptions.Frac" "sympy.mpmath.math2.<module>" "sympy.functions.special.error_functions.fresnelc" "sympy.sets.sets.ProductSet" "sympy.sets.fancysets.__new__" "sympy.core.facts.TautologyDetected" "sympy.functions.elementary.miscellaneous.MinMaxBase" "sympy.core.basic.Implies.__hash__" "sympy.mpmath.functions.qfunctions.<module>" "sympy.ntheory.factor_.perfect_power" "sympy.strategies.core.do_one" "sympy.polys.numberfields.IntervalPrinter" "sympy.matrices.matrices.<module>" "sympy.utilities.enumerative.<module>" "sympy.geometry.ellipse.Ellipse" "sympy.polys.polyconfig.configure" "sympy.functions.elementary.exponential.log" "sympy.core.relational._Less" "sympy.functions.elementary.miscellaneous.__new__" "sympy.geometry.entity.GeometryEntity" "sympy.core.basic.preorder_traversal.__next__" "sympy.core.compatibility._HashedSeq" "sympy.core.expr.Pi.__mul__" "sympy.core.facts.Prover.split_alpha_beta" "sympy.mpmath.calculus.quadrature.QuadratureRule" "sympy.plotting.pygletplot.<module>" "sympy.core.compatibility.decorating_function" "sympy.concrete.expr_with_limits.<module>" "sympy.integrals.trigonometry.<module>" "sympy.core.numbers.Pi.__hash__" "sympy.core.assumptions.ManagedProperties" "sympy.concrete.expr_with_limits.AddWithLimits" "sympy.series.limits.Limit" "sympy.core.basic.NegativeInfinity.is_comparable" "sympy.mpmath.functions.<module>" "sympy.functions.elementary.exponential.<module>" "sympy.polys.polyoptions.OptionType" "sympy.polys.domains.simpledomain.SimpleDomain" "sympy.polys.domains.polynomialring.PolynomialRing" "sympy.mpmath.libmp.libintmath.ifac" "sympy.simplify.simplify._rf" "sympy.printing.mathematica.MCodePrinter" "sympy.strategies.branch.traverse.<module>" "sympy.matrices.expressions.trace.<module>" "sympy.core.numbers.Integer._eval_evalf" "sympy.mpmath.calculus.optimization.Muller" "sympy.utilities.timeutils.__do_timings" "sympy.core.expr.Pi.__rmul__" "sympy.core.relational.<module>" "sympy.polys.domains.field.<module>" "sympy.polys.groebnertools.<module>" "sympy.core.evalf.Half.evalf" "sympy.polys.domains.mpelements.RealElement.<lambda>" "sympy.printing.mathml.MathMLPrinter" "sympy.mpmath.calculus.quadrature.GaussLegendre.__init__" "sympy.polys.polyoptions.Symmetric" "sympy.mpmath.functions.functions.SpecialFunctions" "sympy.functions.special.zeta_functions.polylog" "sympy.integrals.manualintegrate.Rule" "sympy.polys.fglmtools.<module>" "sympy.functions.special.tensor_functions.KroneckerDelta" "sympy.logic.boolalg.Not.__and__" "sympy.integrals.transforms.SineCosineTypeTransform" "sympy.core.power.Pow" "sympy.polys.polyerrors.BasePolynomialError" "sympy.polys.orderings.GradedLexOrder" "sympy.core.core.__gt__" "sympy.sets.sets.__new__" "sympy.core.decorators.Pi.binary_op_wrapper" "sympy.logic.boolalg.BooleanTrue.__nonzero__" "sympy.matrices.expressions.matpow.<module>" "sympy.mpmath.calculus.approximation.<module>" "sympy.printing.jscode.JavascriptCodePrinter" "sympy.polys.polyerrors.NotInvertible" "sympy.printing.mathml.<module>" "sympy.mpmath.rational.<module>" "sympy.mpmath.libmp.libelefun.<module>" "sympy.core.expr.<module>" "sympy.polys.domains.gmpyfinitefield.<module>" "sympy.core.numbers.Integer.sort_key" "sympy.integrals.transforms.InverseFourierTransform" "sympy.plotting.experimental_lambdify.Lambdifier" "sympy.polys.densearith.<module>" "sympy.mpmath.calculus.calculus.<module>" "sympy.sets.fancysets.Naturals0" "sympy.core.logic.fuzzy_bool" "sympy.integrals.transforms.MellinTransformStripError" "sympy.strategies.rl.glom" "sympy.polys.domains.gmpyrationalfield.<module>" "sympy.core.basic.Integer.func" "sympy.core.evalf.EvalfMixin" "sympy.mpmath.calculus.odes.ODEMethods" "sympy.printing.conventions.<module>" "sympy.core.facts.rules_2prereq" "sympy.polys.polyoptions.Method" "sympy.ntheory.generate.Sieve" "sympy.core.function.Function" "sympy.utilities.exceptions.<module>" "sympy.simplify.traversaltools.<module>" "sympy.core.numbers.Rational" "sympy.mpmath.ctx_mp_python._set_prec" "sympy.core.function._coeff_isneg" "sympy.mpmath.calculus.quadrature.__init__" "sympy.matrices.sparse.MutableSparseMatrix" "sympy.simplify.<module>" "sympy.matrices.expressions.matexpr.MatrixElement" "sympy.mpmath.matrices.calculus.MatrixCalculusMethods" "sympy.polys.polytools.GroebnerBasis" "sympy.polys.domains.modularinteger.ModularInteger" "sympy.core.numbers.NegativeOne" "sympy.functions.special.bessel.AiryBase" "sympy.core.compatibility._nodes" "sympy.mpmath.ctx_iv.make_mpf" "sympy.mpmath.libmp.libhyper.NoConvergence" "sympy.core.numbers.EulerGamma" "sympy.geometry.ellipse.Circle" "sympy.polys.orderings.InverseOrder" "sympy.functions.special.bessel.airybi" "sympy.functions.elementary.hyperbolic.asinh" "sympy.utilities.misc.debug_decorator" "sympy.geometry.curve.<module>" "sympy.polys.polytools.PurePoly" "sympy.mpmath.matrices.matrices._matrix" "sympy.assumptions.assume.AppliedPredicate" "sympy.polys.polyoptions.Order" "sympy.polys.polyclasses.ANP" "sympy.utilities.exceptions.SymPyDeprecationWarning" "sympy.integrals.transforms.SineTransform" "sympy.mpmath.functions.zetazeros.<module>" "sympy.sets.sets.FiniteSet.contains" "sympy.printing.repr.ReprPrinter" "sympy.polys.polyoptions.Wrt" "sympy.functions.special.elliptic_integrals.elliptic_pi" "sympy.core.sympify.SympifyError" "sympy.core.compatibility.iterable" "sympy.printing.printer.Printer" "sympy.integrals.meijerint.<module>" "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing" "sympy.core.core.BasicType" "sympy.core.containers.__new__" "sympy.mpmath.functions.functions.<module>" "sympy.mpmath.calculus.odes.<module>" "sympy.plotting.experimental_lambdify.lambdify" "sympy.tensor.indexed.Indexed" "sympy.functions.special.error_functions.Li" "sympy.plotting.plot.LineOver1DRangeSeries" "sympy.core.assumptions.NegativeOne.getit" "sympy.strategies.core.<module>" "sympy.functions.special.gamma_functions.lowergamma" "sympy.polys.polyerrors.FlagError" "sympy.functions.elementary.complexes.sign" "sympy.core.mod.Mod" "sympy.core.numbers.Half" "sympy.matrices.expressions.matexpr.<module>" "sympy.core.numbers.Zero" "sympy.mpmath.ctx_mp.PrecisionManager" "sympy.core.basic.Mul._hashable_content" "sympy.functions.combinatorial.numbers.bell" "sympy.calculus.<module>" "sympy.functions.special.elliptic_integrals.<module>" "sympy.functions.special.beta_functions.<module>" "sympy.sets.fancysets.Naturals" "sympy.mpmath.ctx_mp_python.__rdiv__" "sympy.functions.special.error_functions.erf2inv" "sympy.core.basic.ImaginaryUnit._hashable_content" "sympy.polys.domains.expressiondomain.Expression.__init__" "sympy.geometry.line.Line" "sympy.core.basic.Infinity.is_comparable" "sympy.core.basic.Implies._hashable_content" "sympy.functions.elementary.complexes.periodic_argument" "sympy.solvers.solvers.<module>" "sympy.polys.numberfields.<module>" "sympy.polys.polyerrors.PolificationFailed" "sympy.logic.boolalg.Predicate.__or__" "sympy.polys.domains.modularinteger.<module>" "sympy.core.logic.__eq__" "sympy.mpmath.functions.functions.MPContext.__init__" "sympy.polys.domains.complexfield.ComplexField.__init__" "sympy.logic.boolalg.And.__and__" "sympy.mpmath.calculus.quadrature.<module>" "sympy.assumptions.<module>" "sympy.mpmath.calculus.<module>" "sympy.matrices.immutable.ImmutableMatrix" "sympy.functions.special.polynomials.assoc_legendre" "sympy.mpmath.ctx_mp_python.__neg__" "sympy.core.compatibility.wrapper" "sympy.functions.special.bessel.<module>" "sympy.mpmath.matrices.eigen.Eigen" "sympy.mpmath.calculus.quadrature.QuadratureMethods" "sympy.external.importtools.__sympy_debug" "sympy.core.basic.And._hashable_content" "sympy.core.relational._Inequality" "sympy.core.decorators.deco" "sympy.integrals.transforms.IntegralTransform" "sympy.matrices.expressions.adjoint.Adjoint" "sympy.polys.polyoptions.Domain" "sympy.polys.polyerrors.UnivariatePolynomialError" "sympy.core.assumptions.Integer.getit" "sympy.core.cache.__cacheit" "sympy.core.numbers.NaN._as_mpf_val" "sympy.polys.domains.pythonrationalfield.<module>" "sympy.core.core.ClassRegistry" "sympy.core.symbol.Wild" "sympy.strategies.rl.<module>" "sympy.core.decorators.Mul.binary_op_wrapper" "sympy.core.logic.Not.arg" "sympy.core.basic.And.__hash__" "sympy.utilities.runtests.SymPyDocTestRunner" "sympy.core.function.ArgumentIndexError" "sympy.matrices.expressions.matexpr.deco" "sympy.ntheory.multinomial.<module>" "sympy.utilities.timeutils.<module>" "sympy.logic.boolalg._new_args_filter" "sympy.mpmath.ctx_iv.__init__" "sympy.functions.special.zeta_functions.lerchphi" "sympy.core.operations.__new__" "sympy.polys.domains.pythonintegerring.PythonIntegerRing" "sympy.matrices.expressions.matexpr._sympifyit" "sympy.mpmath.<module>" "sympy.functions.special.polynomials.OrthogonalPolynomial" "sympy.polys.polyoptions.Include" "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix" "sympy.core.basic.Infinity.__hash__" "sympy.mpmath.functions.bessel.c_memo" "sympy.polys.polyerrors.IsomorphismFailed" "sympy.printing.pretty.stringpict.stringPict" "sympy.functions.combinatorial.numbers.harmonic" "sympy.core.cache.func_wrapper" "sympy.core.numbers.One.sort_key" "sympy.core.facts.Prover.rules_beta" "sympy.sets.sets.Complement" "sympy.functions.elementary.trigonometric.sin" "sympy.core.containers.<module>" "sympy.core.basic.Mul.__hash__" "sympy.functions.special.bessel.airyai" "sympy.assumptions.assume.Predicate._hashable_content" "sympy.polys.domains.rationalfield.<module>" "sympy.functions.elementary.integers.RoundFunction" "sympy.functions.combinatorial.numbers.euler" "sympy.core.evalf.PrecisionExhausted" "sympy.core.evaluate._global_evaluate" "sympy.integrals.deltafunctions.<module>" "sympy.matrices.dense.MutableDenseMatrix" "sympy.printing.str.StrReprPrinter" "sympy.mpmath.matrices.eigen.defun" "sympy.polys.domains.gmpyintegerring.<module>" "sympy.core.compatibility._make_key" "sympy.simplify.fu.<module>" "sympy.functions.<module>" "sympy.mpmath.calculus.extrapolation.levin_class" "sympy.polys.domains.<module>" "sympy.polys.polyoptions.Strict" "sympy.core.relational.LessThan" "sympy.mpmath.ctx_iv.<module>" "sympy.core.symbol.Symbol" "sympy.printing.defaults.<module>" "sympy.functions.special.error_functions.Si" "sympy.integrals.manualintegrate._evaluates" "sympy.polys.polyoptions.All" "sympy.core.numbers.int_trace" "sympy.functions.elementary.complexes.Abs" "sympy.functions.elementary.hyperbolic.coth" "sympy.printing.ccode.<module>" "sympy.polys.polyerrors.<module>" "sympy.mpmath.libmp.libmpf.mpf_sign" "sympy.functions.elementary.complexes.re" "sympy.mpmath.ctx_mp_python.default" "sympy.core.containers.Dict" "sympy.solvers.recurr.<module>" "sympy.functions.elementary.trigonometric.csc" "sympy.core.expr.Pi.as_coeff_Mul" "sympy.core.numbers.Zero.__mod__" "sympy.mpmath.functions.functions.FPContext.__init__" "sympy.interactive.printing.<module>" "sympy.polys.domains.pythonrational.PythonRational.__init__" "sympy.strategies.core.exhaust" "sympy.mpmath.functions.functions.MPIntervalContext.__init__" "sympy.mpmath.libmp.libmpf.mpf_abs" "sympy.solvers.bivariate.<module>" "sympy.polys.rootisolation.RealInterval" "sympy.core.power.<module>" "sympy.plotting.plot.Parametric3DLineSeries" "sympy.series.residues.<module>" "sympy.strategies.util.<module>" "sympy.assumptions.ask.Q" "sympy.mpmath.ctx_mp_python.mpnumeric" "sympy.polys.polyoptions.<module>" "sympy.functions.special.bessel.besselj" "sympy.core.basic.Atom" "sympy.mpmath.libmp.libelefun.constant_memo" "sympy.functions.special.bessel.besselk" "sympy.core.exprtools.<module>" "sympy.core.decorators.<module>" "sympy.core.numbers.Half.__hash__" "sympy.core.expr.Pi.as_base_exp" "sympy.matrices.expressions.slice.<module>" "sympy.mpmath.calculus.optimization.Bisection" "sympy.functions.special.delta_functions.<module>" "sympy.ntheory.partitions_.<module>" "sympy.plotting.experimental_lambdify.<module>" "sympy.mpmath.libmp.six.MovedModule" "sympy.functions.elementary.integers.ceiling" "sympy.core.relational.StrictLessThan" "sympy.core.numbers.Half._eval_evalf" "sympy.geometry.plane.Plane" "sympy.polys.domains.gmpyrationalfield.GMPYRationalField" "sympy.strategies.branch.<module>" "sympy.functions.special.error_functions.Chi" "sympy.core.numbers.Catalan" "sympy.utilities.runtests.SymPyTests" "sympy.assumptions.refine.<module>" "sympy.polys.domains.realfield.RealField.__init__" "sympy.matrices.expressions.blockmatrix.BlockMatrix" "sympy.polys.domains.complexfield.<module>" "sympy.integrals.transforms.HankelTransform" "sympy.simplify.cse_main.<module>" "sympy.mpmath.libmp.libmpf.from_rational" "sympy.core.operations.LatticeOp" "sympy.logic.boolalg.BooleanTrue" "sympy.matrices.expressions.trace.Trace" "sympy.printing.octave.<module>" "sympy.matrices.sparse.<module>" "sympy.integrals.transforms._noconds_" "sympy.polys.domains.mpelements.RealElement" "sympy.integrals.transforms.IntegralTransformError" "sympy.<module>" "sympy.utilities.runtests.Reporter" "sympy.polys.domains.pythonrational.PythonRational" "sympy.geometry.exceptions.<module>" "sympy.geometry.plane.<module>" "sympy.polys.domains.compositedomain.CompositeDomain" "sympy.core.multidimensional.vectorize.__call__" "sympy.simplify.hyperexpand.FormulaCollection" "sympy.strategies.tools.<module>" "sympy.core.numbers.One.__hash__" "sympy.mpmath.ctx_iv.convert_mpf_" "sympy.simplify.epathtools.EPath" "sympy.polys.polyerrors.HomomorphismFailed" "sympy.core.decorators.priority_decorator" "sympy.core.numbers.Half._as_mpf_val" "sympy.functions.elementary.hyperbolic.tanh" "sympy.logic.boolalg.And" "sympy.integrals.manualintegrate.uncurry" "sympy.sets.sets.FiniteSet.__contains__" "sympy.mpmath.ctx_iv.convert" "sympy.functions.combinatorial.numbers.<module>" "sympy.core.function.Subs" "sympy.assumptions.ask.register_handler" "sympy.core.compatibility.<genexpr>" "sympy.tensor.index_methods.<module>" "sympy.functions.special.zeta_functions.zeta" "sympy.functions.elementary.trigonometric.cot" "sympy.core.numbers.Integer.__int__" "sympy.logic.boolalg.BooleanFalse.__nonzero__" "sympy.ntheory.primetest.<module>" "sympy.mpmath.ctx_mp_python.binary_op" "sympy.core.function.<module>" "sympy.core.numbers.RationalConstant" "sympy.polys.polytools.Poly" "sympy.functions.special.bessel.jn" "sympy.core.sympify.SympifyError.__init__" "sympy.core.function.Not.func" "sympy.core.logic.Not" "sympy.mpmath.ctx_mp_python._wrap_specfun" "sympy.core.cache._cache" "sympy.core.basic.Pow.func" "sympy.integrals.transforms.CosineTransform" "sympy.polys.domains.realfield.<module>" "sympy.functions.special.hyper.HyperRep_power2" "sympy.mpmath.ctx_mp_python._wrap_libmp_function" "sympy.assumptions.assume.Predicate.sort_key" "sympy.polys.domains.domain.Domain" "sympy.polys.polyoptions.Gens" "sympy.mpmath.libmp.libmpf.from_int" "sympy.functions.special.hyper.HyperRep" "sympy.printing.lambdarepr.<module>" "sympy.mpmath.libmp.libmpf.<genexpr>" "sympy.utilities.decorator.no_attrs_in_subclass" "sympy.core.compatibility._HashedSeq.__hash__" "sympy.polys.polyoptions.Auto" "sympy.functions.special.error_functions.erfi" "sympy.printing.fcode.<module>" "sympy.plotting.intervalmath.interval_arithmetic.<module>" "sympy.core.compatibility.with_metaclass" "sympy.functions.special.error_functions.erfc" "sympy.core.expr.Pi._eval_power" "sympy.polys.orthopolys.<module>" "sympy.polys.polyutils.<module>" "sympy.matrices.matrices.DeferredVector" "sympy.mpmath.libmp.libhyper.<module>" "sympy.mpmath.libmp.libmpf.to_int" "sympy.core.add.<module>" "sympy.core.function.FunctionClass" "sympy.mpmath.libmp.libmpf._normalize" "sympy.calculus.singularities.<module>" "sympy.geometry.polygon.Triangle" "sympy.functions.combinatorial.factorials.factorial" "sympy.core.core.ClassRegistry.__setattr__" "sympy.mpmath.matrices.eigen_symmetric.<module>" "sympy.core.facts.InconsistentAssumptions" "sympy.polys.densebasic.<module>" "sympy.core.assumptions.<module>" "sympy.mpmath.ctx_iv._wrap_specfun" "sympy.core.cache._getenv" "sympy.core.basic.Predicate.func" "sympy.simplify.sqrtdenest.SqrtdenestStopIteration" "sympy.core.core.SingletonRegistry.__setattr__" "sympy.polys.sqfreetools.<module>" "sympy.functions.special.error_functions.Ci" "sympy.printing.codeprinter.AssignmentError" "sympy.polys.domains.pythonrational.<module>" "sympy.mpmath.ctx_mp.__init__" "sympy.core.singleton.<module>" "sympy.mpmath.calculus.calculus.defun" "sympy.core.multidimensional.vectorize" "sympy.functions.combinatorial.factorials.subfactorial" "sympy.core.basic.Infinity._hashable_content" "sympy.core.coreerrors.BaseCoreError" "sympy.functions.elementary.exponential.LambertW" "sympy.solvers.deutils.<module>" "sympy.matrices.expressions.diagonal.DiagonalOf" "sympy.mpmath.libmp.libmpf.to_float" "sympy.core.compatibility.is_sequence" "sympy.simplify.hyperexpand.Hyper_Function" "sympy.core.compatibility.as_int" "sympy.mpmath.libmp.libmpf.<module>" "sympy.mpmath.libmp.libmpf.mpf_rdiv_int" "sympy.series.gruntz.SubsSet" "sympy.printing.python.PythonPrinter" "sympy.ntheory.factor_.totient" "sympy.core.decorators.__sympifyit" "sympy.ntheory.egyptian_fraction.<module>" "sympy.mpmath.calculus.optimization.Halley" "sympy.core.containers.Tuple" "sympy.mpmath.function_docs.<module>" "sympy.mpmath.libmp.six._add_doc" "sympy.utilities.misc.<module>" "sympy.core.relational.Unequality" "sympy.core.compatibility.default_sort_key" "sympy.functions.special.gamma_functions.polygamma" "sympy.mpmath.rational.mpq" "sympy.core.function.__new__" "sympy.polys.domains.groundtypes.GMPYRational" "sympy.polys.domains.groundtypes.GMPYRational.__init__" "sympy.matrices.expressions.hadamard.HadamardProduct" "sympy.polys.polyclasses.GenericPoly" "sympy.functions.elementary.complexes.adjoint" "sympy.polys.polyoptions.Polys" "sympy.polys.monomials.<module>" "sympy.core.logic.Logic" "sympy.ntheory.residue_ntheory.mobius" "sympy.core.basic.Pow.compare" "sympy.plotting.plot.SurfaceBaseSeries" "sympy.mpmath.libmp.libmpf.h_mask_big" "sympy.printing.gtk.<module>" "sympy.functions.elementary.trigonometric.sec" "sympy.functions.combinatorial.numbers.catalan" "sympy.core.numbers._new" "sympy.matrices.matrices.NonSquareMatrixError" "sympy.functions.special.bessel.yn" "sympy.ntheory.factor_.factorint" "sympy.polys.domains.ring.Ring" "sympy.logic.boolalg.BooleanAtom" "sympy.mpmath.ctx_iv.ivmpf.__neg__" "sympy.functions.elementary.exponential.exp" "sympy.utilities.decorator.xthreaded" "sympy.mpmath.matrices.<module>" "sympy.polys.rationaltools.<module>" "sympy.matrices.expressions.diagonal.DiagonalMatrix" "sympy.core.relational.StrictGreaterThan" "sympy.mpmath.ctx_mp.MPContext" "sympy.core.numbers.One.__eq__" "sympy.geometry.exceptions.GeometryError" "sympy.geometry.point3d.<module>" "sympy.polys.domains.algebraicfield.<module>" "sympy.core.operations.<module>" "sympy.core.expr.Half._eval_is_negative" "sympy.solvers.polysys.<module>" "sympy.core.basic.Half.func" "sympy.polys.domains.finitefield.FiniteField" "sympy.polys.polyoptions.Gaussian" "sympy.functions.special.tensor_functions.LeviCivita" "sympy.simplify.sqrtdenest.<module>" "sympy.core.basic.Zero.func" "sympy.polys.polyerrors.OperationNotSupported" "sympy.core.decorators.Pow.binary_op_wrapper" "sympy.functions.elementary.integers.floor" "sympy.simplify.hyperexpand.UnShiftA" "sympy.simplify.hyperexpand.UnShiftB" "sympy.functions.special.error_functions.expint" "sympy.plotting.plot.<module>" "sympy.core.numbers.Half.as_numer_denom" "sympy.core.facts.Prover.process_rule" "sympy.integrals.manualintegrate.evaluates" "sympy.mpmath.calculus.optimization.MDNewton" "sympy.functions.special.error_functions.li" "sympy.functions.special.bessel.besseli" "sympy.core.decorators.deprecated_decorator" "sympy.functions.special.hyper.HyperRep_sinasin" "sympy.core.add.Add" "sympy.functions.special.bessel.bessely" "sympy.plotting.plot_implicit.<module>" "sympy.mpmath.libmp.libmpf.mpf_neg" "sympy.simplify.hyperexpand.<module>" "sympy.polys.domains.field.Field" "sympy.polys.polyoptions.Greedy" "sympy.core.compatibility._getenv" "sympy.mpmath.libmp.libmpf.mpf_le" "sympy.utilities.source.<module>" "sympy.mpmath.visualization.<module>" "sympy.polys.polyerrors.ExtraneousFactors" "sympy.mpmath.libmp.libmpf.mpf_lt" "sympy.functions.special.elliptic_integrals.elliptic_k" "sympy.functions.special.elliptic_integrals.elliptic_e" "sympy.functions.special.elliptic_integrals.elliptic_f" "sympy.polys.specialpolys.<module>" "sympy.polys.domains.simpledomain.<module>" "sympy.functions.special.hyper.hyper" "sympy.strategies.rl.sort" "sympy.functions.elementary.piecewise.<module>" "sympy.mpmath.visualization.VisualizationMethods" "sympy.core.mul.flatten" "sympy.geometry.polygon.Polygon" "sympy.logic.boolalg.<lambda>" "sympy.mpmath.libmp.libmpf.mpf_pos" "sympy.polys.polyerrors.PolynomialDivisionFailed" "sympy.core.numbers.Float" "sympy.core.basic.Tuple.args" "sympy.mpmath.matrices.calculus.<module>" "sympy.strategies.core.condition" "sympy.release.<module>" "sympy.core.decorators.__sympifyit_wrapper" "sympy.printing.pretty.pretty_symbology.<genexpr>" "sympy.strategies.branch.tools.<module>" "sympy.functions.combinatorial.numbers._MultisetHistogram" "sympy.matrices.expressions.matadd.<module>" "sympy.core.compatibility.Iterator" "sympy.utilities.runtests.sys_normcase" "sympy.mpmath.matrices.linalg.LinearAlgebraMethods" "sympy.polys.rootoftools.RootSum" "sympy.functions.elementary.piecewise.ExprCondPair" "sympy.mpmath.libmp.libelefun.def_mpf_constant" "sympy.functions.elementary.miscellaneous.Min" "sympy.polys.constructor.<module>" "sympy.mpmath.calculus.polynomials.<module>" "sympy.solvers.ode.<module>" "sympy.simplify.hyperexpand.MeijerUnShiftA" "sympy.simplify.hyperexpand.MeijerUnShiftB" "sympy.mpmath.functions.orthogonal.<module>" "sympy.functions.elementary.hyperbolic.cosh" "sympy.core.basic.Predicate.__hash__" "sympy.core.power.Pow.as_base_exp" "sympy.concrete.expr_with_intlimits.ReorderError" "sympy.geometry.line.Ray" "sympy.mpmath.libmp.libintmath.isqrt_small_python" "sympy.mpmath.calculus.optimization.Newton" "sympy.core.function.WildFunction" "sympy.functions.special.error_functions.erf" "sympy.solvers.<module>" "sympy.utilities.runtests.<module>" "sympy.utilities.runtests.SymPyOutputChecker" "sympy.polys.polyerrors.HeuristicGCDFailed" "sympy.functions.elementary.hyperbolic.atanh" "sympy.mpmath.libmp.six.MovedAttribute.__init__" "sympy.core.function.Implies.func" "sympy.simplify.hyperexpand.MeijerUnShiftC" "sympy.logic.boolalg.Equivalent" "sympy.geometry.ellipse.<module>" "sympy.external.importtools.<module>" "sympy.simplify.hyperexpand.MeijerUnShiftD" "sympy.geometry.line3d.Line3D" "sympy.sets.sets.FiniteSet._contains" "sympy.strategies.rl.rm_id" "sympy.mpmath.matrices.eigen.<module>" "sympy.core.function.eval" "sympy.core.basic.Pow.__hash__" "sympy.polys.orderings.LexOrder" "sympy.core.numbers.Zero._as_mpf_val" "sympy.mpmath.libmp.six._LazyDescr" "sympy.mpmath.libmp.libmpi.<module>" "sympy.printing.pretty.pretty_symbology.U" "sympy.polys.domains.mpelements._make_tol" "sympy.polys.domains.integerring.<module>" "sympy.sets.sets.<module>" "sympy.simplify.hyperexpand.ShiftB" "sympy.simplify.hyperexpand.ShiftA" "sympy.polys.ring_series.<module>" "sympy.functions.special.spherical_harmonics.Ynm" "sympy.mpmath.ctx_iv.__new__" "sympy.utilities.memoization.<module>" "sympy.mpmath.functions.zeta.<module>" "sympy.functions.special.error_functions.FresnelIntegral" "sympy.strategies.core.switch" "sympy.functions.combinatorial.<module>" "sympy.mpmath.ctx_iv.ivmpf_constant" "sympy.printing.printer.<module>" "sympy.core.function.Lambda" "sympy.plotting.plot.Parametric2DLineSeries" "sympy.printing.repr.<module>" "sympy.core.exprtools.Factors" "sympy.core.numbers.Infinity" "sympy.printing.mathematica.<module>" "sympy.series.limits.<module>" "sympy.mpmath.libmp.gammazeta.bernoulli_size" "sympy.functions.elementary.complexes.eval" "sympy.core.core.__cmp__" "sympy.mpmath.ctx_base.<module>" "sympy.core.basic.And.__eq__" "sympy.printing.fcode.FCodePrinter" "sympy.core.facts.Prover.__init__" "sympy.matrices.expressions.blockmatrix.<module>" "sympy.polys.domains.gmpyfinitefield.GMPYFiniteField" "sympy.core.numbers.Integer._eval_is_zero" "sympy.core.evalf.<lambda>" "sympy.logic.boolalg.eval" "sympy.geometry.polygon.<module>" "sympy.polys.polyerrors.GeneratorsError" "sympy.functions.combinatorial.factorials.RisingFactorial" "sympy.plotting.plot.Plot" "sympy.concrete.expr_with_limits.ExprWithLimits" "sympy.simplify.simplify.<module>" "sympy.printing.pretty.stringpict.prettyForm" "sympy.mpmath.ctx_fp.__init__" "sympy.mpmath.rational.create_reduced" "sympy.core.assumptions.StdFactKB.copy" "sympy.core.numbers.Rational._hashable_content" "sympy.polys.polyerrors.ComputationFailed" "sympy.strategies.<module>" "sympy.core.numbers.Infinity.__hash__" "sympy.core.operations._new_args_filter" "sympy.printing.codeprinter.Assignment" "sympy.printing.codeprinter.CodePrinter" "sympy.calculus.euler.<module>" "sympy.simplify.hyperexpand.MeijerShiftD" "sympy.simplify.hyperexpand.MeijerShiftB" "sympy.simplify.hyperexpand.MeijerShiftC" "sympy.simplify.hyperexpand.MeijerShiftA" "sympy.core.facts.transitive_closure" "sympy.polys.domains.compositedomain.<module>" "sympy.functions.special.polynomials.gegenbauer" "sympy.geometry.line3d.LinearEntity3D" "sympy.mpmath.calculus.extrapolation.<module>" "sympy.core.power.integer_nthroot" "sympy.core.expr.Float.as_real_imag" "sympy.polys.polyerrors.PolynomialError" "sympy.printing.pretty.pretty_symbology.<module>" "sympy.integrals.transforms.InverseLaplaceTransform" "sympy.core.power.__new__" "sympy.integrals.heurisch.<module>" "sympy.matrices.expressions.transpose.Transpose" "sympy.polys.domains.groundtypes.GMPYInteger" "sympy.printing.str.<module>" "sympy.functions.combinatorial.numbers.fibonacci" "sympy.core.symbol.__new_stage2__" "sympy.core.basic.<module>" "sympy.mpmath.ctx_mp_python.make_mpf" "sympy.core.core.<module>" "sympy.core.symbol.<module>" "sympy.mpmath.ctx_mp_python.make_mpc" "sympy.polys.polyerrors.GeneratorsNeeded" "sympy.polys.domains.integerring.IntegerRing" "sympy.core.numbers.IntegerConstant" "sympy.core.relational.Equality" "sympy.functions.special.error_functions.erfcinv" "sympy.functions.combinatorial.factorials.CombinatorialFunction" "sympy.series.order.Order" "sympy.mpmath.functions.expintegrals.<module>" "sympy.core.function.PoleError" "sympy.core.numbers.Integer._as_mpf_val" "sympy.core.numbers.<module>" "sympy.core.alphabets.<module>" "sympy.polys.polyoptions.Field" "sympy.solvers.pde.<module>" "sympy.mpmath.ctx_mp.init_builtins" "sympy.polys.orderings.ProductOrder" "sympy.functions.special.gamma_functions.uppergamma" "sympy.functions.special.gamma_functions.gamma" "sympy.polys.domains.rationalfield.RationalField" "sympy.mpmath.matrices.matrices.MatrixMethods" "sympy.mpmath.libmp.six._MovedItems" "sympy.functions.elementary.exponential.exp_polar" "sympy.mpmath.ctx_base.memoize" "sympy.simplify.hyperexpand.ReduceOrder" "sympy.printing.<module>" "sympy.core.sympify.<module>" "sympy.mpmath.libmp.six.MovedAttribute" "sympy.functions.elementary.piecewise.Piecewise" "sympy.plotting.plot.TextBackend" "sympy.mpmath.functions.factorials.<module>" "sympy.core.facts._as_pair" "sympy.printing.pretty.stringpict.<module>" "sympy.core.numbers.Rational.__hash__" "sympy.logic.boolalg.Predicate.__and__" "sympy.plotting.<module>" "sympy.functions.elementary.<module>" "sympy.polys.polyroots.<module>" "sympy.functions.elementary.trigonometric.tan" "sympy.ntheory.continued_fraction.<module>" "sympy.functions.elementary.miscellaneous.IdentityFunction" "sympy.functions.special.error_functions.Shi" "sympy.printing.pretty.pretty_symbology.<lambda>" "sympy.geometry.line3d.<module>" "sympy.core.basic.Half.__hash__" "sympy.functions.special.polynomials.laguerre" "sympy.polys.polyoptions.BooleanOption" "sympy.mpmath.calculus.optimization.Secant" "sympy.polys.domains.domainelement.<module>" "sympy.mpmath.libmp.libintmath.python_bitcount" "sympy.core.cache.wrapper" "sympy.sets.contains.<module>" "sympy.polys.domains.pythonfinitefield.<module>" "sympy.tensor.index_methods.IndexConformanceException" "sympy.core.basic.Predicate.count" "sympy.plotting.plot.DefaultBackend" "sympy.strategies.tools.typed" "sympy.polys.domains.characteristiczero.CharacteristicZero" "sympy.matrices.expressions.matpow.MatPow" "sympy.geometry.line.LinearEntity" "sympy.integrals.transforms.FourierTypeTransform" "sympy.core.operations.ShortCircuit" "sympy.concrete.products.<module>" "sympy.functions.special.hyper.HyperRep_sqrts1" "sympy.functions.special.hyper.HyperRep_sqrts2" "sympy.plotting.textplot.<module>" "sympy.polys.polyoptions.__init__" "sympy.matrices.expressions.determinant.<module>" "sympy.printing.tableform.<module>" "sympy.mpmath.functions.bessel.<module>" "sympy.core.expr.Mul.__mul__" "sympy.polys.domains.mpelements.RealElement._set_mpf" "sympy.core.core.Registry" "sympy.series.<module>" "sympy.core.basic.Or.__hash__" "sympy.utilities.iterables.<lambda>" "sympy.mpmath.rational.__new__" "sympy.core.evalf.evalf" "sympy.sets.sets.Intersection" "sympy.core.numbers.NumberSymbol" "sympy.mpmath.ctx_mp_python.__nonzero__" "sympy.core.core.BasicMeta" "sympy.assumptions.assume.AssumptionsContext" "sympy.polys.orderings.InverseOrder.__init__" "sympy.sets.contains.Contains" "sympy.core.facts._base_fact" "sympy.functions.special.hyper.HyperRep_power1" "sympy.polys.domains.characteristiczero.<module>" "sympy.plotting.plot.BaseSeries" "sympy.functions.elementary.complexes.principal_branch" "sympy.logic.boolalg.Or" "sympy.core.numbers.Integer.__eq__" "sympy.mpmath.ctx_base.__init__" "sympy.functions.special.delta_functions.Heaviside" "sympy.core.multidimensional.vectorize.__init__" "sympy.assumptions.assume.Predicate" "sympy.functions.special.polynomials.<module>" "sympy.logic.boolalg.ITE" "sympy.integrals.transforms.InverseMellinTransform" "sympy.functions.combinatorial.numbers.bernoulli" "sympy.core.rules.Transform" "sympy.mpmath.functions.rszeta.RSCache" "sympy.mpmath.calculus.extrapolation.cohen_alt_class" "sympy.functions.special.zeta_functions.<module>" "sympy.polys.polyerrors.OptionError" "sympy.core.mul._gather" "sympy.matrices.expressions.inverse.Inverse" "sympy.polys.domains.finitefield.<module>" "sympy.mpmath.calculus.calculus.CalculusMethods" "sympy.core.core.__init__" "sympy.core.operations.make_args" "sympy.polys.orderings._ItemGetter" "sympy.functions.special.bessel.SphericalBesselBase" "sympy.polys.domains.algebraicfield.AlgebraicField" "sympy.mpmath.ctx_mp_python.mpf_convert_arg" "sympy.core.basic.Not.__eq__" "sympy.core.relational._Greater" "sympy.core.facts.<module>" "sympy.mpmath.libmp.libmpf.ComplexResult" "sympy.core.expr.Pi.__neg__" "sympy.simplify.hyperexpand.Operator" "sympy.polys.polyerrors.NotReversible" "sympy.core.expr.Pow.__div__" "sympy.mpmath.math2._mathfun_n" "sympy.functions.elementary.complexes.arg" "sympy.printing.tableform.TableForm" "sympy.core.basic.Pow._hashable_content" "sympy.functions.special.tensor_functions.<module>" "sympy.functions.elementary.miscellaneous.<module>" "sympy.matrices.expressions.inverse.<module>" "sympy.core.numbers.Float.__eq__" "sympy.sets.fancysets.Reals" "sympy.mpmath.matrices.linalg.<module>" "sympy.core.cache.<module>" "sympy.core.numbers.NaN" "sympy.ntheory.generate.<module>" "sympy.strategies.tree.<module>" "sympy.functions.combinatorial.factorials.binomial" "sympy.polys.polyoptions.Modulus" "sympy.interactive.<module>" "sympy.mpmath.matrices.matrices.<module>" "sympy.core.function.Application" "sympy.mpmath.libmp.libmpi.mpi_from_str" "sympy.mpmath.calculus.quadrature.TanhSinh.__init__" "sympy.core.basic.Equivalent._hashable_content" "sympy.sets.sets._infimum_key" "sympy.core.evalf.Zero.evalf" "sympy.printing.str.StrPrinter" "sympy.core.logic.Or" "sympy.utilities.decorator.public" "sympy.polys.polyerrors.DomainError" "sympy.core.basic.<lambda>" "sympy.plotting.intervalmath.lib_interval.<module>" "sympy.mpmath.libmp.libintmath.python_trailing" "sympy.polys.polyerrors.ExactQuotientFailed" "sympy.functions.special.spherical_harmonics.Znm" "sympy.plotting.plot.Line2DBaseSeries" "sympy.core.logic.And._eval_propagate_not" "sympy.polys.<module>"; label = "sympy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ExpRule" { "ExpRule"; label = "ExpRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_DerivativeRule" { "DerivativeRule"; label = "DerivativeRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_numpy" { "numpy.lib.index_tricks.<module>" "numpy.core._methods.<module>" "numpy.polynomial.chebyshev.<module>" "numpy.testing.utils.WarningManager" "numpy.core.function_base.<module>" "numpy.lib.index_tricks.RClass" "numpy.core.arrayprint.TimedeltaFormat" "numpy.lib.utils.deprecate" "numpy.lib.index_tricks.ndindex" "numpy.lib.polynomial.<module>" "numpy.lib.polynomial.RankWarning" "numpy.core.numerictypes.english_upper" "numpy.core.numerictypes._evalname" "numpy.compat._inspect.getargs" "numpy.core.numerictypes._construct_char_code_lookup" "numpy.core.<module>" "numpy.core.numerictypes._add_aliases" "numpy.ma.core._DomainTan" "numpy.ma.core._convert2ma.__init__" "numpy.lib.utils._Deprecate" "numpy.lib._iotools.NameValidator" "numpy.polynomial.hermite.Hermite" "numpy.lib._iotools.ConversionWarning" "numpy.ma.core._DomainTan.__init__" "numpy.core.arrayprint.ComplexFormat" "numpy.polynomial.legendre.Legendre" "numpy.lib._version.<module>" "numpy.lib.function_base.<module>" "numpy.polynomial.chebyshev.Chebyshev" "numpy.ma.core.doc_note" "numpy.polynomial.polyutils.PolyDomainError" "numpy.testing.nosetester.NoseTester" "numpy.lib.format.<module>" "numpy.lib.utils._set_function_name" "numpy.polynomial.hermite_e.HermiteE" "numpy.polynomial.polyutils.PolyBase" "numpy.testing.utils.IgnoreException" "numpy.core.info.<module>" "numpy.testing.utils.clear_and_catch_warnings" "numpy.lib.index_tricks.IndexExpression" "numpy._import_tools.<module>" "numpy.ma.core._DomainGreater.__init__" "numpy.ma.core._minimum_operation" "numpy.ma.extras.MAxisConcatenator" "numpy.core.numeric.geterr" "numpy.ma.core._frommethod.getdoc" "numpy.ma.core._MaskedPrintOption" "numpy.core.getlimits.iinfo.max" "numpy.lib.index_tricks.nd_grid" "numpy._import_tools.PackageLoaderDebug" "numpy.compat._inspect.<module>" "numpy.core.arrayprint.<module>" "numpy.lib.scimath.<module>" "numpy._import_tools.PackageLoader" "numpy.ma.core._arraymethod.getdoc" "numpy.lib._iotools.<module>" "numpy.ma.core._frommethod" "numpy.compat.<module>" "numpy.polynomial._polybase.ABCPolyBase" "numpy.lib.nanfunctions.<module>" "numpy.ma.core._MaskedBinaryOperation.__init__" "numpy.ma.core._minimum_operation.__init__" "numpy.lib.function_base.add_newdoc" "numpy.lib._datasource._FileOpeners" "numpy.core.getlimits.iinfo.__init__" "numpy.core.arrayprint.FloatFormat" "numpy.polynomial.polyutils.RankWarning" "numpy.lib.twodim_base.<module>" "numpy.testing.<module>" "numpy.core.shape_base.<module>" "numpy.polynomial.<module>" "numpy.ModuleDeprecationWarning" "numpy.lib.stride_tricks.<module>" "numpy.lib.npyio.NpzFile" "numpy.core.numerictypes._add_integer_aliases" "numpy.ma.core._DomainGreater" "numpy.compat.py3k.<module>" "numpy.testing.utils.<module>" "numpy.core.records.<module>" "numpy.lib.index_tricks.IndexExpression.__init__" "numpy.ma.core._DomainSafeDivide" "numpy.ma.core._convert2ma" "numpy.lib.ufunclike.<module>" "numpy.core.numeric.ComplexWarning" "numpy.fft.info.<module>" "numpy.ma.core.MaskedIterator" "numpy.core.numeric.errstate.__enter__" "numpy.ma.core._arraymethod.__get__" "numpy.testing.nosetester.NoseTester.__init__" "numpy.ma.core._DomainGreaterEqual" "numpy.lib.index_tricks.RClass.__init__" "numpy.lib.function_base.vectorize" "numpy.core.numeric.errstate.__init__" "numpy.polynomial.polynomial.Polynomial" "numpy.lib._datasource.Repository" "numpy.core.numerictypes.english_capitalize" "numpy.lib._version.NumpyVersion" "numpy.lib.arrayterator.<module>" "numpy.matrixlib.<module>" "numpy.linalg.linalg.LinAlgError" "numpy.ma.core.get_object_signature" "numpy.matrixlib.defmatrix.matrix" "numpy.lib._datasource.<module>" "numpy.lib._iotools.ConverterError" "numpy.core.numerictypes._typedict" "numpy.ma.core._frommethod.__init__" "numpy.ma.core._DomainCheckInterval" "numpy.ma.core.mvoid" "numpy.random.<module>" "numpy.core.numeric.errstate" "numpy.lib.arraysetops.<module>" "numpy.ma.core._DomainGreaterEqual.__init__" "numpy.ma.core._maximum_operation.__init__" "numpy.lib._iotools.ConverterLockError" "numpy.core.records.recarray" "numpy.core.numerictypes._set_array_types" "numpy.ma.core._arraymethod.__init__" "numpy.add_newdocs.<module>" "numpy.polynomial._polybase.<module>" "numpy.core.numerictypes._set_up_aliases" "numpy.core._internal.<module>" "numpy.ma.extras._fromnxfunction.__init__" "numpy.core.numeric.<module>" "numpy.polynomial.laguerre.Laguerre" "numpy.lib.arrayterator.Arrayterator" "numpy.fft.fftpack.<module>" "numpy.core.arrayprint.LongFloatFormat" "numpy.core.numerictypes._add_types" "numpy.ma.core._maximum_operation" "numpy.core.defchararray.chararray" "numpy.core.numerictypes._add_array_type" "numpy.core.defchararray.<module>" "numpy.compat._inspect.strseq" "numpy.fft.helper.<module>" "numpy.ctypeslib._ndptr" "numpy.ma.core._DomainCheckInterval.__init__" "numpy.core.getlimits.finfo" "numpy.polynomial.laguerre.<module>" "numpy.lib.shape_base.<module>" "numpy.lib._iotools.StringConverter" "numpy.core.numerictypes.<module>" "numpy.core.machar.MachAr" "numpy.core.getlimits.iinfo" "numpy.core.numeric.set_string_function" "numpy.VisibleDeprecationWarning" "numpy.polynomial.polyutils.PolyError" "numpy.lib.index_tricks.mr_class.__init__" "numpy.ma.core.<module>" "numpy.linalg.linalg._determine_error_states" "numpy.ma.extras._fromnxfunction" "numpy.core.memmap.<module>" "numpy.lib.utils._Deprecate.__call__" "numpy.linalg.<module>" "numpy.lib.type_check.<module>" "numpy.core._internal._ctypes" "numpy.lib.utils.<module>" "numpy.fft.<module>" "numpy.ma.core._MaskedBinaryOperation" "numpy.core.memmap.memmap" "numpy._NoValue" "numpy.core.numeric.extend_all" "numpy.linalg.linalg.<module>" "numpy.lib.utils._Deprecate.__init__" "numpy.core.numerictypes._register_types" "numpy.testing.utils.WarningMessage" "numpy.core.numeric.errstate.__exit__" "numpy.matrixlib.defmatrix.<module>" "numpy.ma.extras.<module>" "numpy.lib.npyio.BagObj" "numpy.ma.core.MaskedConstant" "numpy.ma.core._extrema_operation" "numpy.core.arrayprint.DatetimeFormat" "numpy.lib.stride_tricks.DummyArray" "numpy.polynomial.polynomial.<module>" "numpy.lib.arraypad.<module>" "numpy.linalg.info.<module>" "numpy.compat._inspect.getargspec" "numpy.core.numeric._setdef" "numpy.compat._inspect.ismethod" "numpy.ma.core.MaskedConstant.__array_finalize__" "numpy.ma.extras.mr_class" "numpy.lib.utils.SafeEval" "numpy.core.getlimits.<module>" "numpy.ma.core.MaskedArray" "numpy.ctypeslib.prep_simple" "numpy.testing.nosetester.<module>" "numpy.core._internal._missing_ctypes" "numpy.__config__.<module>" "numpy.lib.polynomial.poly1d" "numpy.lib.index_tricks.AxisConcatenator" "numpy.core.machar.<module>" "numpy.lib.npyio.<module>" "numpy.polynomial.hermite.<module>" "numpy.ma.core._convert2ma.getdoc" "numpy.lib.index_tricks.CClass.__init__" "numpy.core._internal._getintp_ctype" "numpy.polynomial.polyutils.<module>" "numpy.core.numerictypes.english_lower" "numpy.ma.core._MaskedPrintOption.__init__" "numpy.ma.core.MaskError" "numpy.polynomial.hermite_e.<module>" "numpy.lib.index_tricks.ndenumerate" "numpy.ma.extras.mr_class.__init__" "numpy.lib.<module>" "numpy.lib.info.<module>" "numpy.ma.core._DomainSafeDivide.__init__" "numpy.polynomial.legendre.<module>" "numpy.ma.core._DomainedBinaryOperation.__init__" "numpy.random.info.<module>" "numpy.ma.core._DomainedBinaryOperation" "numpy.ma.core.type.__new__" "numpy.ma.extras._fromnxfunction.getdoc" "numpy.version.<module>" "numpy.lib._datasource.DataSource" "numpy.lib.index_tricks.nd_grid.__init__" "numpy.lib._datasource._FileOpeners.__init__" "numpy.compat._inspect.iscode" "numpy.<module>" "numpy.ma.core._MaskedUnaryOperation.__init__" "numpy.lib._iotools.LineSplitter" "numpy.core.numerictypes.bitname" "numpy.compat._inspect.<lambda>" "numpy.lib.financial.<module>" "numpy.core.fromnumeric.<module>" "numpy.ma.core._arraymethod" "numpy.ma.core._MaskedUnaryOperation" "numpy.compat._inspect.formatargspec" "numpy.ma.core.MAError" "numpy.core.numeric.seterr" "numpy.core.arrayprint.IntegerFormat" "numpy.core.records.record" "numpy.core.arrayprint.LongComplexFormat" "numpy.core.records.format_parser" "numpy.ctypeslib.<module>" "numpy.testing.decorators.<module>" "numpy.compat._inspect.isfunction" "numpy.core.numerictypes._construct_lookups" "numpy.core.numeric._unspecified" "numpy.lib.index_tricks.CClass" "numpy.ma.<module>"; label = "numpy"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ConstantTimesRule" { "ConstantTimesRule"; label = "ConstantTimesRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ArcsinRule" { "ArcsinRule"; label = "ArcsinRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_CacheInfo" { "CacheInfo"; label = "CacheInfo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_AlternativeRule" { "AlternativeRule"; label = "AlternativeRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_genericpath" { "genericpath.isdir" "genericpath.isfile"; label = "genericpath"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_stat" { "stat.S_ISDIR" "stat.S_ISREG" "stat.S_IFMT"; label = "stat"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_random" { "random.Random.shuffle"; label = "random"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TrigRule" { "TrigRule"; label = "TrigRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_warnings" { "warnings.simplefilter" "warnings.filterwarnings" "warnings.catch_warnings.__enter__" "warnings.catch_warnings.__exit__" "warnings.catch_warnings.__init__"; label = "warnings"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_UserDict" { "UserDict._Environ.__contains__" "UserDict.WeakValueDictionary.__init__" "UserDict._Environ.get"; label = "UserDict"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_inspect" { "inspect.isclass" "inspect.getmro" "inspect.getargs" "inspect.isfunction" "inspect.ismethod" "inspect.getargspec" "inspect.iscode"; label = "inspect"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_CyclicPartsRule" { "CyclicPartsRule"; label = "CyclicPartsRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_repr" { "repr.Repr.__init__" "repr.TextRepr.__init__" "repr.<module>" "repr.Repr" "repr.HTMLRepr.__init__"; label = "repr"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_URule" { "URule"; label = "URule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ReciprocalRule" { "ReciprocalRule"; label = "ReciprocalRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_HeavisideRule" { "HeavisideRule"; label = "HeavisideRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ctypes" { "ctypes.c_ubyte" "ctypes.CFUNCTYPE" "ctypes.LibraryLoader" "ctypes.c_short" "ctypes.c_void_p" "ctypes.py_object" "ctypes.c_byte" "ctypes.c_long" "ctypes.c_wchar" "ctypes._check_size" "ctypes.c_ulong" "ctypes.c_ushort" "ctypes.LibraryLoader.__init__" "ctypes.c_uint" "ctypes._endian._swapped_meta" "ctypes.c_char" "ctypes._endian.BigEndianStructure" "ctypes._reset_cache" "ctypes.c_longdouble" "ctypes._endian.<module>" "ctypes.c_char_p" "ctypes.PyDLL.__init__" "ctypes.CFunctionType" "ctypes.c_int" "ctypes.c_bool" "ctypes._FuncPtr" "ctypes.CDLL" "ctypes.c_float" "ctypes.PyDLL" "ctypes.<module>" "ctypes.c_double" "ctypes.c_wchar_p" "ctypes.PYFUNCTYPE"; label = "ctypes"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_codecs" { "codecs.__new__"; label = "codecs"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RRtoolbox" { "RRtoolbox.lib.session.<module>" "RRtoolbox.lib.directory.__new__" "RRtoolbox.lib.directory.correctSep" "RRtoolbox.lib.directory.repr2str" "RRtoolbox.lib.directory.directory.__str__" "RRtoolbox.lib.directory.decoratePath" "RRtoolbox.lib.cache._memoizedDict_old" "RRtoolbox.lib.config.<dictcomp>" "RRtoolbox.lib.cache.NotMemorizedFunc" "RRtoolbox.lib.directory.checkFile" "RRtoolbox.lib.directory.getPath" "RRtoolbox.lib.directory.decorator" "RRtoolbox.lib.directory.<module>" "RRtoolbox.lib.directory.directory.update_left" "RRtoolbox.lib.cache.notCreatable" "RRtoolbox.lib.directory.correctPath" "RRtoolbox.lib.config.directoryManager.__getattr__" "RRtoolbox.lib.cache.cache" "RRtoolbox.lib.arrayops.<module>" "RRtoolbox.lib.directory.filterdata" "RRtoolbox.lib.arrayops.convert.<module>" "RRtoolbox.lib.cache.objectGetter" "RRtoolbox.lib.config.loadConfigFile" "RRtoolbox.lib.cache.retriever" "RRtoolbox.lib.directory.getSep" "RRtoolbox.lib.directory.directory" "RRtoolbox.lib.config.<module>" "RRtoolbox.lib.config.directoryManager.__init__" "RRtoolbox.lib.config.directoryManager.load" "RRtoolbox.lib.session.readSession" "RRtoolbox.tools.lens.<module>" "RRtoolbox.lib.directory.joinPath" "RRtoolbox.lib.directory.wrapper" "RRtoolbox.lib.directory.getShortenedPath" "RRtoolbox.lib.cache.resourceManager" "RRtoolbox.tools.<module>" "RRtoolbox.lib.directory.directory.__sub__" "RRtoolbox.lib.directory.getSplitted" "RRtoolbox.lib.cache.Memoizer.ignore" "RRtoolbox.lib.directory.directory.copy" "RRtoolbox.lib.cache.Memoizer" "RRtoolbox.lib.arrayops.basic.<module>" "RRtoolbox.lib.cache.memoizedDict" "RRtoolbox.lib.config.getDirectories" "RRtoolbox.lib.config.ConfigTool" "RRtoolbox.lib.cache.MemorizedFunc" "RRtoolbox.lib.arrayops.filters.<module>" "RRtoolbox.lib.cache.notCallable" "RRtoolbox.lib.cache.Memoizer.__init__" "RRtoolbox.lib.cache.DynamicMemoizedFunc" "RRtoolbox.lib.cache.<module>" "RRtoolbox.lib.cache.Memory" "RRtoolbox.lib.arrayops.convert.SimKeyPoint" "RRtoolbox.lib.config.directoryManager" "RRtoolbox.lib.directory.repr2list"; label = "RRtoolbox"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_re" { "re._compile" "re.compile" "re.match"; label = "re"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_IntegralInfo" { "IntegralInfo"; label = "IntegralInfo"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_ArctanRule" { "ArctanRule"; label = "ArctanRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster___new__" { "__new__"; label = "__new__"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_RewriteRule" { "RewriteRule"; label = "RewriteRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_logging" { "logging.Filterer" "logging.Manager.__init__" "logging.BufferingFormatter" "logging.LoggerAdapter" "logging.<module>" "logging.Handler" "logging.PlaceHolder" "logging.RootLogger.__init__" "logging.Formatter.__init__" "logging.Formatter" "logging.StreamHandler" "logging._checkLevel" "logging.NullHandler" "logging.RootLogger" "logging.Manager" "logging.FileHandler" "logging.Logger" "logging.Filter" "logging.LogRecord"; label = "logging"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_StringIO" { "StringIO.StringIO" "StringIO.<module>"; label = "StringIO"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_os" { "os._Environ.__setitem__" "os.getenv" "os._Environ.__delitem__"; label = "os"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_decimal" { "decimal.DivisionByZero" "decimal.ConversionSyntax" "decimal.DecimalException" "decimal.Clamped" "decimal.Inexact" "decimal.Context.__init__" "decimal.Underflow" "decimal.InvalidOperation" "decimal.__new__" "decimal.DivisionUndefined" "decimal.Context" "decimal._Log10Memoize.__init__" "decimal.<genexpr>" "decimal.Subnormal" "decimal.InvalidContext" "decimal.Decimal" "decimal.Overflow" "decimal._ContextManager" "decimal.Rounded" "decimal.<module>" "decimal._WorkRep" "decimal._Log10Memoize" "decimal.DivisionImpossible"; label = "decimal"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_bdb" { "bdb.BdbQuit" "bdb.<module>" "bdb.Bdb" "bdb.Tdb" "bdb.Breakpoint"; label = "bdb"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_difflib" { "difflib.HtmlDiff" "difflib.SequenceMatcher" "difflib.<module>" "difflib.Differ"; label = "difflib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pdb" { "pdb.Pdb" "pdb.<module>" "pdb.Restart"; label = "pdb"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pydoc" { "pydoc.Helper.__init__" "pydoc.TextRepr.__init__" "pydoc.HTMLRepr.__init__" "pydoc.TextDoc" "pydoc.ModuleScanner" "pydoc.<module>" "pydoc.Helper" "pydoc._OldStyleClass" "pydoc.ErrorDuringImport" "pydoc.HTMLDoc" "pydoc.Scanner" "pydoc.HTMLRepr" "pydoc.TextRepr" "pydoc.Doc"; label = "pydoc"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster__weakrefset" { "_weakrefset._IterationGuard.__exit__" "_weakrefset.WeakSet._commit_removals" "_weakrefset._IterationGuard.__init__" "_weakrefset.WeakSet.add" "_weakrefset.WeakSet.__contains__" "_weakrefset.WeakSet.__init__" "_weakrefset.WeakSet.__iter__" "_weakrefset._IterationGuard.__enter__"; label = "_weakrefset"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TestResults" { "TestResults"; label = "TestResults"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_doctest" { "doctest.register_optionflag" "doctest.DocFileCase" "doctest.DocTestFinder" "doctest.DebugRunner" "doctest.SkipDocTestCase" "doctest.<module>" "doctest.Example" "doctest.Tester" "doctest.DocTest" "doctest._TestClass" "doctest.DocTestRunner" "doctest._OutputRedirectingPdb" "doctest.UnexpectedException" "doctest.DocTestFailure" "doctest._SpoofOut" "doctest.DocTestParser" "doctest.DocTestCase" "doctest.OutputChecker"; label = "doctest"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_InverseHyperbolicRule" { "InverseHyperbolicRule"; label = "InverseHyperbolicRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_TrigSubstitutionRule" { "TrigSubstitutionRule"; label = "TrigSubstitutionRule"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_joblib" { "joblib.logger.PrintTime" "joblib.my_exceptions.<module>" "joblib.memory.NotMemorizedResult" "joblib.memory.<module>" "joblib.disk.<module>" "joblib.logger.Logger" "joblib._compat.<module>" "joblib.hashing.<module>" "joblib.pool.CustomizablePicklingQueue" "joblib.my_exceptions.TransportableException" "joblib.memory.NotMemorizedFunc" "joblib.pool.CustomizablePickler" "joblib.hashing.NumpyHasher" "joblib.hashing._ConsistentSet" "joblib.numpy_pickle.NumpyPickler" "joblib.pool.PicklingPool" "joblib.hashing.Hasher" "joblib.hashing._MyHash" "joblib.pool.ArrayMemmapReducer" "joblib.<module>" "joblib._multiprocessing_helpers.<module>" "joblib.parallel.BatchedCalls" "joblib.parallel.WorkerInterrupt" "joblib.parallel.BatchCompletionCallBack" "joblib.numpy_pickle.<module>" "joblib.pool.<module>" "joblib.memory.Memory" "joblib.numpy_pickle.ZNDArrayWrapper" "joblib.memory.MemorizedFunc" "joblib.func_inspect.<module>" "joblib.parallel.ImmediateComputeBatch" "joblib.pool.MemmapingPool" "joblib.numpy_pickle.NumpyUnpickler" "joblib.parallel.<module>" "joblib.my_exceptions._mk_common_exceptions" "joblib._memory_helpers.<module>" "joblib.numpy_pickle.NDArrayWrapper" "joblib.parallel.Parallel" "joblib.format_stack.<module>" "joblib.memory.JobLibCollisionWarning" "joblib.parallel.SafeFunction" "joblib.logger.<module>" "joblib.my_exceptions.JoblibException" "joblib.memory.MemorizedResult" "joblib.numpy_pickle.hex_str" "joblib.numpy_pickle.ZipNumpyUnpickler" "joblib.my_exceptions._mk_exception"; label = "joblib"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_sre_parse" { "sre_parse.SubPattern.__setitem__" "sre_parse.Pattern.opengroup" "sre_parse.isdigit" "sre_parse.isname" "sre_parse.isident" "sre_parse.SubPattern.__len__" "sre_parse.Tokenizer.match" "sre_parse._parse" "sre_parse._class_escape" "sre_parse.Tokenizer.__init__" "sre_parse.Pattern.__init__" "sre_parse._parse_sub" "sre_parse.SubPattern.getwidth" "sre_parse.SubPattern.append" "sre_parse.Tokenizer.tell" "sre_parse.SubPattern.__init__" "sre_parse.Tokenizer.get" "sre_parse._escape" "sre_parse.SubPattern.__delitem__" "sre_parse.SubPattern.__getitem__" "sre_parse.Tokenizer.__next" "sre_parse.parse" "sre_parse.Pattern.closegroup"; label = "sre_parse"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_pickle" { "pickle.Unpickler.load_empty_list" "pickle.Unpickler.load_build" "pickle.UnpicklingError" "pickle.load" "pickle.Unpickler.load_proto" "pickle.Unpickler" "pickle.Unpickler.load_binput" "pickle.Pickler" "pickle.PicklingError" "pickle.Unpickler.load_false" "pickle.Unpickler.find_class" "pickle.Unpickler.load_setitems" "pickle.PickleError" "pickle.Unpickler.load_append" "pickle.Unpickler.load_short_binstring" "pickle._Stop" "pickle.Unpickler.load_stop" "pickle.Unpickler.load_binget" "pickle._EmptyClass" "pickle.Unpickler.load_global" "pickle.Unpickler.load_appends" "pickle.Unpickler.marker" "pickle.Unpickler.load_tuple1" "pickle.<module>" "pickle.Unpickler.__init__" "pickle.Unpickler.load_empty_dictionary" "pickle.Unpickler.load_newobj" "pickle.Unpickler.load" "pickle.Unpickler.load_mark" "pickle._Stop.__init__" "pickle.Unpickler.load_true"; label = "pickle"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }
    subgraph "cluster_multiprocessing" { "multiprocessing.dummy.Condition" "multiprocessing.synchronize.Lock" "multiprocessing.synchronize.<module>" "multiprocessing.dummy.DummyProcess" "multiprocessing.util.<module>" "multiprocessing.pool.<module>" "multiprocessing.process.<module>" "multiprocessing.dummy.connection.Listener" "multiprocessing.TimeoutError" "multiprocessing.process.Process" "multiprocessing.pool.IMapUnorderedIterator" "multiprocessing.pool.ApplyResult" "multiprocessing.synchronize.Condition" "multiprocessing.pool.IMapIterator" "multiprocessing.synchronize.SemLock" "multiprocessing.synchronize.Semaphore._make_methods" "multiprocessing.synchronize.Semaphore" "multiprocessing.forking.Popen" "multiprocessing.util.Finalize" "multiprocessing.dummy.<module>" "multiprocessing.util.debug" "multiprocessing.pool.ThreadPool" "multiprocessing.process.AuthenticationString" "multiprocessing.forking.ForkingPickler" "multiprocessing.util.register_after_fork" "multiprocessing.ProcessError" "multiprocessing.dummy.connection.<module>" "multiprocessing.dummy.Namespace" "multiprocessing.forking.register" "multiprocessing.process._MainProcess.__init__" "multiprocessing.forking.<module>" "multiprocessing.synchronize.BoundedSemaphore" "multiprocessing.BufferTooShort" "multiprocessing.synchronize.Semaphore.__init__" "multiprocessing.dummy.connection.Connection" "multiprocessing.Semaphore" "multiprocessing.AuthenticationError" "multiprocessing.util.ForkAwareThreadLock" "multiprocessing.synchronize.Event" "multiprocessing.synchronize.RLock" "multiprocessing.util.ForkAwareLocal" "multiprocessing.pool.MapResult" "multiprocessing.pool.Pool" "multiprocessing.pool.MaybeEncodingError" "multiprocessing.<module>" "multiprocessing.dummy.Value" "multiprocessing.process._MainProcess"; label = "multiprocessing"; fontsize = "10"; fontcolor = "black"; style = "bold"; color="#000000cc"; }

    // Nodes
    "json.<module>" [color = "#e2e5e5ff", label = "json.<module>\ncalls: 1\ntime: 0.059920s"];
    "sympy.core.numbers.AlgebraicNumber" [color = "#e5e5e5ff", label = "sympy.core.numbers.AlgebraicNumber\ncalls: 1\ntime: 0.000136s"];
    "sympy.functions.special.polynomials.hermite" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.hermite\ncalls: 1\ntime: 0.000012s"];
    "sympy.functions.elementary.hyperbolic.HyperbolicFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.HyperbolicFunction\ncalls: 1\ntime: 0.000007s"];
    "sympy.series.series.<module>" [color = "#e5e5e5ff", label = "sympy.series.series.<module>\ncalls: 1\ntime: 0.000014s"];
    "numpy.lib.index_tricks.<module>" [color = "#e4e5e5ff", label = "numpy.lib.index_tricks.<module>\ncalls: 1\ntime: 0.014583s"];
    "numpy.core._methods.<module>" [color = "#e5e5e5ff", label = "numpy.core._methods.<module>\ncalls: 1\ntime: 0.000049s"];
    "sympy.matrices.matrices.ShapeError" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.ShapeError\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.libmp.libintmath.sqrtrem_python" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libintmath.sqrtrem_python\ncalls: 2\ntime: 0.000100s"];
    "numpy.polynomial.chebyshev.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.chebyshev.<module>\ncalls: 1\ntime: 0.000427s"];
    "sympy.core.basic.Pi.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Pi.__hash__\ncalls: 21\ntime: 0.000147s"];
    "numpy.testing.utils.WarningManager" [color = "#e5e5e5ff", label = "numpy.testing.utils.WarningManager\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.basic.ImaginaryUnit.compare" [color = "#e5e5e5ff", label = "sympy.core.basic.ImaginaryUnit.compare\ncalls: 1\ntime: 0.000186s"];
    "sympy.core.numbers.Half._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "numpy.core.function_base.<module>" [color = "#e5e5e5ff", label = "numpy.core.function_base.<module>\ncalls: 1\ntime: 0.000021s"];
    "sympy.logic.inference.KB" [color = "#e5e5e5ff", label = "sympy.logic.inference.KB\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.function.FunctionClass.nargs" [color = "#e5e5e5ff", label = "sympy.core.function.FunctionClass.nargs\ncalls: 4\ntime: 0.002207s"];
    "sympy.mpmath.libmp.libmpc.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpc.<module>\ncalls: 1\ntime: 0.003654s"];
    "numpy.lib.index_tricks.RClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.RClass\ncalls: 1\ntime: 0.000011s"];
    "sympy.__sympy_debug" [color = "#e5e5e5ff", label = "sympy.__sympy_debug\ncalls: 1\ntime: 0.000714s"];
    "sympy.integrals.transforms.HankelTypeTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.HankelTypeTransform\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.elementary.exponential.ExpBase" [color = "#e5e5e5ff", label = "sympy.functions.elementary.exponential.ExpBase\ncalls: 1\ntime: 0.000022s"];
    "sympy.mpmath.libmp.six.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.<module>\ncalls: 1\ntime: 0.004481s"];
    "RRtoolbox.lib.session.<module>" [color = "#e4e5e5ff", label = "RRtoolbox.lib.session.<module>\ncalls: 1\ntime: 0.013590s"];
    "sympy.functions.elementary.trigonometric.ReciprocalTrigonometricFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.ReciprocalTrigonometricFunction\ncalls: 1\ntime: 0.000027s"];
    "sympy.integrals.integrals.<module>" [color = "#e0e5e5ff", label = "sympy.integrals.integrals.<module>\ncalls: 1\ntime: 0.098865s"];
    "sympy.core.evalf._create_evalf_table" [color = "#e5e5e5ff", label = "sympy.core.evalf._create_evalf_table\ncalls: 2\ntime: 0.000091s"];
    "sympy.mpmath.ctx_fp._wrap_specfun" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_fp._wrap_specfun\ncalls: 207\ntime: 0.002346s"];
    "json.decoder.JSONDecoder.__init__" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder.__init__\ncalls: 1\ntime: 0.000037s"];
    "sympy.core.compatibility._HashedSeq.__init__" [color = "#e3e5e5ff", label = "sympy.core.compatibility._HashedSeq.__init__\ncalls: 323\ntime: 0.009466s"];
    "numpy.core.arrayprint.TimedeltaFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.TimedeltaFormat\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.hyper.<module>" [color = "#e3e5e5ff", label = "sympy.functions.special.hyper.<module>\ncalls: 1\ntime: 0.032706s"];
    "sympy.mpmath.libmp.libintmath.<module>" [color = "#e1e5e5ff", label = "sympy.mpmath.libmp.libintmath.<module>\ncalls: 1\ntime: 0.073347s"];
    "sympy.geometry.point3d.Point3D" [color = "#e5e5e5ff", label = "sympy.geometry.point3d.Point3D\ncalls: 1\ntime: 0.000121s"];
    "sympy.mpmath.ctx_fp.FPContext" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_fp.FPContext\ncalls: 1\ntime: 0.000243s"];
    "sympy.utilities.iterables.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.iterables.<module>\ncalls: 1\ntime: 0.001158s"];
    "sympy.utilities.magic.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.magic.<module>\ncalls: 1\ntime: 0.000012s"];
    "sympy.printing.pretty.pretty_symbology.pretty_use_unicode" [color = "#e5e5e5ff", label = "sympy.printing.pretty.pretty_symbology.pretty_use_unicode\ncalls: 1\ntime: 0.000009s"];
    "sympy.matrices.expressions.hadamard.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.hadamard.<module>\ncalls: 1\ntime: 0.002869s"];
    "sympy.mpmath.libmp.libmpf.prec_to_dps" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.prec_to_dps\ncalls: 3\ntime: 0.000029s"];
    "ArcsinRule" [color = "#e5e5e5ff", label = "ArcsinRule\ncalls: 1\ntime: 0.000026s"];
    "sympy.matrices.expressions.matexpr.ZeroMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.ZeroMatrix\ncalls: 1\ntime: 0.000227s"];
    "joblib.logger.PrintTime" [color = "#e5e5e5ff", label = "joblib.logger.PrintTime\ncalls: 1\ntime: 0.000014s"];
    "sympy.functions.combinatorial.factorials.factorial2" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.factorial2\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.calculus.quadrature.TanhSinh" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.TanhSinh\ncalls: 1\ntime: 0.000011s"];
    "logging.Filterer" [color = "#e5e5e5ff", label = "logging.Filterer\ncalls: 1\ntime: 0.000017s"];
    "numpy.lib.utils.deprecate" [color = "#e5e5e5ff", label = "numpy.lib.utils.deprecate\ncalls: 2\ntime: 0.000337s"];
    "sympy.functions.special.error_functions._erfs" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions._erfs\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib.index_tricks.ndindex" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.ndindex\ncalls: 1\ntime: 0.000011s"];
    "decimal.DivisionByZero" [color = "#e5e5e5ff", label = "decimal.DivisionByZero\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.expr.AtomicExpr" [color = "#e5e5e5ff", label = "sympy.core.expr.AtomicExpr\ncalls: 1\ntime: 0.000013s"];
    "pickle.Unpickler.load_empty_list" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_empty_list\ncalls: 7\ntime: 0.000026s"];
    "sympy.functions.special.beta_functions.beta" [color = "#e5e5e5ff", label = "sympy.functions.special.beta_functions.beta\ncalls: 1\ntime: 0.000013s"];
    "doctest.register_optionflag" [color = "#e5e5e5ff", label = "doctest.register_optionflag\ncalls: 10\ntime: 0.000052s"];
    "sympy.core.numbers.Integer" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer\ncalls: 1\ntime: 0.000162s"];
    "numbers.Number" [color = "#e5e5e5ff", label = "numbers.Number\ncalls: 1\ntime: 0.000013s"];
    "numpy.lib.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.<module>\ncalls: 1\ntime: 0.006415s"];
    "sympy.logic.boolalg.BooleanFunction" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanFunction\ncalls: 1\ntime: 0.000011s"];
    "numpy.lib.polynomial.RankWarning" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.RankWarning\ncalls: 1\ntime: 0.000007s"];
    "joblib.my_exceptions.<module>" [color = "#e5e5e5ff", label = "joblib.my_exceptions.<module>\ncalls: 1\ntime: 0.004318s"];
    "sympy.mpmath.ctx_base.StandardBaseContext" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_base.StandardBaseContext\ncalls: 1\ntime: 0.000069s"];
    "sympy.utilities.decorator.doctest_depends_on" [color = "#e5e5e5ff", label = "sympy.utilities.decorator.doctest_depends_on\ncalls: 13\ntime: 0.000134s"];
    "sympy.polys.rings.PolyRing" [color = "#e5e5e5ff", label = "sympy.polys.rings.PolyRing\ncalls: 1\ntime: 0.000044s"];
    "sympy.core.numbers.NegativeOne.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeOne.__hash__\ncalls: 6\ntime: 0.000021s"];
    "multiprocessing.dummy.Condition" [color = "#e5e5e5ff", label = "multiprocessing.dummy.Condition\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.domains.pythonrationalfield.PythonRationalField" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonrationalfield.PythonRationalField\ncalls: 1\ntime: 0.000100s"];
    "pydoc.Helper.__init__" [color = "#e5e5e5ff", label = "pydoc.Helper.__init__\ncalls: 1\ntime: 0.000012s"];
    "ctypes.c_ubyte" [color = "#e5e5e5ff", label = "ctypes.c_ubyte\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.libmp.six.MovedModule.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.MovedModule.__init__\ncalls: 68\ntime: 0.000922s"];
    "sympy.utilities.runtests.get_sympy_dir" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.get_sympy_dir\ncalls: 1\ntime: 0.000552s"];
    "sympy.simplify.epathtools.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.epathtools.<module>\ncalls: 1\ntime: 0.000110s"];
    "sympy.matrices.expressions.matexpr.MatrixExpr" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.MatrixExpr\ncalls: 1\ntime: 0.002115s"];
    "encodings.hex_codec.IncrementalEncoder" [color = "#e5e5e5ff", label = "encodings.hex_codec.IncrementalEncoder\ncalls: 1\ntime: 0.000012s"];
    "sympy.mpmath.calculus.optimization.Illinois" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Illinois\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.polyerrors.NotAlgebraic" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.NotAlgebraic\ncalls: 1\ntime: 0.000005s"];
    "sympy.core.facts.<genexpr>" [color = "#c6d8e5ff", label = "sympy.core.facts.<genexpr>\ncalls: 3.968\ntime: 0.268498s"];
    "ConstantRule" [color = "#e5e5e5ff", label = "ConstantRule\ncalls: 1\ntime: 0.000030s"];
    "DontKnowRule" [color = "#e5e5e5ff", label = "DontKnowRule\ncalls: 1\ntime: 0.000024s"];
    "sympy.core.multidimensional.<module>" [color = "#e5e5e5ff", label = "sympy.core.multidimensional.<module>\ncalls: 1\ntime: 0.000074s"];
    "sympy.core.function.Equivalent.func" [color = "#e5e5e5ff", label = "sympy.core.function.Equivalent.func\ncalls: 14\ntime: 0.000046s"];
    "sympy.core.rules.<module>" [color = "#e5e5e5ff", label = "sympy.core.rules.<module>\ncalls: 1\ntime: 0.000085s"];
    "sympy.matrices.expressions.adjoint.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.adjoint.<module>\ncalls: 1\ntime: 0.002723s"];
    "numpy.core.numerictypes.english_upper" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.english_upper\ncalls: 40\ntime: 0.000309s"];
    "encodings.hex_codec.<module>" [color = "#e5e5e5ff", label = "encodings.hex_codec.<module>\ncalls: 1\ntime: 0.000644s"];
    "sympy.concrete.summations.Sum" [color = "#e5e5e5ff", label = "sympy.concrete.summations.Sum\ncalls: 1\ntime: 0.000015s"];
    "sympy.utilities.runtests.SymPyDocTests" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.SymPyDocTests\ncalls: 1\ntime: 0.000010s"];
    "sympy.geometry.line.Undecidable" [color = "#e5e5e5ff", label = "sympy.geometry.line.Undecidable\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.numerictypes._evalname" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._evalname\ncalls: 21\ntime: 0.000889s"];
    "numpy.compat._inspect.getargs" [color = "#e5e5e5ff", label = "numpy.compat._inspect.getargs\ncalls: 31\ntime: 0.001405s"];
    "pickle.Unpickler.load_build" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_build\ncalls: 8\ntime: 0.000305s"];
    "multiprocessing.synchronize.Lock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Lock\ncalls: 1\ntime: 0.000010s"];
    "encodings.hex_codec.getregentry" [color = "#e5e5e5ff", label = "encodings.hex_codec.getregentry\ncalls: 1\ntime: 0.000150s"];
    "PartsRule" [color = "#e5e5e5ff", label = "PartsRule\ncalls: 1\ntime: 0.000032s"];
    "sympy.core.assumptions.Half.getit" [color = "#e5e5e5ff", label = "sympy.core.assumptions.Half.getit\ncalls: 3\ntime: 0.008509s"];
    "sympy.core.basic.Pow.args" [color = "#e5e5e5ff", label = "sympy.core.basic.Pow.args\ncalls: 6\ntime: 0.000028s"];
    "numpy.core.numerictypes._construct_char_code_lookup" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._construct_char_code_lookup\ncalls: 1\ntime: 0.000236s"];
    "sympy.functions.special.hyper.TupleParametersBase" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.TupleParametersBase\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.logic.Not.__hash__" [color = "#a3abe5ff", label = "sympy.core.logic.Not.__hash__\ncalls: 13.792\ntime: 0.058713s"];
    "sympy.geometry.line3d.Segment3D" [color = "#e5e5e5ff", label = "sympy.geometry.line3d.Segment3D\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.libmp.gammazeta.<module>" [color = "#e3e5e5ff", label = "sympy.mpmath.libmp.gammazeta.<module>\ncalls: 1\ntime: 0.041547s"];
    "sympy.core.exprtools.Term" [color = "#e5e5e5ff", label = "sympy.core.exprtools.Term\ncalls: 1\ntime: 0.000021s"];
    "numpy.core.<module>" [color = "#e0e5e5ff", label = "numpy.core.<module>\ncalls: 1\ntime: 0.107045s"];
    "joblib.memory.NotMemorizedResult" [color = "#e5e5e5ff", label = "joblib.memory.NotMemorizedResult\ncalls: 1\ntime: 0.000020s"];
    "sympy.core.expr.Expr" [color = "#e5e5e5ff", label = "sympy.core.expr.Expr\ncalls: 1\ntime: 0.003829s"];
    "sympy.polys.polyerrors.UnificationFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.UnificationFailed\ncalls: 1\ntime: 0.000005s"];
    "sympy.logic.boolalg.Nor" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Nor\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.numerictypes._add_aliases" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._add_aliases\ncalls: 1\ntime: 0.007069s"];
    "copy_reg.constructor" [color = "#e5e5e5ff", label = "copy_reg.constructor\ncalls: 1\ntime: 0.000006s"];
    "sympy.polys.domains.mpelements.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.__init__\ncalls: 2\ntime: 0.003813s"];
    "sympy.mpmath.ctx_mp_python.__new__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__new__\ncalls: 22\ntime: 0.003362s"];
    "sympy.geometry.line.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.line.<module>\ncalls: 1\ntime: 0.008055s"];
    "sympy.polys.orderings.ReversedGradedLexOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.ReversedGradedLexOrder\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.core._DomainTan" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainTan\ncalls: 1\ntime: 0.000007s"];
    "sympy.logic.inference.PropKB" [color = "#e5e5e5ff", label = "sympy.logic.inference.PropKB\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.domains.expressiondomain.Expression" [color = "#e5e5e5ff", label = "sympy.polys.domains.expressiondomain.Expression\ncalls: 1\ntime: 0.000034s"];
    "numpy.ma.core._convert2ma.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma.__init__\ncalls: 8\ntime: 0.001534s"];
    "sympy.core.compatibility.ordered" [color = "#dfe5e5ff", label = "sympy.core.compatibility.ordered\ncalls: 215\ntime: 0.098588s"];
    "sympy.functions.elementary.trigonometric.cos" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.cos\ncalls: 1\ntime: 0.000308s"];
    "sympy.tensor.<module>" [color = "#e5e5e5ff", label = "sympy.tensor.<module>\ncalls: 1\ntime: 0.008903s"];
    "sympy.mpmath.calculus.optimization.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.<module>\ncalls: 1\ntime: 0.001015s"];
    "numpy.lib.utils._Deprecate" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.numbers.One.as_coeff_Mul" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.as_coeff_Mul\ncalls: 6\ntime: 0.000027s"];
    "sre_parse.SubPattern.__setitem__" [color = "#e4e5e5ff", label = "sre_parse.SubPattern.__setitem__\ncalls: 204\ntime: 0.000983s"];
    "sympy.integrals.transforms.InverseHankelTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseHankelTransform\ncalls: 1\ntime: 0.000007s"];
    "sympy.plotting.plot.BaseBackend" [color = "#e5e5e5ff", label = "sympy.plotting.plot.BaseBackend\ncalls: 1\ntime: 0.000006s"];
    "sympy.logic.boolalg.__new__" [color = "#e4e5e5ff", label = "sympy.logic.boolalg.__new__\ncalls: 14\ntime: 0.021506s"];
    "numpy.lib._iotools.NameValidator" [color = "#e5e5e5ff", label = "numpy.lib._iotools.NameValidator\ncalls: 1\ntime: 0.000017s"];
    "sympy.integrals.manualintegrate.rewriter" [color = "#e5e5e5ff", label = "sympy.integrals.manualintegrate.rewriter\ncalls: 2\ntime: 0.000019s"];
    "numpy.polynomial.hermite.Hermite" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite.Hermite\ncalls: 1\ntime: 0.000025s"];
    "decimal.ConversionSyntax" [color = "#e5e5e5ff", label = "decimal.ConversionSyntax\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.compatibility.<module>" [color = "#e5e5e5ff", label = "sympy.polys.compatibility.<module>\ncalls: 1\ntime: 0.001245s"];
    "sre_compile._mk_bitmap" [color = "#e5e5e5ff", label = "sre_compile._mk_bitmap\ncalls: 12\ntime: 0.000403s"];
    "sympy.core.logic.Or.__hash__" [color = "#e5e5e5ff", label = "sympy.core.logic.Or.__hash__\ncalls: 19\ntime: 0.000188s"];
    "sympy.core.compatibility.__new__" [color = "#e1e5e5ff", label = "sympy.core.compatibility.__new__\ncalls: 100\ntime: 0.082685s"];
    "numpy.lib._iotools.ConversionWarning" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConversionWarning\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.ComplexInfinity" [color = "#e5e5e5ff", label = "sympy.core.numbers.ComplexInfinity\ncalls: 1\ntime: 0.000015s"];
    "StringIO.StringIO" [color = "#e5e5e5ff", label = "StringIO.StringIO\ncalls: 1\ntime: 0.000026s"];
    "_weakrefset._IterationGuard.__exit__" [color = "#e5e5e5ff", label = "_weakrefset._IterationGuard.__exit__\ncalls: 34\ntime: 0.001323s"];
    "sympy.functions.combinatorial.factorials.<module>" [color = "#e4e5e5ff", label = "sympy.functions.combinatorial.factorials.<module>\ncalls: 1\ntime: 0.016426s"];
    "sympy.polys.polyclasses.DMF" [color = "#e5e5e5ff", label = "sympy.polys.polyclasses.DMF\ncalls: 1\ntime: 0.000054s"];
    "genericpath.isdir" [color = "#e5e5e5ff", label = "genericpath.isdir\ncalls: 3\ntime: 0.000141s"];
    "sympy.polys.polyoptions.Formal" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Formal\ncalls: 1\ntime: 0.000010s"];
    "sympy.integrals.manualintegrate.<module>" [color = "#e1e5e5ff", label = "sympy.integrals.manualintegrate.<module>\ncalls: 1\ntime: 0.088601s"];
    "sympy.concrete.expr_with_intlimits.ExprWithIntLimits" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_intlimits.ExprWithIntLimits\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.functions.rszeta.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.rszeta.__init__\ncalls: 3\ntime: 0.000020s"];
    "ctypes.CFUNCTYPE" [color = "#e5e5e5ff", label = "ctypes.CFUNCTYPE\ncalls: 3\ntime: 0.000304s"];
    "multiprocessing.synchronize.<module>" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.<module>\ncalls: 1\ntime: 0.002669s"];
    "inspect.isclass" [color = "#e5e5e5ff", label = "inspect.isclass\ncalls: 13\ntime: 0.000077s"];
    "sre_parse.Pattern.opengroup" [color = "#e4e5e5ff", label = "sre_parse.Pattern.opengroup\ncalls: 112\ntime: 0.001415s"];
    "numpy.ma.core._DomainTan.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainTan.__init__\ncalls: 1\ntime: 0.000004s"];
    "sympy.core.singleton.SingletonRegistry" [color = "#e5e5e5ff", label = "sympy.core.singleton.SingletonRegistry\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.arrayprint.ComplexFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.ComplexFormat\ncalls: 1\ntime: 0.000008s"];
    "sympy.matrices.sparse.SparseMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.sparse.SparseMatrix\ncalls: 1\ntime: 0.000061s"];
    "difflib.HtmlDiff" [color = "#e5e5e5ff", label = "difflib.HtmlDiff\ncalls: 1\ntime: 0.000027s"];
    "sympy.core.logic.<module>" [color = "#e5e5e5ff", label = "sympy.core.logic.<module>\ncalls: 1\ntime: 0.000414s"];
    "sympy.polys.orderings.MonomialOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.MonomialOrder\ncalls: 1\ntime: 0.000014s"];
    "sympy.core.logic.And" [color = "#e5e5e5ff", label = "sympy.core.logic.And\ncalls: 1\ntime: 0.000008s"];
    "pickle.UnpicklingError" [color = "#e5e5e5ff", label = "pickle.UnpicklingError\ncalls: 1\ntime: 0.000007s"];
    "multiprocessing.dummy.DummyProcess" [color = "#e5e5e5ff", label = "multiprocessing.dummy.DummyProcess\ncalls: 1\ntime: 0.000013s"];
    "joblib.memory.<module>" [color = "#e0e5e5ff", label = "joblib.memory.<module>\ncalls: 1\ntime: 0.108071s"];
    "sympy.matrices.expressions.matmul.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matmul.<module>\ncalls: 1\ntime: 0.006497s"];
    "sympy.polys.polyoptions.Gen" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Gen\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.symbol.Dummy" [color = "#e5e5e5ff", label = "sympy.core.symbol.Dummy\ncalls: 1\ntime: 0.000279s"];
    "sympy.core.relational.Relational" [color = "#e5e5e5ff", label = "sympy.core.relational.Relational\ncalls: 1\ntime: 0.000016s"];
    "sympy.core.numbers.NegativeInfinity.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeInfinity.__eq__\ncalls: 1\ntime: 0.000004s"];
    "sympy.core.decorators.call_highest_priority" [color = "#e5e5e5ff", label = "sympy.core.decorators.call_highest_priority\ncalls: 33\ntime: 0.000183s"];
    "logging.Manager.__init__" [color = "#e5e5e5ff", label = "logging.Manager.__init__\ncalls: 1\ntime: 0.000014s"];
    "sympy.printing.preview.<module>" [color = "#e5e5e5ff", label = "sympy.printing.preview.<module>\ncalls: 1\ntime: 0.000218s"];
    "ConstantTimesRule" [color = "#e5e5e5ff", label = "ConstantTimesRule\ncalls: 1\ntime: 0.000031s"];
    "sympy.mpmath.functions.functions.defun" [color = "#e4e5e5ff", label = "sympy.mpmath.functions.functions.defun\ncalls: 124\ntime: 0.000831s"];
    "sympy.polys.domains.gmpyrationalfield.GMPYRationalField.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyrationalfield.GMPYRationalField.__init__\ncalls: 1\ntime: 0.000004s"];
    "sympy.mpmath.calculus.quadrature.GaussLegendre" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.GaussLegendre\ncalls: 1\ntime: 0.000010s"];
    "unittest.main.<module>" [color = "#e5e5e5ff", label = "unittest.main.<module>\ncalls: 1\ntime: 0.001549s"];
    "sympy.geometry.point.Point" [color = "#e5e5e5ff", label = "sympy.geometry.point.Point\ncalls: 1\ntime: 0.000032s"];
    "sympy.plotting.plot_implicit.ImplicitSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot_implicit.ImplicitSeries\ncalls: 1\ntime: 0.000012s"];
    "pickle.load" [color = "#e5e5e5ff", label = "pickle.load\ncalls: 1\ntime: 0.009489s"];
    "sympy.integrals.<module>" [color = "#dce4e5ff", label = "sympy.integrals.<module>\ncalls: 1\ntime: 0.179958s"];
    "sympy.mpmath.calculus.optimization.MNewton" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.MNewton\ncalls: 1\ntime: 0.000011s"];
    "sre_parse.isdigit" [color = "#e5e5e5ff", label = "sre_parse.isdigit\ncalls: 2\ntime: 0.000011s"];
    "sympy.core.operations.And.args" [color = "#e5e5e5ff", label = "sympy.core.operations.And.args\ncalls: 1\ntime: 0.003842s"];
    "sympy.functions.special.spherical_harmonics.<module>" [color = "#e5e5e5ff", label = "sympy.functions.special.spherical_harmonics.<module>\ncalls: 1\ntime: 0.004286s"];
    "sympy.functions.special.hyper.HyperRep_log2" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_log2\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.special.hyper.HyperRep_log1" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_log1\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.decorators._sympifyit" [color = "#e5e5e5ff", label = "sympy.core.decorators._sympifyit\ncalls: 61\ntime: 0.000372s"];
    "sympy.series.order.<module>" [color = "#e5e5e5ff", label = "sympy.series.order.<module>\ncalls: 1\ntime: 0.002426s"];
    "sympy.polys.fields.<module>" [color = "#e5e5e5ff", label = "sympy.polys.fields.<module>\ncalls: 1\ntime: 0.000404s"];
    "sympy.utilities.enumerative.MultisetPartitionTraverser" [color = "#e5e5e5ff", label = "sympy.utilities.enumerative.MultisetPartitionTraverser\ncalls: 1\ntime: 0.000028s"];
    "decimal.DecimalException" [color = "#e5e5e5ff", label = "decimal.DecimalException\ncalls: 1\ntime: 0.000007s"];
    "sympy.matrices.expressions.matmul.MatMul" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matmul.MatMul\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.assumptions._ask" [color = "#e4e5e5ff", label = "sympy.core.assumptions._ask\ncalls: 7\ntime: 0.020347s"];
    "RRtoolbox.lib.directory.__new__" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.__new__\ncalls: 20\ntime: 0.004336s"];
    "sympy.mpmath.libmp.libmpf.python_mpf_mul" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.python_mpf_mul\ncalls: 2\ntime: 0.000047s"];
    "RRtoolbox.lib.directory.correctSep" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.correctSep\ncalls: 1\ntime: 0.000176s"];
    "sympy.ntheory.<module>" [color = "#e2e5e5ff", label = "sympy.ntheory.<module>\ncalls: 1\ntime: 0.055160s"];
    "sympy.ntheory.factor_.<module>" [color = "#e3e5e5ff", label = "sympy.ntheory.factor_.<module>\ncalls: 1\ntime: 0.047458s"];
    "sympy.mpmath.ctx_mp_python._mpf" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python._mpf\ncalls: 1\ntime: 0.000061s"];
    "difflib.SequenceMatcher" [color = "#e5e5e5ff", label = "difflib.SequenceMatcher\ncalls: 1\ntime: 0.000022s"];
    "sympy.integrals.transforms.LaplaceTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.LaplaceTransform\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.ctx_mp_python._mpc" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python._mpc\ncalls: 1\ntime: 0.000051s"];
    "sympy.core.numbers.Number" [color = "#e5e5e5ff", label = "sympy.core.numbers.Number\ncalls: 1\ntime: 0.000811s"];
    "inspect.getmro" [color = "#e5e5e5ff", label = "inspect.getmro\ncalls: 101\ntime: 0.000606s"];
    "sympy.functions.special.polynomials.jacobi" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.jacobi\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.elementary.trigonometric.<module>" [color = "#e1e5e5ff", label = "sympy.functions.elementary.trigonometric.<module>\ncalls: 1\ntime: 0.073629s"];
    "sympy.core.numbers.One.__mul__" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.__mul__\ncalls: 16\ntime: 0.004967s"];
    "pydoc.TextRepr.__init__" [color = "#e5e5e5ff", label = "pydoc.TextRepr.__init__\ncalls: 1\ntime: 0.000077s"];
    "numpy.polynomial.legendre.Legendre" [color = "#e5e5e5ff", label = "numpy.polynomial.legendre.Legendre\ncalls: 1\ntime: 0.000025s"];
    "sympy.core.numbers.Integer._eval_power" [color = "#e4e5e5ff", label = "sympy.core.numbers.Integer._eval_power\ncalls: 2\ntime: 0.017697s"];
    "posixpath.isabs" [color = "#e5e5e5ff", label = "posixpath.isabs\ncalls: 3\ntime: 0.000019s"];
    "sympy.core.numbers.Integer.factors" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.factors\ncalls: 2\ntime: 0.000539s"];
    "collections.<genexpr>" [color = "#dfe5e5ff", label = "collections.<genexpr>\ncalls: 1.253\ntime: 0.005915s"];
    "numpy.lib._version.<module>" [color = "#e5e5e5ff", label = "numpy.lib._version.<module>\ncalls: 1\ntime: 0.000091s"];
    "sympy.polys.polyoptions._init_dependencies_order" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions._init_dependencies_order\ncalls: 1\ntime: 0.001567s"];
    "numpy.lib.function_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.function_base.<module>\ncalls: 1\ntime: 0.007980s"];
    "sympy.polys.partfrac.<module>" [color = "#e1e5e5ff", label = "sympy.polys.partfrac.<module>\ncalls: 1\ntime: 0.081525s"];
    "sympy.utilities.timeutils.decorator" [color = "#e5e5e5ff", label = "sympy.utilities.timeutils.decorator\ncalls: 10\ntime: 0.000063s"];
    "sympy.polys.polyclasses.<module>" [color = "#dfe5e5ff", label = "sympy.polys.polyclasses.<module>\ncalls: 1\ntime: 0.117271s"];
    "sympy.polys.domains.mpelements.ComplexElement._set_mpc" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.ComplexElement._set_mpc\ncalls: 4\ntime: 0.000948s"];
    "numpy.polynomial.chebyshev.Chebyshev" [color = "#e5e5e5ff", label = "numpy.polynomial.chebyshev.Chebyshev\ncalls: 1\ntime: 0.000027s"];
    "sympy.functions.special.polynomials.chebyshevt_root" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.chebyshevt_root\ncalls: 1\ntime: 0.000007s"];
    "sympy.integrals.rationaltools.<module>" [color = "#e5e5e5ff", label = "sympy.integrals.rationaltools.<module>\ncalls: 1\ntime: 0.000032s"];
    "joblib.disk.<module>" [color = "#e5e5e5ff", label = "joblib.disk.<module>\ncalls: 1\ntime: 0.000064s"];
    "__main__" [color = "#e5e5e5ff", label = "__main__\ncalls: 1\ntime: 0.000000s"];
    "sympy.printing.latex.LatexPrinter" [color = "#e5e5e5ff", label = "sympy.printing.latex.LatexPrinter\ncalls: 1\ntime: 0.000241s"];
    "sympy.core.relational.GreaterThan" [color = "#e5e5e5ff", label = "sympy.core.relational.GreaterThan\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.util.<module>" [color = "#e5e5e5ff", label = "multiprocessing.util.<module>\ncalls: 1\ntime: 0.000784s"];
    "sympy.mpmath.ctx_base._init_aliases" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_base._init_aliases\ncalls: 2\ntime: 0.000084s"];
    "__new__" [color = "#e3e5e5ff", label = "__new__\ncalls: 364\ntime: 0.001943s"];
    "_weakrefset.WeakSet._commit_removals" [color = "#e5e5e5ff", label = "_weakrefset.WeakSet._commit_removals\ncalls: 34\ntime: 0.000264s"];
    "sympy.polys.polyoptions.Extension" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Extension\ncalls: 1\ntime: 0.000012s"];
    "multiprocessing.pool.<module>" [color = "#e5e5e5ff", label = "multiprocessing.pool.<module>\ncalls: 1\ntime: 0.004590s"];
    "sympy.mpmath.matrices.matrices.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.matrices.__init__\ncalls: 3\ntime: 0.000084s"];
    "pickle.Unpickler.load_proto" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_proto\ncalls: 1\ntime: 0.000008s"];
    "sympy.geometry.polygon.RegularPolygon" [color = "#e5e5e5ff", label = "sympy.geometry.polygon.RegularPolygon\ncalls: 1\ntime: 0.000117s"];
    "sympy.functions.special.error_functions.TrigonometricIntegral" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.TrigonometricIntegral\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.polyoptions.Composite" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Composite\ncalls: 1\ntime: 0.000010s"];
    "sympy.functions.elementary.trigonometric.InverseTrigonometricFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.InverseTrigonometricFunction\ncalls: 1\ntime: 0.000006s"];
    "sympy.mpmath.calculus.optimization.ANewton" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.ANewton\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.rootoftools.RootOf" [color = "#e5e5e5ff", label = "sympy.polys.rootoftools.RootOf\ncalls: 1\ntime: 0.000318s"];
    "numpy.ma.core.doc_note" [color = "#e5e5e5ff", label = "numpy.ma.core.doc_note\ncalls: 4\ntime: 0.000036s"];
    "sympy.core.numbers.Integer.__lt__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.__lt__\ncalls: 2\ntime: 0.000361s"];
    "sympy.mpmath.libmp.<module>" [color = "#dde4e5ff", label = "sympy.mpmath.libmp.<module>\ncalls: 1\ntime: 0.166280s"];
    "numpy.polynomial.polyutils.PolyDomainError" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyDomainError\ncalls: 1\ntime: 0.000007s"];
    "sympy.functions.elementary.complexes.<module>" [color = "#dfe5e5ff", label = "sympy.functions.elementary.complexes.<module>\ncalls: 1\ntime: 0.117237s"];
    "sympy.mpmath.libmp.libmpf.mpf_eq" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_eq\ncalls: 2\ntime: 0.000013s"];
    "numpy.testing.nosetester.NoseTester" [color = "#e5e5e5ff", label = "numpy.testing.nosetester.NoseTester\ncalls: 1\ntime: 0.000023s"];
    "sympy.polys.densetools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.densetools.<module>\ncalls: 1\ntime: 0.000094s"];
    "sympy.polys.domains.mpelements.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.<module>\ncalls: 1\ntime: 0.000390s"];
    "numpy.lib.format.<module>" [color = "#e5e5e5ff", label = "numpy.lib.format.<module>\ncalls: 1\ntime: 0.000051s"];
    "sympy.geometry.<module>" [color = "#e3e5e5ff", label = "sympy.geometry.<module>\ncalls: 1\ntime: 0.043289s"];
    "RRtoolbox.lib.directory.repr2str" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.repr2str\ncalls: 56\ntime: 0.002786s"];
    "joblib.logger.Logger" [color = "#e5e5e5ff", label = "joblib.logger.Logger\ncalls: 1\ntime: 0.000018s"];
    "stat.S_ISDIR" [color = "#e5e5e5ff", label = "stat.S_ISDIR\ncalls: 2\ntime: 0.000046s"];
    "sympy.mpmath.functions.elliptic.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.elliptic.<module>\ncalls: 1\ntime: 0.000535s"];
    "_weakrefset._IterationGuard.__init__" [color = "#e5e5e5ff", label = "_weakrefset._IterationGuard.__init__\ncalls: 34\ntime: 0.000167s"];
    "sympy.functions.elementary.trigonometric.atan" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.atan\ncalls: 1\ntime: 0.000280s"];
    "sympy.assumptions.assume.Predicate.add_handler" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.Predicate.add_handler\ncalls: 37\ntime: 0.000138s"];
    "sympy.matrices.expressions.matadd.MatAdd" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matadd.MatAdd\ncalls: 1\ntime: 0.000024s"];
    "CyclicPartsRule" [color = "#e5e5e5ff", label = "CyclicPartsRule\ncalls: 1\ntime: 0.000029s"];
    "multiprocessing.process.<module>" [color = "#e5e5e5ff", label = "multiprocessing.process.<module>\ncalls: 1\ntime: 0.000976s"];
    "sre_parse.isname" [color = "#e5e5e5ff", label = "sre_parse.isname\ncalls: 33\ntime: 0.004121s"];
    "pickle.Unpickler" [color = "#e5e5e5ff", label = "pickle.Unpickler\ncalls: 1\ntime: 0.000122s"];
    "sympy.functions.elementary.trigonometric.asec" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.asec\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.expr.ImaginaryUnit.__mul__" [color = "#e5e5e5ff", label = "sympy.core.expr.ImaginaryUnit.__mul__\ncalls: 1\ntime: 0.003148s"];
    "ctypes.LibraryLoader" [color = "#e5e5e5ff", label = "ctypes.LibraryLoader\ncalls: 1\ntime: 0.000016s"];
    "numpy.lib.utils._set_function_name" [color = "#e5e5e5ff", label = "numpy.lib.utils._set_function_name\ncalls: 2\ntime: 0.000013s"];
    "numpy.polynomial.hermite_e.HermiteE" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite_e.HermiteE\ncalls: 1\ntime: 0.000025s"];
    "sympy.functions.special.hyper.HyperRep_asin1" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_asin1\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.assumptions.make_property" [color = "#e5e5e5ff", label = "sympy.core.assumptions.make_property\ncalls: 31\ntime: 0.000879s"];
    "sympy.core.mul.<module>" [color = "#d6e2e5ff", label = "sympy.core.mul.<module>\ncalls: 1\ntime: 0.303050s"];
    "sympy.functions.special.hyper.HyperRep_asin2" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_asin2\ncalls: 1\ntime: 0.000011s"];
    "numpy.polynomial.polyutils.PolyBase" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyBase\ncalls: 1\ntime: 0.000006s"];
    "sre_parse.isident" [color = "#e4e5e5ff", label = "sre_parse.isident\ncalls: 173\ntime: 0.000757s"];
    "sympy.mpmath.libmp.libmpf.mpf_cmp" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_cmp\ncalls: 32\ntime: 0.000851s"];
    "stat.S_ISREG" [color = "#e5e5e5ff", label = "stat.S_ISREG\ncalls: 1\ntime: 0.000050s"];
    "sympy.core.basic.preorder_traversal.__iter__" [color = "#e5e5e5ff", label = "sympy.core.basic.preorder_traversal.__iter__\ncalls: 2\ntime: 0.000006s"];
    "sympy.core.symbol._sanitize" [color = "#e5e5e5ff", label = "sympy.core.symbol._sanitize\ncalls: 15\ntime: 0.001244s"];
    "decimal.Clamped" [color = "#e5e5e5ff", label = "decimal.Clamped\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.evalf.<module>" [color = "#c7d9e5ff", label = "sympy.core.evalf.<module>\ncalls: 1\ntime: 0.616040s"];
    "sympy.core.numbers.NegativeOne.__mul__" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeOne.__mul__\ncalls: 2\ntime: 0.000065s"];
    "sympy.sets.sets.<genexpr>" [color = "#e5e5e5ff", label = "sympy.sets.sets.<genexpr>\ncalls: 3\ntime: 0.000017s"];
    "doctest.DocFileCase" [color = "#e5e5e5ff", label = "doctest.DocFileCase\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.error_functions.Ei" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.Ei\ncalls: 1\ntime: 0.000018s"];
    "sympy.tensor.indexed.IndexException" [color = "#e5e5e5ff", label = "sympy.tensor.indexed.IndexException\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.dummy.connection.Listener" [color = "#e5e5e5ff", label = "multiprocessing.dummy.connection.Listener\ncalls: 1\ntime: 0.000017s"];
    "functools.cmp_to_key" [color = "#e5e5e5ff", label = "functools.cmp_to_key\ncalls: 2\ntime: 0.000215s"];
    "sympy.plotting.plot.ParametricSurfaceSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.ParametricSurfaceSeries\ncalls: 1\ntime: 0.000010s"];
    "RRtoolbox.lib.directory.directory.__str__" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.directory.__str__\ncalls: 1\ntime: 0.000153s"];
    "sympy.functions.special.bessel.airyaiprime" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.airyaiprime\ncalls: 1\ntime: 0.000014s"];
    "decimal.Inexact" [color = "#e5e5e5ff", label = "decimal.Inexact\ncalls: 1\ntime: 0.000006s"];
    "pickle.Unpickler.load_binput" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_binput\ncalls: 68\ntime: 0.000407s"];
    "sympy.printing.pretty.pretty.PrettyPrinter" [color = "#e5e5e5ff", label = "sympy.printing.pretty.pretty.PrettyPrinter\ncalls: 1\ntime: 0.000166s"];
    "sympy.functions.elementary.complexes.polar_lift" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.polar_lift\ncalls: 1\ntime: 0.000011s"];
    "sympy.logic.boolalg.BooleanFalse" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanFalse\ncalls: 1\ntime: 0.000010s"];
    "sympy.logic.boolalg.Nand" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Nand\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.ctx_iv._binary_op" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv._binary_op\ncalls: 5\ntime: 0.000091s"];
    "sympy.core.basic.Predicate.args" [color = "#e5e5e5ff", label = "sympy.core.basic.Predicate.args\ncalls: 2\ntime: 0.000008s"];
    "sympy.functions.elementary.trigonometric.acos" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.acos\ncalls: 1\ntime: 0.000278s"];
    "sympy.polys.polyoptions.Symbols" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Symbols\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.elementary.trigonometric.acot" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.acot\ncalls: 1\ntime: 0.000281s"];
    "json.decoder._floatconstants" [color = "#e5e5e5ff", label = "json.decoder._floatconstants\ncalls: 1\ntime: 0.003208s"];
    "sympy.polys.polyquinticconst.PolyQuintic" [color = "#e5e5e5ff", label = "sympy.polys.polyquinticconst.PolyQuintic\ncalls: 1\ntime: 0.000023s"];
    "sympy.tensor.indexed.<module>" [color = "#e5e5e5ff", label = "sympy.tensor.indexed.<module>\ncalls: 1\ntime: 0.006934s"];
    "sympy.mpmath.math2._mathfun_real" [color = "#e5e5e5ff", label = "sympy.mpmath.math2._mathfun_real\ncalls: 15\ntime: 0.000138s"];
    "sympy.utilities.decorator.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.decorator.<module>\ncalls: 1\ntime: 0.000136s"];
    "sympy.core.expr.Pow.__rmul__" [color = "#e5e5e5ff", label = "sympy.core.expr.Pow.__rmul__\ncalls: 1\ntime: 0.000765s"];
    "sympy.polys.domains.expressiondomain.ExpressionDomain" [color = "#e5e5e5ff", label = "sympy.polys.domains.expressiondomain.ExpressionDomain\ncalls: 1\ntime: 0.000420s"];
    "joblib._compat.<module>" [color = "#e5e5e5ff", label = "joblib._compat.<module>\ncalls: 1\ntime: 0.000025s"];
    "platform._popen" [color = "#e5e5e5ff", label = "platform._popen\ncalls: 1\ntime: 0.000022s"];
    "sympy.polys.polyoptions.Flag" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Flag\ncalls: 1\ntime: 0.000007s"];
    "sympy.functions.special.polynomials.assoc_laguerre" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.assoc_laguerre\ncalls: 1\ntime: 0.000010s"];
    "sympy.matrices.expressions.matexpr.MatrixSymbol" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.MatrixSymbol\ncalls: 1\ntime: 0.000018s"];
    "sympy.geometry.entity.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.entity.<module>\ncalls: 1\ntime: 0.001888s"];
    "sre_compile._simple" [color = "#e3e5e5ff", label = "sre_compile._simple\ncalls: 204\ntime: 0.011549s"];
    "sympy.core.function.Or.func" [color = "#e5e5e5ff", label = "sympy.core.function.Or.func\ncalls: 66\ntime: 0.000221s"];
    "sympy.polys.fields.FracField" [color = "#e5e5e5ff", label = "sympy.polys.fields.FracField\ncalls: 1\ntime: 0.000021s"];
    "functools.update_wrapper" [color = "#e3e5e5ff", label = "functools.update_wrapper\ncalls: 294\ntime: 0.005479s"];
    "numpy.testing.utils.IgnoreException" [color = "#e5e5e5ff", label = "numpy.testing.utils.IgnoreException\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.facts.Prover" [color = "#e5e5e5ff", label = "sympy.core.facts.Prover\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.functions.hypergeometric.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.hypergeometric.<module>\ncalls: 1\ntime: 0.000875s"];
    "sympy.polys.domains.pythonfinitefield.PythonFiniteField" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonfinitefield.PythonFiniteField\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.calculus.optimization.OptimizationMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.OptimizationMethods\ncalls: 1\ntime: 0.000009s"];
    "sympy.printing.latex.<module>" [color = "#e5e5e5ff", label = "sympy.printing.latex.<module>\ncalls: 1\ntime: 0.000554s"];
    "sympy.mpmath.ctx_iv.ivmpf" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.ivmpf\ncalls: 1\ntime: 0.000046s"];
    "sympy.mpmath.libmp.backend.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.backend.<module>\ncalls: 1\ntime: 0.007439s"];
    "sympy.mpmath.ctx_iv.ivmpc" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.ivmpc\ncalls: 1\ntime: 0.000041s"];
    "pickle.Pickler" [color = "#e5e5e5ff", label = "pickle.Pickler\ncalls: 1\ntime: 0.000058s"];
    "sympy.core.basic.Integer.compare" [color = "#e5e5e5ff", label = "sympy.core.basic.Integer.compare\ncalls: 1\ntime: 0.000126s"];
    "numpy.core.info.<module>" [color = "#e5e5e5ff", label = "numpy.core.info.<module>\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.basic.Equivalent.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Equivalent.__hash__\ncalls: 28\ntime: 0.000428s"];
    "AlternativeRule" [color = "#e5e5e5ff", label = "AlternativeRule\ncalls: 1\ntime: 0.000026s"];
    "sympy.mpmath.ctx_mp_python.__float__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__float__\ncalls: 2\ntime: 0.000097s"];
    "logging.BufferingFormatter" [color = "#e5e5e5ff", label = "logging.BufferingFormatter\ncalls: 1\ntime: 0.000017s"];
    "RRtoolbox.lib.directory.decoratePath" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.decoratePath\ncalls: 1\ntime: 0.000007s"];
    "sre_compile._compile_info" [color = "#e3e5e5ff", label = "sre_compile._compile_info\ncalls: 57\ntime: 0.040969s"];
    "sympy.polys.polyoptions.Option" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Option\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.numbers.One.__divmod__" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.__divmod__\ncalls: 1\ntime: 0.000201s"];
    "sympy.assumptions.assume.__new__" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.__new__\ncalls: 43\ntime: 0.001350s"];
    "_weakrefset.WeakSet.add" [color = "#e5e5e5ff", label = "_weakrefset.WeakSet.add\ncalls: 47\ntime: 0.000314s"];
    "sympy.core.numbers.igcd" [color = "#e5e5e5ff", label = "sympy.core.numbers.igcd\ncalls: 11\ntime: 0.000744s"];
    "sympy.core.power.Pow._eval_power" [color = "#e5e5e5ff", label = "sympy.core.power.Pow._eval_power\ncalls: 1\ntime: 0.002301s"];
    "sympy.utilities.runtests.Skipped" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.Skipped\ncalls: 1\ntime: 0.000005s"];
    "sympy.functions.elementary.hyperbolic.acosh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.acosh\ncalls: 1\ntime: 0.000268s"];
    "sympy.mpmath.ctx_mp_python.<lambda>" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.<lambda>\ncalls: 2\ntime: 0.000009s"];
    "joblib.hashing.<module>" [color = "#e5e5e5ff", label = "joblib.hashing.<module>\ncalls: 1\ntime: 0.001875s"];
    "sympy.mpmath.libmp.libmpf._normalize1" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf._normalize1\ncalls: 63\ntime: 0.000689s"];
    "sympy.functions.special.error_functions.erf2" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erf2\ncalls: 1\ntime: 0.000018s"];
    "joblib.pool.CustomizablePicklingQueue" [color = "#e5e5e5ff", label = "joblib.pool.CustomizablePicklingQueue\ncalls: 1\ntime: 0.000017s"];
    "joblib.my_exceptions.TransportableException" [color = "#e5e5e5ff", label = "joblib.my_exceptions.TransportableException\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.domains.fractionfield.FractionField" [color = "#e5e5e5ff", label = "sympy.polys.domains.fractionfield.FractionField\ncalls: 1\ntime: 0.000036s"];
    "sympy.core.basic.Float.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Float.__hash__\ncalls: 8\ntime: 0.000122s"];
    "sympy.polys.domains.complexfield.ComplexField" [color = "#e5e5e5ff", label = "sympy.polys.domains.complexfield.ComplexField\ncalls: 1\ntime: 0.000033s"];
    "logging.LoggerAdapter" [color = "#e5e5e5ff", label = "logging.LoggerAdapter\ncalls: 1\ntime: 0.000024s"];
    "sympy.plotting.intervalmath.interval_arithmetic.interval" [color = "#e5e5e5ff", label = "sympy.plotting.intervalmath.interval_arithmetic.interval\ncalls: 1\ntime: 0.000032s"];
    "numpy.testing.utils.clear_and_catch_warnings" [color = "#e5e5e5ff", label = "numpy.testing.utils.clear_and_catch_warnings\ncalls: 1\ntime: 0.000011s"];
    "sympy.plotting.experimental_lambdify.vectorized_lambdify" [color = "#e5e5e5ff", label = "sympy.plotting.experimental_lambdify.vectorized_lambdify\ncalls: 1\ntime: 0.000010s"];
    "decimal.Context.__init__" [color = "#e5e5e5ff", label = "decimal.Context.__init__\ncalls: 3\ntime: 0.001200s"];
    "sympy.polys.polyclasses.DMP" [color = "#e5e5e5ff", label = "sympy.polys.polyclasses.DMP\ncalls: 1\ntime: 0.000151s"];
    "UserDict._Environ.__contains__" [color = "#e5e5e5ff", label = "UserDict._Environ.__contains__\ncalls: 26\ntime: 0.000112s"];
    "sympy.polys.solvers.<module>" [color = "#e5e5e5ff", label = "sympy.polys.solvers.<module>\ncalls: 1\ntime: 0.000102s"];
    "sre_parse.SubPattern.__len__" [color = "#e1e5e5ff", label = "sre_parse.SubPattern.__len__\ncalls: 917\ntime: 0.004103s"];
    "sympy.mpmath.ctx_iv.MPIntervalContext" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.MPIntervalContext\ncalls: 1\ntime: 0.000038s"];
    "pickle.PicklingError" [color = "#e5e5e5ff", label = "pickle.PicklingError\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.libmp.six.Iterator" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.Iterator\ncalls: 1\ntime: 0.000006s"];
    "sympy.utilities.decorator.depends_on_deco" [color = "#e5e5e5ff", label = "sympy.utilities.decorator.depends_on_deco\ncalls: 13\ntime: 0.000546s"];
    "sympy.interactive.session.<module>" [color = "#e5e5e5ff", label = "sympy.interactive.session.<module>\ncalls: 1\ntime: 0.000033s"];
    "sympy.core.compatibility.preorder_traversal.next" [color = "#e5e5e5ff", label = "sympy.core.compatibility.preorder_traversal.next\ncalls: 4\ntime: 0.000303s"];
    "StringIO.<module>" [color = "#e5e5e5ff", label = "StringIO.<module>\ncalls: 1\ntime: 0.000107s"];
    "sympy.core.assumptions.Pow.getit" [color = "#e5e5e5ff", label = "sympy.core.assumptions.Pow.getit\ncalls: 1\ntime: 0.002512s"];
    "sympy.mpmath.functions.functions.defun_wrapped" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.defun_wrapped\ncalls: 83\ntime: 0.000556s"];
    "sympy.mpmath.libmp.libmpf.from_float" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.from_float\ncalls: 6\ntime: 0.001152s"];
    "sympy.core.numbers.class_key" [color = "#e5e5e5ff", label = "sympy.core.numbers.class_key\ncalls: 4\ntime: 0.000017s"];
    "decimal.Underflow" [color = "#e5e5e5ff", label = "decimal.Underflow\ncalls: 1\ntime: 0.000005s"];
    "threading._RLock.__init__" [color = "#e4e5e5ff", label = "threading._RLock.__init__\ncalls: 154\ntime: 0.002691s"];
    "doctest.DocTestFinder" [color = "#e5e5e5ff", label = "doctest.DocTestFinder\ncalls: 1\ntime: 0.000013s"];
    "unittest.signals.<module>" [color = "#e5e5e5ff", label = "unittest.signals.<module>\ncalls: 1\ntime: 0.000205s"];
    "sympy.polys.domains.polynomialring.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.polynomialring.<module>\ncalls: 1\ntime: 0.001514s"];
    "joblib.memory.NotMemorizedFunc" [color = "#e5e5e5ff", label = "joblib.memory.NotMemorizedFunc\ncalls: 1\ntime: 0.000019s"];
    "sympy.polys.polytools.<module>" [color = "#c8dae5ff", label = "sympy.polys.polytools.<module>\ncalls: 1\ntime: 0.595148s"];
    "sympy.core.compatibility.<module>" [color = "#e5e5e5ff", label = "sympy.core.compatibility.<module>\ncalls: 1\ntime: 0.007573s"];
    "sympy.functions.combinatorial.factorials.FallingFactorial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.FallingFactorial\ncalls: 1\ntime: 0.000008s"];
    "logging.<module>" [color = "#e5e5e5ff", label = "logging.<module>\ncalls: 1\ntime: 0.005471s"];
    "sympy.mpmath.ctx_mp_python.PythonMPContext" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.PythonMPContext\ncalls: 1\ntime: 0.000031s"];
    "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode" [color = "#e5e5e5ff", label = "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode\ncalls: 1\ntime: 0.000401s"];
    "joblib.pool.CustomizablePickler" [color = "#e5e5e5ff", label = "joblib.pool.CustomizablePickler\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.numbers.Zero.__nonzero__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Zero.__nonzero__\ncalls: 9\ntime: 0.000033s"];
    "sympy.matrices.expressions.slice.MatrixSlice" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.slice.MatrixSlice\ncalls: 1\ntime: 0.000014s"];
    "sympy.core.operations.AssocOp" [color = "#e5e5e5ff", label = "sympy.core.operations.AssocOp\ncalls: 1\ntime: 0.000289s"];
    "sympy.utilities.memoization.decorator" [color = "#e5e5e5ff", label = "sympy.utilities.memoization.decorator\ncalls: 3\ntime: 0.000193s"];
    "json.decoder.JSONDecoder" [color = "#e5e5e5ff", label = "json.decoder.JSONDecoder\ncalls: 1\ntime: 0.000022s"];
    "sympy.integrals.transforms.make_wrapper" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.make_wrapper\ncalls: 7\ntime: 0.000510s"];
    "doctest.DebugRunner" [color = "#e5e5e5ff", label = "doctest.DebugRunner\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.basic.Not.__hash__" [color = "#e4e5e5ff", label = "sympy.core.basic.Not.__hash__\ncalls: 186\ntime: 0.002539s"];
    "sympy.core.basic.Pi._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Pi._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "decimal.InvalidOperation" [color = "#e5e5e5ff", label = "decimal.InvalidOperation\ncalls: 1\ntime: 0.000007s"];
    "_weakrefset.WeakSet.__contains__" [color = "#e5e5e5ff", label = "_weakrefset.WeakSet.__contains__\ncalls: 48\ntime: 0.000387s"];
    "sympy.functions.special.polynomials.legendre" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.legendre\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.facts.Prover._process_rule" [color = "#e2e5e5ff", label = "sympy.core.facts.Prover._process_rule\ncalls: 79\ntime: 0.049217s"];
    "RRtoolbox.lib.cache._memoizedDict_old" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache._memoizedDict_old\ncalls: 1\ntime: 0.000021s"];
    "sympy.core.numbers.One.__rmul__" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.__rmul__\ncalls: 1\ntime: 0.000381s"];
    "sympy.core.numbers.__new__" [color = "#e0e5e5ff", label = "sympy.core.numbers.__new__\ncalls: 852\ntime: 0.016089s"];
    "sympy.utilities.runtests.PyTestReporter" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.PyTestReporter\ncalls: 1\ntime: 0.000026s"];
    "sympy.polys.euclidtools.<module>" [color = "#e2e5e5ff", label = "sympy.polys.euclidtools.<module>\ncalls: 1\ntime: 0.058240s"];
    "threading.currentThread" [color = "#e5e5e5ff", label = "threading.currentThread\ncalls: 1\ntime: 0.000010s"];
    "subprocess.<module>" [color = "#e5e5e5ff", label = "subprocess.<module>\ncalls: 1\ntime: 0.000341s"];
    "numpy.lib.index_tricks.IndexExpression" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.IndexExpression\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.polyquinticconst.<module>" [color = "#e5e5e5ff", label = "sympy.polys.polyquinticconst.<module>\ncalls: 1\ntime: 0.000745s"];
    "sympy.logic.boolalg.Boolean" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Boolean\ncalls: 1\ntime: 0.000018s"];
    "sympy.plotting.plot.ContourSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.ContourSeries\ncalls: 1\ntime: 0.000010s"];
    "posixpath.dirname" [color = "#e5e5e5ff", label = "posixpath.dirname\ncalls: 21\ntime: 0.000258s"];
    "sympy.mpmath.ctx_mp.<module>" [color = "#e3e5e5ff", label = "sympy.mpmath.ctx_mp.<module>\ncalls: 1\ntime: 0.039955s"];
    "sympy.polys.compatibility.IPolys" [color = "#e5e5e5ff", label = "sympy.polys.compatibility.IPolys\ncalls: 1\ntime: 0.000314s"];
    "sympy.functions.combinatorial.numbers.lucas" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.lucas\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.One.__lt__" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.__lt__\ncalls: 12\ntime: 0.001744s"];
    "sympy.matrices.expressions.funcmatrix.FunctionMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.funcmatrix.FunctionMatrix\ncalls: 1\ntime: 0.000015s"];
    "sympy.concrete.<module>" [color = "#e4e5e5ff", label = "sympy.concrete.<module>\ncalls: 1\ntime: 0.025491s"];
    "threading._RLock._note" [color = "#e0e5e5ff", label = "threading._RLock._note\ncalls: 1.074\ntime: 0.004356s"];
    "sympy.simplify.hyperexpand.Formula" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.Formula\ncalls: 1\ntime: 0.000013s"];
    "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing.__init__\ncalls: 1\ntime: 0.000004s"];
    "repr.Repr.__init__" [color = "#e5e5e5ff", label = "repr.Repr.__init__\ncalls: 2\ntime: 0.000029s"];
    "sympy.simplify.hyperexpand.MeijerFormula" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerFormula\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.ctx_iv.<lambda>" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.<lambda>\ncalls: 45\ntime: 0.000208s"];
    "multiprocessing.TimeoutError" [color = "#e5e5e5ff", label = "multiprocessing.TimeoutError\ncalls: 1\ntime: 0.000009s"];
    "numpy._import_tools.<module>" [color = "#e5e5e5ff", label = "numpy._import_tools.<module>\ncalls: 1\ntime: 0.000415s"];
    "sympy.core.numbers.Exp1" [color = "#e5e5e5ff", label = "sympy.core.numbers.Exp1\ncalls: 1\ntime: 0.000021s"];
    "numpy.ma.core._DomainGreater.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreater.__init__\ncalls: 3\ntime: 0.000011s"];
    "sympy.sets.sets.FiniteSet" [color = "#e5e5e5ff", label = "sympy.sets.sets.FiniteSet\ncalls: 1\ntime: 0.000141s"];
    "doctest.SkipDocTestCase" [color = "#e5e5e5ff", label = "doctest.SkipDocTestCase\ncalls: 1\ntime: 0.000010s"];
    "multiprocessing.process.Process" [color = "#e5e5e5ff", label = "multiprocessing.process.Process\ncalls: 1\ntime: 0.000051s"];
    "sympy.matrices.expressions.transpose.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.transpose.<module>\ncalls: 1\ntime: 0.002776s"];
    "sympy.core.numbers.Zero.__add__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Zero.__add__\ncalls: 2\ntime: 0.000772s"];
    "sympy.core.basic.Or.__eq__" [color = "#e3e5e5ff", label = "sympy.core.basic.Or.__eq__\ncalls: 274\ntime: 0.023732s"];
    "sympy.functions.elementary.complexes.conjugate" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.conjugate\ncalls: 1\ntime: 0.000012s"];
    "sympy.matrices.immutable.<module>" [color = "#e2e5e5ff", label = "sympy.matrices.immutable.<module>\ncalls: 1\ntime: 0.071828s"];
    "sympy.core.numbers.mpf_norm" [color = "#e5e5e5ff", label = "sympy.core.numbers.mpf_norm\ncalls: 4\ntime: 0.000154s"];
    "repr.TextRepr.__init__" [color = "#e5e5e5ff", label = "repr.TextRepr.__init__\ncalls: 1\ntime: 0.000027s"];
    "logging.Handler" [color = "#e5e5e5ff", label = "logging.Handler\ncalls: 1\ntime: 0.000040s"];
    "sympy.printing.tree.<module>" [color = "#e5e5e5ff", label = "sympy.printing.tree.<module>\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.facts.StdFactKB._tell" [color = "#dfe5e5ff", label = "sympy.core.facts.StdFactKB._tell\ncalls: 1.215\ntime: 0.007368s"];
    "sympy.sets.sets.Interval" [color = "#e5e5e5ff", label = "sympy.sets.sets.Interval\ncalls: 1\ntime: 0.000167s"];
    "sympy.sets.<module>" [color = "#e3e5e5ff", label = "sympy.sets.<module>\ncalls: 1\ntime: 0.034572s"];
    "numbers.Complex" [color = "#e5e5e5ff", label = "numbers.Complex\ncalls: 1\ntime: 0.000536s"];
    "sre_parse.Tokenizer.match" [color = "#dee4e5ff", label = "sre_parse.Tokenizer.match\ncalls: 1.246\ntime: 0.018863s"];
    "numpy.ma.core._minimum_operation" [color = "#e5e5e5ff", label = "numpy.ma.core._minimum_operation\ncalls: 1\ntime: 0.000006s"];
    "joblib.hashing.NumpyHasher" [color = "#e5e5e5ff", label = "joblib.hashing.NumpyHasher\ncalls: 1\ntime: 0.000013s"];
    "decimal.__new__" [color = "#e5e5e5ff", label = "decimal.__new__\ncalls: 6\ntime: 0.000161s"];
    "sympy.plotting.plot.Line3DBaseSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.Line3DBaseSeries\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.evaluate.<module>" [color = "#e4e5e5ff", label = "sympy.core.evaluate.<module>\ncalls: 1\ntime: 0.017526s"];
    "numpy.ma.extras.MAxisConcatenator" [color = "#e5e5e5ff", label = "numpy.ma.extras.MAxisConcatenator\ncalls: 1\ntime: 0.000013s"];
    "distutils.version.Version" [color = "#e5e5e5ff", label = "distutils.version.Version\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.polyerrors.MultivariatePolynomialError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.MultivariatePolynomialError\ncalls: 1\ntime: 0.000005s"];
    "sympy.integrals.transforms.<module>" [color = "#e1e5e5ff", label = "sympy.integrals.transforms.<module>\ncalls: 1\ntime: 0.078830s"];
    "sympy.functions.elementary.trigonometric.atan2" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.atan2\ncalls: 1\ntime: 0.000016s"];
    "sympy.printing.jscode.<module>" [color = "#e5e5e5ff", label = "sympy.printing.jscode.<module>\ncalls: 1\ntime: 0.000149s"];
    "logging.PlaceHolder" [color = "#e5e5e5ff", label = "logging.PlaceHolder\ncalls: 1\ntime: 0.000013s"];
    "numpy.core.numeric.geterr" [color = "#e5e5e5ff", label = "numpy.core.numeric.geterr\ncalls: 2\ntime: 0.000040s"];
    "sympy.strategies.util.assoc" [color = "#e5e5e5ff", label = "sympy.strategies.util.assoc\ncalls: 1\ntime: 0.000008s"];
    "doctest.<module>" [color = "#e0e5e5ff", label = "doctest.<module>\ncalls: 1\ntime: 0.098410s"];
    "numpy.ma.core._frommethod.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod.getdoc\ncalls: 23\ntime: 0.006895s"];
    "numpy.ma.core._MaskedPrintOption" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedPrintOption\ncalls: 1\ntime: 0.000014s"];
    "sympy.core.facts.FactRules.__init__" [color = "#c5d8e5ff", label = "sympy.core.facts.FactRules.__init__\ncalls: 1\ntime: 0.652323s"];
    "sympy.polys.rings.PolyElement" [color = "#e5e5e5ff", label = "sympy.polys.rings.PolyElement\ncalls: 1\ntime: 0.000156s"];
    "sympy.matrices.matrices.MatrixError" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.MatrixError\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.basic.preorder_traversal.__init__" [color = "#e5e5e5ff", label = "sympy.core.basic.preorder_traversal.__init__\ncalls: 2\ntime: 0.000014s"];
    "numpy.core.getlimits.iinfo.max" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo.max\ncalls: 2\ntime: 0.000024s"];
    "sympy.core.logic.AndOr_Base" [color = "#e5e5e5ff", label = "sympy.core.logic.AndOr_Base\ncalls: 1\ntime: 0.000008s"];
    "sympy.printing.codeprinter.<module>" [color = "#e5e5e5ff", label = "sympy.printing.codeprinter.<module>\ncalls: 1\ntime: 0.002048s"];
    "joblib.hashing._ConsistentSet" [color = "#e5e5e5ff", label = "joblib.hashing._ConsistentSet\ncalls: 1\ntime: 0.000013s"];
    "sympy.series.gruntz.<module>" [color = "#e5e5e5ff", label = "sympy.series.gruntz.<module>\ncalls: 1\ntime: 0.001278s"];
    "sympy.core.compatibility.lru_cache" [color = "#e5e5e5ff", label = "sympy.core.compatibility.lru_cache\ncalls: 76\ntime: 0.000488s"];
    "fractions._operator_fallbacks" [color = "#e5e5e5ff", label = "fractions._operator_fallbacks\ncalls: 5\ntime: 0.000078s"];
    "sympy.ntheory.factor_.divisor_sigma" [color = "#e5e5e5ff", label = "sympy.ntheory.factor_.divisor_sigma\ncalls: 1\ntime: 0.000008s"];
    "posixpath.normpath" [color = "#e5e5e5ff", label = "posixpath.normpath\ncalls: 4\ntime: 0.000276s"];
    "joblib.numpy_pickle.NumpyPickler" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.NumpyPickler\ncalls: 1\ntime: 0.000022s"];
    "subprocess.CalledProcessError" [color = "#e5e5e5ff", label = "subprocess.CalledProcessError\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.basic.Equivalent.__eq__" [color = "#e5e5e5ff", label = "sympy.core.basic.Equivalent.__eq__\ncalls: 56\ntime: 0.004726s"];
    "sympy.mpmath.ctx_iv._init_builtins" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv._init_builtins\ncalls: 1\ntime: 0.003250s"];
    "multiprocessing.pool.IMapUnorderedIterator" [color = "#e5e5e5ff", label = "multiprocessing.pool.IMapUnorderedIterator\ncalls: 1\ntime: 0.000009s"];
    "joblib.pool.PicklingPool" [color = "#e5e5e5ff", label = "joblib.pool.PicklingPool\ncalls: 1\ntime: 0.000013s"];
    "sympy.utilities.enumerative.PartComponent" [color = "#e5e5e5ff", label = "sympy.utilities.enumerative.PartComponent\ncalls: 1\ntime: 0.000025s"];
    "sympy.printing.python.<module>" [color = "#e5e5e5ff", label = "sympy.printing.python.<module>\ncalls: 1\ntime: 0.000958s"];
    "sympy.sets.fancysets.Range" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.Range\ncalls: 1\ntime: 0.000025s"];
    "sympy.functions.elementary.miscellaneous.Max" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.Max\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.ctx_fp.<module>" [color = "#dbe4e5ff", label = "sympy.mpmath.ctx_fp.<module>\ncalls: 1\ntime: 0.210169s"];
    "json.encoder.<module>" [color = "#e4e5e5ff", label = "json.encoder.<module>\ncalls: 1\ntime: 0.016528s"];
    "sympy.core.symbol.<lambda>" [color = "#e5e5e5ff", label = "sympy.core.symbol.<lambda>\ncalls: 15\ntime: 0.000065s"];
    "logging.RootLogger.__init__" [color = "#e5e5e5ff", label = "logging.RootLogger.__init__\ncalls: 3\ntime: 0.000415s"];
    "sympy.core.basic.<genexpr>" [color = "#e5e5e5ff", label = "sympy.core.basic.<genexpr>\ncalls: 4\ntime: 0.000470s"];
    "sympy.sets.sets.EmptySet" [color = "#e5e5e5ff", label = "sympy.sets.sets.EmptySet\ncalls: 1\ntime: 0.000018s"];
    "pickle.Unpickler.load_false" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_false\ncalls: 2\ntime: 0.000009s"];
    "sympy.concrete.summations.<module>" [color = "#e4e5e5ff", label = "sympy.concrete.summations.<module>\ncalls: 1\ntime: 0.014608s"];
    "sympy.functions.special.hyper.meijerg" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.meijerg\ncalls: 1\ntime: 0.000026s"];
    "RRtoolbox.lib.config.<dictcomp>" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.<dictcomp>\ncalls: 1\ntime: 0.000050s"];
    "unittest.case._UnexpectedSuccess" [color = "#e5e5e5ff", label = "unittest.case._UnexpectedSuccess\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.elementary.integers.<module>" [color = "#e5e5e5ff", label = "sympy.functions.elementary.integers.<module>\ncalls: 1\ntime: 0.006022s"];
    "sympy.mpmath.libmp.libmpf.from_str" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.from_str\ncalls: 4\ntime: 0.000037s"];
    "ctypes.c_short" [color = "#e5e5e5ff", label = "ctypes.c_short\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.<module>" [color = "#9995e5ff", label = "sympy.core.<module>\ncalls: 1\ntime: 1.645560s"];
    "sympy.core.logic.fromstring" [color = "#e4e5e5ff", label = "sympy.core.logic.fromstring\ncalls: 52\ntime: 0.006185s"];
    "multiprocessing.pool.ApplyResult" [color = "#e5e5e5ff", label = "multiprocessing.pool.ApplyResult\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.facts.deduce_alpha_implications" [color = "#d9e3e5ff", label = "sympy.core.facts.deduce_alpha_implications\ncalls: 1\ntime: 0.247684s"];
    "sympy.functions.special.error_functions.erfinv" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erfinv\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib.index_tricks.nd_grid" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.nd_grid\ncalls: 1\ntime: 0.000021s"];
    "pydoc.HTMLRepr.__init__" [color = "#e5e5e5ff", label = "pydoc.HTMLRepr.__init__\ncalls: 1\ntime: 0.000086s"];
    "sympy.solvers.polysys.SolveFailed" [color = "#e5e5e5ff", label = "sympy.solvers.polysys.SolveFailed\ncalls: 1\ntime: 0.000007s"];
    "numpy._import_tools.PackageLoaderDebug" [color = "#e5e5e5ff", label = "numpy._import_tools.PackageLoaderDebug\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.polyutils.PicklableWithSlots" [color = "#e5e5e5ff", label = "sympy.polys.polyutils.PicklableWithSlots\ncalls: 1\ntime: 0.000009s"];
    "logging.Formatter.__init__" [color = "#e5e5e5ff", label = "logging.Formatter.__init__\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.domains.pythonrationalfield.PythonRationalField.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonrationalfield.PythonRationalField.__init__\ncalls: 1\ntime: 0.000004s"];
    "sympy.polys.galoistools.<module>" [color = "#e2e5e5ff", label = "sympy.polys.galoistools.<module>\ncalls: 1\ntime: 0.057315s"];
    "sympy.core.assumptions.StdFactKB" [color = "#e5e5e5ff", label = "sympy.core.assumptions.StdFactKB\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.fields.FracElement" [color = "#e5e5e5ff", label = "sympy.polys.fields.FracElement\ncalls: 1\ntime: 0.000046s"];
    "decimal.DivisionUndefined" [color = "#e5e5e5ff", label = "decimal.DivisionUndefined\ncalls: 1\ntime: 0.000006s"];
    "sympy.polys.polyoptions.Expand" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Expand\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.numbers.__neg__" [color = "#e5e5e5ff", label = "sympy.core.numbers.__neg__\ncalls: 3\ntime: 0.000014s"];
    "sympy.core.numbers.Pi" [color = "#e5e5e5ff", label = "sympy.core.numbers.Pi\ncalls: 1\ntime: 0.000019s"];
    "numpy.compat._inspect.<module>" [color = "#e5e5e5ff", label = "numpy.compat._inspect.<module>\ncalls: 1\ntime: 0.000046s"];
    "numpy.core.arrayprint.<module>" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.<module>\ncalls: 1\ntime: 0.002060s"];
    "sympy.integrals.transforms.FourierTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.FourierTransform\ncalls: 1\ntime: 0.004280s"];
    "sympy.core.sympify.CantSympify" [color = "#e5e5e5ff", label = "sympy.core.sympify.CantSympify\ncalls: 1\ntime: 0.000007s"];
    "sympy.parsing.<module>" [color = "#e5e5e5ff", label = "sympy.parsing.<module>\ncalls: 1\ntime: 0.000005s"];
    "numpy.lib.scimath.<module>" [color = "#e5e5e5ff", label = "numpy.lib.scimath.<module>\ncalls: 1\ntime: 0.000065s"];
    "sympy.polys.rootisolation.ComplexInterval" [color = "#e5e5e5ff", label = "sympy.polys.rootisolation.ComplexInterval\ncalls: 1\ntime: 0.000024s"];
    "sympy.functions.elementary.complexes.im" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.im\ncalls: 1\ntime: 0.000012s"];
    "RRtoolbox.lib.cache.NotMemorizedFunc" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.NotMemorizedFunc\ncalls: 1\ntime: 0.000008s"];
    "sympy.logic.boolalg.<module>" [color = "#e4e5e5ff", label = "sympy.logic.boolalg.<module>\ncalls: 1\ntime: 0.028865s"];
    "sympy.core.operations._from_args" [color = "#e5e5e5ff", label = "sympy.core.operations._from_args\ncalls: 7\ntime: 0.000263s"];
    "sympy.core.function.AppliedUndef" [color = "#e5e5e5ff", label = "sympy.core.function.AppliedUndef\ncalls: 1\ntime: 0.000008s"];
    "sympy.matrices.expressions.funcmatrix.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.funcmatrix.<module>\ncalls: 1\ntime: 0.002728s"];
    "sympy.sets.fancysets.Integers" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.Integers\ncalls: 1\ntime: 0.000015s"];
    "subprocess.Popen" [color = "#e5e5e5ff", label = "subprocess.Popen\ncalls: 1\ntime: 0.000042s"];
    "numpy._import_tools.PackageLoader" [color = "#e5e5e5ff", label = "numpy._import_tools.PackageLoader\ncalls: 1\ntime: 0.000031s"];
    "numpy.ma.core._arraymethod.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.core._arraymethod.getdoc\ncalls: 9\ntime: 0.000072s"];
    "sympy.core.evalf.Integer.evalf" [color = "#e5e5e5ff", label = "sympy.core.evalf.Integer.evalf\ncalls: 1\ntime: 0.000521s"];
    "sympy.plotting.plot.MatplotlibBackend" [color = "#e5e5e5ff", label = "sympy.plotting.plot.MatplotlibBackend\ncalls: 1\ntime: 0.000010s"];
    "sympy.functions.elementary.hyperbolic.<module>" [color = "#e4e5e5ff", label = "sympy.functions.elementary.hyperbolic.<module>\ncalls: 1\ntime: 0.020567s"];
    "sympy.core.coreerrors.NonCommutativeExpression" [color = "#e5e5e5ff", label = "sympy.core.coreerrors.NonCommutativeExpression\ncalls: 1\ntime: 0.000005s"];
    "numpy.lib._iotools.<module>" [color = "#e5e5e5ff", label = "numpy.lib._iotools.<module>\ncalls: 1\ntime: 0.000540s"];
    "joblib.hashing.Hasher" [color = "#e5e5e5ff", label = "joblib.hashing.Hasher\ncalls: 1\ntime: 0.000040s"];
    "numpy.ma.core._frommethod" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod\ncalls: 1\ntime: 0.000008s"];
    "sympy.sets.fancysets.ImageSet" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.ImageSet\ncalls: 1\ntime: 0.000014s"];
    "pydoc.TextDoc" [color = "#e5e5e5ff", label = "pydoc.TextDoc\ncalls: 1\ntime: 0.000215s"];
    "numpy.compat.<module>" [color = "#e5e5e5ff", label = "numpy.compat.<module>\ncalls: 1\ntime: 0.001089s"];
    "sympy.matrices.<module>" [color = "#e1e5e5ff", label = "sympy.matrices.<module>\ncalls: 1\ntime: 0.080495s"];
    "sympy.functions.elementary.trigonometric.asin" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.asin\ncalls: 1\ntime: 0.000284s"];
    "sympy.polys.factortools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.factortools.<module>\ncalls: 1\ntime: 0.000097s"];
    "sympy.core.assumptions.StdFactKB.__init__" [color = "#e1e5e5ff", label = "sympy.core.assumptions.StdFactKB.__init__\ncalls: 335\ntime: 0.053109s"];
    "sympy.core.decorators.ImaginaryUnit.binary_op_wrapper" [color = "#e5e5e5ff", label = "sympy.core.decorators.ImaginaryUnit.binary_op_wrapper\ncalls: 1\ntime: 0.003170s"];
    "sympy.plotting.plot.List2DSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.List2DSeries\ncalls: 1\ntime: 0.000008s"];
    "numpy.polynomial._polybase.ABCPolyBase" [color = "#e5e5e5ff", label = "numpy.polynomial._polybase.ABCPolyBase\ncalls: 1\ntime: 0.000332s"];
    "numpy.lib.nanfunctions.<module>" [color = "#e5e5e5ff", label = "numpy.lib.nanfunctions.<module>\ncalls: 1\ntime: 0.000056s"];
    "sympy.functions.special.bessel.BesselBase" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.BesselBase\ncalls: 1\ntime: 0.000014s"];
    "sympy.mpmath.libmp.six.X" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.X\ncalls: 1\ntime: 0.000006s"];
    "sre_parse._parse" [color = "#c2d5e5ff", label = "sre_parse._parse\ncalls: 224\ntime: 0.689280s"];
    "sre_parse._class_escape" [color = "#e5e5e5ff", label = "sre_parse._class_escape\ncalls: 54\ntime: 0.001874s"];
    "sympy.core.numbers.Infinity.__lt__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Infinity.__lt__\ncalls: 1\ntime: 0.000068s"];
    "sympy.polys.domains.mpelements.ComplexElement" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.ComplexElement\ncalls: 1\ntime: 0.000011s"];
    "numpy.ma.core._MaskedBinaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedBinaryOperation.__init__\ncalls: 18\ntime: 0.000234s"];
    "sympy.mpmath.ctx_fp.<lambda>" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_fp.<lambda>\ncalls: 17\ntime: 0.000099s"];
    "sympy.core.operations.<genexpr>" [color = "#e2e5e5ff", label = "sympy.core.operations.<genexpr>\ncalls: 383\ntime: 0.017493s"];
    "sympy.utilities.lambdify.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.lambdify.<module>\ncalls: 1\ntime: 0.001787s"];
    "numpy.ma.core._minimum_operation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._minimum_operation.__init__\ncalls: 1\ntime: 0.000008s"];
    "sympy.strategies.branch.core.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.branch.core.<module>\ncalls: 1\ntime: 0.000025s"];
    "sympy.core.compatibility.NotIterable" [color = "#e5e5e5ff", label = "sympy.core.compatibility.NotIterable\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib.function_base.add_newdoc" [color = "#e4e5e5ff", label = "numpy.lib.function_base.add_newdoc\ncalls: 272\ntime: 0.004029s"];
    "sympy.mpmath.libmp.libmpi.mpi_neg" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpi.mpi_neg\ncalls: 1\ntime: 0.000096s"];
    "sympy.ntheory.factor_.<genexpr>" [color = "#dbe4e5ff", label = "sympy.ntheory.factor_.<genexpr>\ncalls: 2.040\ntime: 0.009785s"];
    "numpy.lib._datasource._FileOpeners" [color = "#e5e5e5ff", label = "numpy.lib._datasource._FileOpeners\ncalls: 1\ntime: 0.000011s"];
    "sympy.integrals.manualintegrate.trig_rewriter" [color = "#e5e5e5ff", label = "sympy.integrals.manualintegrate.trig_rewriter\ncalls: 8\ntime: 0.000046s"];
    "sympy.sets.fancysets.<module>" [color = "#e4e5e5ff", label = "sympy.sets.fancysets.<module>\ncalls: 1\ntime: 0.012597s"];
    "warnings.simplefilter" [color = "#e5e5e5ff", label = "warnings.simplefilter\ncalls: 2\ntime: 0.000029s"];
    "sympy.mpmath.ctx_iv._wrap_mpi_function" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv._wrap_mpi_function\ncalls: 10\ntime: 0.000065s"];
    "sympy.logic.boolalg.Implies" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Implies\ncalls: 1\ntime: 0.000008s"];
    "sympy.matrices.expressions.diagonal.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.diagonal.<module>\ncalls: 1\ntime: 0.005967s"];
    "sympy.polys.polyconfig.<module>" [color = "#e5e5e5ff", label = "sympy.polys.polyconfig.<module>\ncalls: 1\ntime: 0.000908s"];
    "sympy.functions.elementary.trigonometric.acsc" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.acsc\ncalls: 1\ntime: 0.000017s"];
    "joblib.hashing._MyHash" [color = "#e5e5e5ff", label = "joblib.hashing._MyHash\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.polyoptions.Split" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Split\ncalls: 1\ntime: 0.000011s"];
    "re._compile" [color = "#c7d9e5ff", label = "re._compile\ncalls: 177\ntime: 0.607891s"];
    "sympy.functions.elementary.hyperbolic.sinh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.sinh\ncalls: 1\ntime: 0.000331s"];
    "numpy.core.getlimits.iinfo.__init__" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo.__init__\ncalls: 5\ntime: 0.000084s"];
    "sympy.polys.heuristicgcd.<module>" [color = "#e5e5e5ff", label = "sympy.polys.heuristicgcd.<module>\ncalls: 1\ntime: 0.000019s"];
    "numpy.core.arrayprint.FloatFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.FloatFormat\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.numbers.Float.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Float.__hash__\ncalls: 16\ntime: 0.000674s"];
    "sympy.geometry.line.Segment" [color = "#e5e5e5ff", label = "sympy.geometry.line.Segment\ncalls: 1\ntime: 0.000014s"];
    "sympy.functions.special.polynomials.chebyshevt" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.chebyshevt\ncalls: 1\ntime: 0.000012s"];
    "sympy.functions.special.polynomials.chebyshevu" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.chebyshevu\ncalls: 1\ntime: 0.000014s"];
    "sympy.polys.orderings.<module>" [color = "#e5e5e5ff", label = "sympy.polys.orderings.<module>\ncalls: 1\ntime: 0.000599s"];
    "numpy.polynomial.polyutils.RankWarning" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.RankWarning\ncalls: 1\ntime: 0.000008s"];
    "multiprocessing.synchronize.Condition" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Condition\ncalls: 1\ntime: 0.000021s"];
    "sympy.mpmath.functions.theta.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.theta.<module>\ncalls: 1\ntime: 0.000318s"];
    "sympy.mpmath.calculus.differentiation.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.differentiation.<module>\ncalls: 1\ntime: 0.000399s"];
    "difflib.<module>" [color = "#e5e5e5ff", label = "difflib.<module>\ncalls: 1\ntime: 0.006257s"];
    "sympy.functions.special.error_functions.<module>" [color = "#e0e5e5ff", label = "sympy.functions.special.error_functions.<module>\ncalls: 1\ntime: 0.093302s"];
    "sympy.mpmath.ctx_mp_python.__int__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__int__\ncalls: 2\ntime: 0.000126s"];
    "joblib.pool.ArrayMemmapReducer" [color = "#e5e5e5ff", label = "joblib.pool.ArrayMemmapReducer\ncalls: 1\ntime: 0.000015s"];
    "numpy.lib.twodim_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.twodim_base.<module>\ncalls: 1\ntime: 0.000193s"];
    "sympy.utilities.memoization.recurrence_memo" [color = "#e5e5e5ff", label = "sympy.utilities.memoization.recurrence_memo\ncalls: 3\ntime: 0.000022s"];
    "_weakrefset.WeakSet.__init__" [color = "#e5e5e5ff", label = "_weakrefset.WeakSet.__init__\ncalls: 81\ntime: 0.001064s"];
    "sympy.simplify.hyperexpand.MultOperator" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MultOperator\ncalls: 1\ntime: 0.000006s"];
    "sympy.matrices.matrices.MatrixBase" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.MatrixBase\ncalls: 1\ntime: 0.000480s"];
    "sympy.core.numbers.One" [color = "#e5e5e5ff", label = "sympy.core.numbers.One\ncalls: 1\ntime: 0.000017s"];
    "ctypes.c_void_p" [color = "#e5e5e5ff", label = "ctypes.c_void_p\ncalls: 1\ntime: 0.000008s"];
    "functools.wraps" [color = "#e4e5e5ff", label = "functools.wraps\ncalls: 142\ntime: 0.000880s"];
    "sympy.printing.lambdarepr.NumExprPrinter" [color = "#e5e5e5ff", label = "sympy.printing.lambdarepr.NumExprPrinter\ncalls: 1\ntime: 0.000034s"];
    "sympy.polys.domains.mpelements.MPContext" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.MPContext\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.basic.Mul.args" [color = "#e5e5e5ff", label = "sympy.core.basic.Mul.args\ncalls: 3\ntime: 0.000010s"];
    "sympy.core.symbol.__new__" [color = "#e5e5e5ff", label = "sympy.core.symbol.__new__\ncalls: 15\ntime: 0.004887s"];
    "unittest.suite.<module>" [color = "#e5e5e5ff", label = "unittest.suite.<module>\ncalls: 1\ntime: 0.000332s"];
    "sympy.core.decorators.deprecated" [color = "#e5e5e5ff", label = "sympy.core.decorators.deprecated\ncalls: 14\ntime: 0.000089s"];
    "numpy.testing.<module>" [color = "#e4e5e5ff", label = "numpy.testing.<module>\ncalls: 1\ntime: 0.027373s"];
    "sympy.polys.polyerrors.CoercionFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.CoercionFailed\ncalls: 1\ntime: 0.000006s"];
    "URule" [color = "#e5e5e5ff", label = "URule\ncalls: 1\ntime: 0.000032s"];
    "sympy.mpmath.ctx_base.Context" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_base.Context\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.NegativeInfinity" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeInfinity\ncalls: 1\ntime: 0.000522s"];
    "numpy.core.shape_base.<module>" [color = "#e5e5e5ff", label = "numpy.core.shape_base.<module>\ncalls: 1\ntime: 0.000025s"];
    "sympy.core.numbers.ImaginaryUnit" [color = "#e5e5e5ff", label = "sympy.core.numbers.ImaginaryUnit\ncalls: 1\ntime: 0.000025s"];
    "doctest.Example" [color = "#e5e5e5ff", label = "doctest.Example\ncalls: 1\ntime: 0.000012s"];
    "numpy.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.<module>\ncalls: 1\ntime: 0.008826s"];
    "decimal.Context" [color = "#e5e5e5ff", label = "decimal.Context\ncalls: 1\ntime: 0.000080s"];
    "sympy.logic.boolalg.Xor" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Xor\ncalls: 1\ntime: 0.000300s"];
    "sympy.core.basic.Predicate.__eq__" [color = "#dfe4e5ff", label = "sympy.core.basic.Predicate.__eq__\ncalls: 704\ntime: 0.064895s"];
    "sympy.plotting.plot.SurfaceOver2DRangeSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.SurfaceOver2DRangeSeries\ncalls: 1\ntime: 0.000009s"];
    "numpy.ModuleDeprecationWarning" [color = "#e5e5e5ff", label = "numpy.ModuleDeprecationWarning\ncalls: 1\ntime: 0.000012s"];
    "sympy.logic.<module>" [color = "#e4e5e5ff", label = "sympy.logic.<module>\ncalls: 1\ntime: 0.030587s"];
    "sympy.strategies.traverse.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.traverse.<module>\ncalls: 1\ntime: 0.000754s"];
    "sympy.core.logic.And.__hash__" [color = "#e5e5e5ff", label = "sympy.core.logic.And.__hash__\ncalls: 80\ntime: 0.002059s"];
    "sympy.mpmath.ctx_mp_python._constant" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python._constant\ncalls: 1\ntime: 0.000015s"];
    "decimal._Log10Memoize.__init__" [color = "#e5e5e5ff", label = "decimal._Log10Memoize.__init__\ncalls: 1\ntime: 0.000004s"];
    "sympy.integrals.transforms.InverseCosineTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseCosineTransform\ncalls: 1\ntime: 0.001661s"];
    "sympy.core.numbers.Float.__lt__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Float.__lt__\ncalls: 2\ntime: 0.001055s"];
    "ctypes.py_object" [color = "#e5e5e5ff", label = "ctypes.py_object\ncalls: 1\ntime: 0.000012s"];
    "sympy.simplify.cse_opts.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.cse_opts.<module>\ncalls: 1\ntime: 0.000026s"];
    "sympy.printing.defaults.DefaultPrinting" [color = "#e5e5e5ff", label = "sympy.printing.defaults.DefaultPrinting\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.basic.preorder_traversal._preorder_traversal" [color = "#e5e5e5ff", label = "sympy.core.basic.preorder_traversal._preorder_traversal\ncalls: 4\ntime: 0.000096s"];
    "sympy.core.mod.<module>" [color = "#e5e5e5ff", label = "sympy.core.mod.<module>\ncalls: 1\ntime: 0.002054s"];
    "sympy.mpmath.math2._mathfun" [color = "#e5e5e5ff", label = "sympy.mpmath.math2._mathfun\ncalls: 4\ntime: 0.000038s"];
    "sympy.core.function.And.func" [color = "#e5e5e5ff", label = "sympy.core.function.And.func\ncalls: 1\ntime: 0.000003s"];
    "sympy.polys.rings.<module>" [color = "#e5e5e5ff", label = "sympy.polys.rings.<module>\ncalls: 1\ntime: 0.003786s"];
    "sympy.mpmath.libmp.six.exec_" [color = "#e4e5e5ff", label = "sympy.mpmath.libmp.six.exec_\ncalls: 8\ntime: 0.011434s"];
    "repr.<module>" [color = "#e5e5e5ff", label = "repr.<module>\ncalls: 1\ntime: 0.000150s"];
    "sympy.core.mul.NC_Marker" [color = "#e5e5e5ff", label = "sympy.core.mul.NC_Marker\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.domains.groundtypes.GMPYInteger.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.groundtypes.GMPYInteger.__init__\ncalls: 2\ntime: 0.000009s"];
    "numpy.lib.stride_tricks.<module>" [color = "#e5e5e5ff", label = "numpy.lib.stride_tricks.<module>\ncalls: 1\ntime: 0.000108s"];
    "sympy.mpmath.calculus.optimization.Ridder" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Ridder\ncalls: 1\ntime: 0.000014s"];
    "sympy.core.basic.Basic" [color = "#e5e5e5ff", label = "sympy.core.basic.Basic\ncalls: 1\ntime: 0.001531s"];
    "sympy.core.function.UndefinedFunction" [color = "#e5e5e5ff", label = "sympy.core.function.UndefinedFunction\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.libmp.six.X.__len__" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.X.__len__\ncalls: 1\ntime: 0.000005s"];
    "numpy.lib.npyio.NpzFile" [color = "#e5e5e5ff", label = "numpy.lib.npyio.NpzFile\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.basic.Rational.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Rational.__hash__\ncalls: 4\ntime: 0.000046s"];
    "sympy.utilities.decorator.threaded_factory" [color = "#e1e5e5ff", label = "sympy.utilities.decorator.threaded_factory\ncalls: 3\ntime: 0.081451s"];
    "json.encoder.JSONEncoder" [color = "#e5e5e5ff", label = "json.encoder.JSONEncoder\ncalls: 1\ntime: 0.000025s"];
    "sympy.utilities.timeutils.timethis" [color = "#e5e5e5ff", label = "sympy.utilities.timeutils.timethis\ncalls: 4\ntime: 0.000028s"];
    "sympy.utilities.runtests.SymPyDocTestFinder" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.SymPyDocTestFinder\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.bessel.airybiprime" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.airybiprime\ncalls: 1\ntime: 0.000015s"];
    "joblib.<module>" [color = "#dee4e5ff", label = "joblib.<module>\ncalls: 1\ntime: 0.141795s"];
    "numpy.core.numerictypes._add_integer_aliases" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._add_integer_aliases\ncalls: 1\ntime: 0.000321s"];
    "sre_parse.Tokenizer.__init__" [color = "#e5e5e5ff", label = "sre_parse.Tokenizer.__init__\ncalls: 57\ntime: 0.002305s"];
    "sympy.mpmath.usertools.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.usertools.<module>\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.domains.domainelement.DomainElement" [color = "#e5e5e5ff", label = "sympy.polys.domains.domainelement.DomainElement\ncalls: 1\ntime: 0.000008s"];
    "abc.register" [color = "#e4e5e5ff", label = "abc.register\ncalls: 13\ntime: 0.011080s"];
    "sympy.assumptions.ask.<module>" [color = "#cedee5ff", label = "sympy.assumptions.ask.<module>\ncalls: 1\ntime: 0.470917s"];
    "timeit.<module>" [color = "#e5e5e5ff", label = "timeit.<module>\ncalls: 1\ntime: 0.000097s"];
    "sympy.polys.monomials.Monomial" [color = "#e5e5e5ff", label = "sympy.polys.monomials.Monomial\ncalls: 1\ntime: 0.000024s"];
    "sympy.polys.solvers.RawMatrix" [color = "#e5e5e5ff", label = "sympy.polys.solvers.RawMatrix\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.rootisolation.<module>" [color = "#e5e5e5ff", label = "sympy.polys.rootisolation.<module>\ncalls: 1\ntime: 0.000637s"];
    "joblib._multiprocessing_helpers.<module>" [color = "#e4e5e5ff", label = "joblib._multiprocessing_helpers.<module>\ncalls: 1\ntime: 0.018921s"];
    "sympy.geometry.point.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.point.<module>\ncalls: 1\ntime: 0.005395s"];
    "sympy.core.power.Pow._eval_is_rational" [color = "#e5e5e5ff", label = "sympy.core.power.Pow._eval_is_rational\ncalls: 1\ntime: 0.001603s"];
    "sympy.core.basic.class_key" [color = "#e5e5e5ff", label = "sympy.core.basic.class_key\ncalls: 2\ntime: 0.000009s"];
    "RRtoolbox.lib.directory.checkFile" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.checkFile\ncalls: 1\ntime: 0.000167s"];
    "sympy.core.basic.Not._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Not._hashable_content\ncalls: 38\ntime: 0.000141s"];
    "sympy.concrete.gosper.<module>" [color = "#e4e5e5ff", label = "sympy.concrete.gosper.<module>\ncalls: 1\ntime: 0.011935s"];
    "sympy.core.compatibility.metaclass" [color = "#e5e5e5ff", label = "sympy.core.compatibility.metaclass\ncalls: 50\ntime: 0.000391s"];
    "numpy.ma.core._DomainGreater" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreater\ncalls: 1\ntime: 0.000009s"];
    "UserDict.WeakValueDictionary.__init__" [color = "#e5e5e5ff", label = "UserDict.WeakValueDictionary.__init__\ncalls: 2\ntime: 0.000025s"];
    "multiprocessing.pool.IMapIterator" [color = "#e5e5e5ff", label = "multiprocessing.pool.IMapIterator\ncalls: 1\ntime: 0.000020s"];
    "sympy.polys.domains.realfield.RealField" [color = "#e5e5e5ff", label = "sympy.polys.domains.realfield.RealField\ncalls: 1\ntime: 0.000037s"];
    "numpy.compat.py3k.<module>" [color = "#e5e5e5ff", label = "numpy.compat.py3k.<module>\ncalls: 1\ntime: 0.000045s"];
    "sympy.logic.boolalg.Not" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Not\ncalls: 1\ntime: 0.000010s"];
    "RRtoolbox.lib.directory.getPath" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.getPath\ncalls: 1\ntime: 0.000472s"];
    "numpy.testing.utils.<module>" [color = "#e5e5e5ff", label = "numpy.testing.utils.<module>\ncalls: 1\ntime: 0.000596s"];
    "sympy.core.assumptions.__init__" [color = "#c7d9e5ff", label = "sympy.core.assumptions.__init__\ncalls: 316\ntime: 0.592337s"];
    "sympy.printing.lambdarepr.LambdaPrinter" [color = "#e5e5e5ff", label = "sympy.printing.lambdarepr.LambdaPrinter\ncalls: 1\ntime: 0.000014s"];
    "sympy.polys.polyerrors.RefinementFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.RefinementFailed\ncalls: 1\ntime: 0.000005s"];
    "sympy.polys.domains.pythonintegerring.PythonIntegerRing.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonintegerring.PythonIntegerRing.__init__\ncalls: 1\ntime: 0.000004s"];
    "numpy.core.records.<module>" [color = "#e5e5e5ff", label = "numpy.core.records.<module>\ncalls: 1\ntime: 0.000364s"];
    "multiprocessing.synchronize.SemLock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.SemLock\ncalls: 1\ntime: 0.000020s"];
    "sympy.polys.polyoptions.Sort" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Sort\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.combinatorial.factorials.MultiFactorial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.MultiFactorial\ncalls: 1\ntime: 0.000005s"];
    "multiprocessing.synchronize.Semaphore._make_methods" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Semaphore._make_methods\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.sympify.sympify" [color = "#d4e1e5ff", label = "sympy.core.sympify.sympify\ncalls: 2.586\ntime: 0.110287s"];
    "sympy.printing.octave.OctaveCodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.octave.OctaveCodePrinter\ncalls: 1\ntime: 0.000055s"];
    "joblib.parallel.BatchedCalls" [color = "#e5e5e5ff", label = "joblib.parallel.BatchedCalls\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.logic.__new__" [color = "#b4c5e5ff", label = "sympy.core.logic.__new__\ncalls: 9.255\ntime: 0.139639s"];
    "sympy.geometry.util.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.util.<module>\ncalls: 1\ntime: 0.000026s"];
    "sympy.polys.monomials.MonomialOps" [color = "#e5e5e5ff", label = "sympy.polys.monomials.MonomialOps\ncalls: 1\ntime: 0.000015s"];
    "sympy.assumptions.assume.<module>" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.<module>\ncalls: 1\ntime: 0.004374s"];
    "sympy.functions.special.hyper.HyperRep_atanh" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_atanh\ncalls: 1\ntime: 0.000011s"];
    "sympy.matrices.expressions.matexpr.Identity" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.Identity\ncalls: 1\ntime: 0.000017s"];
    "joblib.parallel.WorkerInterrupt" [color = "#e5e5e5ff", label = "joblib.parallel.WorkerInterrupt\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.special.gamma_functions.loggamma" [color = "#e5e5e5ff", label = "sympy.functions.special.gamma_functions.loggamma\ncalls: 1\ntime: 0.000014s"];
    "warnings.filterwarnings" [color = "#e4e5e5ff", label = "warnings.filterwarnings\ncalls: 4\ntime: 0.010759s"];
    "sympy.core.numbers.Float._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.numbers.Float._hashable_content\ncalls: 2\ntime: 0.000007s"];
    "sympy.geometry.line3d.Ray3D" [color = "#e5e5e5ff", label = "sympy.geometry.line3d.Ray3D\ncalls: 1\ntime: 0.000026s"];
    "sympy.core.facts.apply_beta_to_alpha_route" [color = "#d4e1e5ff", label = "sympy.core.facts.apply_beta_to_alpha_route\ncalls: 1\ntime: 0.342948s"];
    "sympy.core.facts.FactRules" [color = "#e5e5e5ff", label = "sympy.core.facts.FactRules\ncalls: 1\ntime: 0.000007s"];
    "sympy.ntheory.residue_ntheory.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.residue_ntheory.<module>\ncalls: 1\ntime: 0.002099s"];
    "pickle.Unpickler.find_class" [color = "#e5e5e5ff", label = "pickle.Unpickler.find_class\ncalls: 1\ntime: 0.001044s"];
    "pickle.Unpickler.load_setitems" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_setitems\ncalls: 9\ntime: 0.000490s"];
    "numbers.Rational" [color = "#e5e5e5ff", label = "numbers.Rational\ncalls: 1\ntime: 0.000017s"];
    "atexit.<module>" [color = "#e5e5e5ff", label = "atexit.<module>\ncalls: 1\ntime: 0.000043s"];
    "sympy.sets.sets.Union" [color = "#e5e5e5ff", label = "sympy.sets.sets.Union\ncalls: 1\ntime: 0.000129s"];
    "sympy.plotting.intervalmath.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.intervalmath.<module>\ncalls: 1\ntime: 0.001918s"];
    "sympy.matrices.immutable.ImmutableSparseMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.immutable.ImmutableSparseMatrix\ncalls: 1\ntime: 0.000014s"];
    "numpy.lib.index_tricks.IndexExpression.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.IndexExpression.__init__\ncalls: 2\ntime: 0.000009s"];
    "platform.<module>" [color = "#dce4e5ff", label = "platform.<module>\ncalls: 1\ntime: 0.180940s"];
    "sympy.mpmath.identification.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.identification.<module>\ncalls: 1\ntime: 0.000163s"];
    "sympy.simplify.hyperexpand.MeijerFormulaCollection" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerFormulaCollection\ncalls: 1\ntime: 0.000007s"];
    "pdb.Pdb" [color = "#e5e5e5ff", label = "pdb.Pdb\ncalls: 1\ntime: 0.000144s"];
    "sre_compile._optimize_charset" [color = "#e3e5e5ff", label = "sre_compile._optimize_charset\ncalls: 144\ntime: 0.025828s"];
    "pkgutil.register" [color = "#e5e5e5ff", label = "pkgutil.register\ncalls: 1\ntime: 0.000008s"];
    "sympy.external.<module>" [color = "#e5e5e5ff", label = "sympy.external.<module>\ncalls: 1\ntime: 0.001298s"];
    "doctest.Tester" [color = "#e5e5e5ff", label = "doctest.Tester\ncalls: 1\ntime: 0.000012s"];
    "sympy.logic.inference.<module>" [color = "#e5e5e5ff", label = "sympy.logic.inference.<module>\ncalls: 1\ntime: 0.000191s"];
    "sympy.core.basic.Implies.__eq__" [color = "#e4e5e5ff", label = "sympy.core.basic.Implies.__eq__\ncalls: 128\ntime: 0.011009s"];
    "sympy.core.sympify._sympify" [color = "#d7e2e5ff", label = "sympy.core.sympify._sympify\ncalls: 1.967\ntime: 0.106138s"];
    "numpy.ma.core._DomainSafeDivide" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainSafeDivide\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.hyper.HyperRep_cosasin" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_cosasin\ncalls: 1\ntime: 0.000011s"];
    "pdb.<module>" [color = "#e5e5e5ff", label = "pdb.<module>\ncalls: 1\ntime: 0.003963s"];
    "warnings.catch_warnings.__enter__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__enter__\ncalls: 1\ntime: 0.000013s"];
    "encodings.hex_codec.IncrementalDecoder" [color = "#e5e5e5ff", label = "encodings.hex_codec.IncrementalDecoder\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.basic.ImaginaryUnit.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.ImaginaryUnit.__hash__\ncalls: 1\ntime: 0.000028s"];
    "RRtoolbox.lib.directory.decorator" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.decorator\ncalls: 1\ntime: 0.000078s"];
    "sympy.polys.polyerrors.ModularGCDFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.ModularGCDFailed\ncalls: 1\ntime: 0.000005s"];
    "sympy.utilities.<module>" [color = "#d6e2e5ff", label = "sympy.utilities.<module>\ncalls: 1\ntime: 0.316432s"];
    "sympy.printing.pretty.pretty.<module>" [color = "#e4e5e5ff", label = "sympy.printing.pretty.pretty.<module>\ncalls: 1\ntime: 0.017273s"];
    "decimal.<genexpr>" [color = "#e5e5e5ff", label = "decimal.<genexpr>\ncalls: 54\ntime: 0.000262s"];
    "bdb.BdbQuit" [color = "#e5e5e5ff", label = "bdb.BdbQuit\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.facts.StdFactKB.deduce_all_facts" [color = "#e2e5e5ff", label = "sympy.core.facts.StdFactKB.deduce_all_facts\ncalls: 91\ntime: 0.054534s"];
    "sympy.core.numbers.NaN.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.NaN.__eq__\ncalls: 10\ntime: 0.000043s"];
    "sympy.core.numbers.NegativeOne._eval_is_zero" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeOne._eval_is_zero\ncalls: 1\ntime: 0.000004s"];
    "numpy.ma.core._convert2ma" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma\ncalls: 1\ntime: 0.000010s"];
    "sympy.integrals.meijerint._CoeffExpValueError" [color = "#e5e5e5ff", label = "sympy.integrals.meijerint._CoeffExpValueError\ncalls: 1\ntime: 0.000006s"];
    "joblib.parallel.BatchCompletionCallBack" [color = "#e5e5e5ff", label = "joblib.parallel.BatchCompletionCallBack\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.rootoftools.<module>" [color = "#e2e5e5ff", label = "sympy.polys.rootoftools.<module>\ncalls: 1\ntime: 0.055558s"];
    "sympy.external.importtools.import_module" [color = "#e5e5e5ff", label = "sympy.external.importtools.import_module\ncalls: 2\ntime: 0.000835s"];
    "sympy.functions.elementary.hyperbolic.acoth" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.acoth\ncalls: 1\ntime: 0.000280s"];
    "sympy.tensor.indexed.IndexedBase" [color = "#e5e5e5ff", label = "sympy.tensor.indexed.IndexedBase\ncalls: 1\ntime: 0.000021s"];
    "inspect.getargs" [color = "#e3e5e5ff", label = "inspect.getargs\ncalls: 182\ntime: 0.015383s"];
    "sympy.functions.special.bessel.hankel2" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.hankel2\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.special.bessel.hankel1" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.hankel1\ncalls: 1\ntime: 0.000008s"];
    "sympy.utilities.iterables.topological_sort" [color = "#e5e5e5ff", label = "sympy.utilities.iterables.topological_sort\ncalls: 1\ntime: 0.001376s"];
    "numbers.Integral" [color = "#e5e5e5ff", label = "numbers.Integral\ncalls: 1\ntime: 0.000402s"];
    "ctypes.c_byte" [color = "#e5e5e5ff", label = "ctypes.c_byte\ncalls: 1\ntime: 0.000007s"];
    "sympy.tensor.indexed.Idx" [color = "#e5e5e5ff", label = "sympy.tensor.indexed.Idx\ncalls: 1\ntime: 0.000016s"];
    "sympy.polys.domains.groundtypes.<module>" [color = "#e3e5e5ff", label = "sympy.polys.domains.groundtypes.<module>\ncalls: 1\ntime: 0.036891s"];
    "sympy.core.facts.StdFactKB.<genexpr>" [color = "#e0e5e5ff", label = "sympy.core.facts.StdFactKB.<genexpr>\ncalls: 1.078\ntime: 0.004645s"];
    "sre_parse.Pattern.__init__" [color = "#e5e5e5ff", label = "sre_parse.Pattern.__init__\ncalls: 57\ntime: 0.000539s"];
    "sympy.integrals.transforms.MellinTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.MellinTransform\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.mul._mulsort" [color = "#e5e5e5ff", label = "sympy.core.mul._mulsort\ncalls: 7\ntime: 0.000856s"];
    "unittest.result.failfast" [color = "#e5e5e5ff", label = "unittest.result.failfast\ncalls: 3\ntime: 0.000298s"];
    "sympy.mpmath.libmp.libmpf.from_man_exp" [color = "#e1e5e5ff", label = "sympy.mpmath.libmp.libmpf.from_man_exp\ncalls: 430\ntime: 0.033057s"];
    "pydoc.ModuleScanner" [color = "#e5e5e5ff", label = "pydoc.ModuleScanner\ncalls: 1\ntime: 0.000015s"];
    "sympy.functions.elementary.complexes.transpose" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.transpose\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.domains.domain.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.domain.<module>\ncalls: 1\ntime: 0.000969s"];
    "RRtoolbox.lib.directory.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.<module>\ncalls: 1\ntime: 0.000181s"];
    "sympy.functions.special.hyper.TupleArg" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.TupleArg\ncalls: 1\ntime: 0.000007s"];
    "sre_parse._parse_sub" [color = "#c1d4e5ff", label = "sre_parse._parse_sub\ncalls: 198\ntime: 0.715921s"];
    "multiprocessing.synchronize.Semaphore" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Semaphore\ncalls: 1\ntime: 0.000011s"];
    "sympy.concrete.products.Product" [color = "#e5e5e5ff", label = "sympy.concrete.products.Product\ncalls: 1\ntime: 0.000023s"];
    "sympy.polys.polyerrors.EvaluationFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.EvaluationFailed\ncalls: 1\ntime: 0.000006s"];
    "sympy.mpmath.identification.IdentificationMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.identification.IdentificationMethods\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.assumptions.as_property" [color = "#9995e5ff", label = "sympy.core.assumptions.as_property\ncalls: 16.583\ntime: 0.072147s"];
    "sympy.core.numbers.Infinity.__neg__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Infinity.__neg__\ncalls: 1\ntime: 0.000004s"];
    "sympy.core.singleton.Singleton" [color = "#e5e5e5ff", label = "sympy.core.singleton.Singleton\ncalls: 1\ntime: 0.000007s"];
    "numpy.lib.ufunclike.<module>" [color = "#e5e5e5ff", label = "numpy.lib.ufunclike.<module>\ncalls: 1\ntime: 0.000019s"];
    "multiprocessing.forking.Popen" [color = "#e5e5e5ff", label = "multiprocessing.forking.Popen\ncalls: 1\ntime: 0.000017s"];
    "sympy.polys.domains.ring.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.ring.<module>\ncalls: 1\ntime: 0.000146s"];
    "sympy.integrals.integrals.Integral" [color = "#e5e5e5ff", label = "sympy.integrals.integrals.Integral\ncalls: 1\ntime: 0.000022s"];
    "numpy.core.numeric.ComplexWarning" [color = "#e5e5e5ff", label = "numpy.core.numeric.ComplexWarning\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.containers.Tuple.__iter__" [color = "#e5e5e5ff", label = "sympy.core.containers.Tuple.__iter__\ncalls: 1\ntime: 0.000024s"];
    "sympy.core.compatibility.u" [color = "#e5e5e5ff", label = "sympy.core.compatibility.u\ncalls: 5\ntime: 0.000032s"];
    "numpy.fft.info.<module>" [color = "#e5e5e5ff", label = "numpy.fft.info.<module>\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.functions.functions.defun_static" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.defun_static\ncalls: 1\ntime: 0.000010s"];
    "sympy.assumptions.ask_generated.<module>" [color = "#d8e3e5ff", label = "sympy.assumptions.ask_generated.<module>\ncalls: 1\ntime: 0.259821s"];
    "RRtoolbox.lib.directory.directory.update_left" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.directory.update_left\ncalls: 3\ntime: 0.000999s"];
    "sympy.functions.elementary.trigonometric.TrigonometricFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.TrigonometricFunction\ncalls: 1\ntime: 0.000011s"];
    "sympy.matrices.expressions.<module>" [color = "#e2e5e5ff", label = "sympy.matrices.expressions.<module>\ncalls: 1\ntime: 0.066279s"];
    "sympy.printing.pretty.<module>" [color = "#e4e5e5ff", label = "sympy.printing.pretty.<module>\ncalls: 1\ntime: 0.018865s"];
    "unittest.runner.<module>" [color = "#e5e5e5ff", label = "unittest.runner.<module>\ncalls: 1\ntime: 0.000900s"];
    "threading._RLock.release" [color = "#e2e5e5ff", label = "threading._RLock.release\ncalls: 537\ntime: 0.014771s"];
    "sympy.core.facts.Prover.rules_alpha" [color = "#e5e5e5ff", label = "sympy.core.facts.Prover.rules_alpha\ncalls: 1\ntime: 0.000334s"];
    "sympy.polys.domains.expressiondomain.ExpressionDomain.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.expressiondomain.ExpressionDomain.__init__\ncalls: 1\ntime: 0.000003s"];
    "numpy.ma.core.MaskedIterator" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedIterator\ncalls: 1\ntime: 0.000011s"];
    "sympy.sets.sets.Set" [color = "#e5e5e5ff", label = "sympy.sets.sets.Set\ncalls: 1\ntime: 0.000289s"];
    "sympy.core.basic._make_find_query" [color = "#e5e5e5ff", label = "sympy.core.basic._make_find_query\ncalls: 2\ntime: 0.000094s"];
    "sympy.polys.domains.expressiondomain.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.expressiondomain.<module>\ncalls: 1\ntime: 0.000568s"];
    "inspect.isfunction" [color = "#e4e5e5ff", label = "inspect.isfunction\ncalls: 182\ntime: 0.000800s"];
    "numpy.core.numeric.errstate.__enter__" [color = "#e5e5e5ff", label = "numpy.core.numeric.errstate.__enter__\ncalls: 1\ntime: 0.000163s"];
    "joblib.numpy_pickle.<module>" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.<module>\ncalls: 1\ntime: 0.000710s"];
    "sre_parse.SubPattern.getwidth" [color = "#dee4e5ff", label = "sre_parse.SubPattern.getwidth\ncalls: 638\ntime: 0.074936s"];
    "sympy.functions.elementary.miscellaneous.sqrt" [color = "#e4e5e5ff", label = "sympy.functions.elementary.miscellaneous.sqrt\ncalls: 8\ntime: 0.021415s"];
    "RRtoolbox.lib.cache.notCreatable" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.notCreatable\ncalls: 1\ntime: 0.000009s"];
    "DerivativeRule" [color = "#e5e5e5ff", label = "DerivativeRule\ncalls: 1\ntime: 0.000037s"];
    "numpy.ma.core._arraymethod.__get__" [color = "#e5e5e5ff", label = "numpy.ma.core._arraymethod.__get__\ncalls: 4\ntime: 0.000019s"];
    "sympy.printing.precedence.<module>" [color = "#e5e5e5ff", label = "sympy.printing.precedence.<module>\ncalls: 1\ntime: 0.000089s"];
    "numpy.testing.nosetester.NoseTester.__init__" [color = "#e5e5e5ff", label = "numpy.testing.nosetester.NoseTester.__init__\ncalls: 19\ntime: 0.001126s"];
    "sympy.polys.polyfuncs.<module>" [color = "#e5e5e5ff", label = "sympy.polys.polyfuncs.<module>\ncalls: 1\ntime: 0.006093s"];
    "sympy.integrals.transforms.InverseSineTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseSineTransform\ncalls: 1\ntime: 0.001696s"];
    "sympy.mpmath.ctx_iv._set_prec" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv._set_prec\ncalls: 1\ntime: 0.000085s"];
    "sympy.functions.special.polynomials.chebyshevu_root" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.chebyshevu_root\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.Integer.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.__hash__\ncalls: 99\ntime: 0.000343s"];
    "sympy.core.basic.preorder_traversal" [color = "#e5e5e5ff", label = "sympy.core.basic.preorder_traversal\ncalls: 1\ntime: 0.000014s"];
    "sympy.simplify.hyperexpand.G_Function" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.G_Function\ncalls: 1\ntime: 0.000014s"];
    "sympy.functions.special.gamma_functions.<module>" [color = "#dfe5e5ff", label = "sympy.functions.special.gamma_functions.<module>\ncalls: 1\ntime: 0.116333s"];
    "sympy.mpmath.ctx_mp_python.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__init__\ncalls: 1\ntime: 0.000083s"];
    "ctypes.c_long" [color = "#e5e5e5ff", label = "ctypes.c_long\ncalls: 1\ntime: 0.000007s"];
    "weakref.WeakValueDictionary.__init__" [color = "#e5e5e5ff", label = "weakref.WeakValueDictionary.__init__\ncalls: 2\ntime: 0.000156s"];
    "sympy.core.numbers.GoldenRatio" [color = "#e5e5e5ff", label = "sympy.core.numbers.GoldenRatio\ncalls: 1\ntime: 0.000034s"];
    "pydoc.<module>" [color = "#e4e5e5ff", label = "pydoc.<module>\ncalls: 1\ntime: 0.013929s"];
    "decimal.Subnormal" [color = "#e5e5e5ff", label = "decimal.Subnormal\ncalls: 1\ntime: 0.000005s"];
    "ctypes.c_wchar" [color = "#e5e5e5ff", label = "ctypes.c_wchar\ncalls: 1\ntime: 0.000008s"];
    "sympy.geometry.curve.Curve" [color = "#e5e5e5ff", label = "sympy.geometry.curve.Curve\ncalls: 1\ntime: 0.000019s"];
    "numpy.ma.core._DomainGreaterEqual" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreaterEqual\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.facts.FactKB" [color = "#e5e5e5ff", label = "sympy.core.facts.FactKB\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib.index_tricks.RClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.RClass.__init__\ncalls: 2\ntime: 0.000081s"];
    "sympy.functions.special.bsplines.<module>" [color = "#e5e5e5ff", label = "sympy.functions.special.bsplines.<module>\ncalls: 1\ntime: 0.000028s"];
    "multiprocessing.util.Finalize" [color = "#e5e5e5ff", label = "multiprocessing.util.Finalize\ncalls: 1\ntime: 0.000018s"];
    "numpy.lib.function_base.vectorize" [color = "#e5e5e5ff", label = "numpy.lib.function_base.vectorize\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.expr.Integer._eval_is_negative" [color = "#e5e5e5ff", label = "sympy.core.expr.Integer._eval_is_negative\ncalls: 1\ntime: 0.006202s"];
    "sympy.core.logic.flatten" [color = "#e5e5e5ff", label = "sympy.core.logic.flatten\ncalls: 59\ntime: 0.001983s"];
    "sympy.calculus.finite_diff.<module>" [color = "#e5e5e5ff", label = "sympy.calculus.finite_diff.<module>\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.function.__init__" [color = "#d1e0e5ff", label = "sympy.core.function.__init__\ncalls: 182\ntime: 0.387494s"];
    "sympy.core.numbers.Rational.as_coeff_Mul" [color = "#e5e5e5ff", label = "sympy.core.numbers.Rational.as_coeff_Mul\ncalls: 1\ntime: 0.000005s"];
    "sympy.printing.ccode.CCodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.ccode.CCodePrinter\ncalls: 1\ntime: 0.000036s"];
    "sympy.core.mul.Mul" [color = "#e5e5e5ff", label = "sympy.core.mul.Mul\ncalls: 1\ntime: 0.000846s"];
    "numpy.core.numeric.errstate.__init__" [color = "#e5e5e5ff", label = "numpy.core.numeric.errstate.__init__\ncalls: 1\ntime: 0.000007s"];
    "sympy.sets.sets.UniversalSet" [color = "#e5e5e5ff", label = "sympy.sets.sets.UniversalSet\ncalls: 1\ntime: 0.000018s"];
    "sympy.mpmath.libmp.libmpf.mpf_div" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_div\ncalls: 35\ntime: 0.002235s"];
    "sympy.matrices.dense.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.dense.<module>\ncalls: 1\ntime: 0.001449s"];
    "numpy.polynomial.polynomial.Polynomial" [color = "#e5e5e5ff", label = "numpy.polynomial.polynomial.Polynomial\ncalls: 1\ntime: 0.000040s"];
    "sympy.core.core.__lt__" [color = "#e5e5e5ff", label = "sympy.core.core.__lt__\ncalls: 3\ntime: 0.000115s"];
    "unittest.case.TestCase" [color = "#e5e5e5ff", label = "unittest.case.TestCase\ncalls: 1\ntime: 0.000328s"];
    "sympy.mpmath.libmp.libmpf.dps_to_prec" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.dps_to_prec\ncalls: 4\ntime: 0.000026s"];
    "sympy.functions.special.<module>" [color = "#dce4e5ff", label = "sympy.functions.special.<module>\ncalls: 1\ntime: 0.175645s"];
    "abc.abstractmethod" [color = "#e5e5e5ff", label = "abc.abstractmethod\ncalls: 49\ntime: 0.000321s"];
    "sympy.mpmath.functions.rszeta.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.rszeta.<module>\ncalls: 1\ntime: 0.000214s"];
    "sympy.core.coreerrors.<module>" [color = "#e5e5e5ff", label = "sympy.core.coreerrors.<module>\ncalls: 1\ntime: 0.000154s"];
    "sympy.functions.special.error_functions._eis" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions._eis\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.numbers.Half.__mul__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half.__mul__\ncalls: 2\ntime: 0.001656s"];
    "sympy.core.basic.Or._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Or._hashable_content\ncalls: 70\ntime: 0.000242s"];
    "sympy.core.function.Derivative" [color = "#e5e5e5ff", label = "sympy.core.function.Derivative\ncalls: 1\ntime: 0.000159s"];
    "sympy.core.singleton.__new__" [color = "#e4e5e5ff", label = "sympy.core.singleton.__new__\ncalls: 105\ntime: 0.000482s"];
    "sympy.functions.special.zeta_functions.dirichlet_eta" [color = "#e5e5e5ff", label = "sympy.functions.special.zeta_functions.dirichlet_eta\ncalls: 1\ntime: 0.000009s"];
    "unittest.suite._DebugResult" [color = "#e5e5e5ff", label = "unittest.suite._DebugResult\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.mul.Mul.as_coeff_Mul" [color = "#e5e5e5ff", label = "sympy.core.mul.Mul.as_coeff_Mul\ncalls: 1\ntime: 0.000047s"];
    "numpy.lib._datasource.Repository" [color = "#e5e5e5ff", label = "numpy.lib._datasource.Repository\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.basic.__new__" [color = "#e3e5e5ff", label = "sympy.core.basic.__new__\ncalls: 320\ntime: 0.003176s"];
    "sympy.polys.polyoptions.Options" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Options\ncalls: 1\ntime: 0.000017s"];
    "pkgutil.ImpLoader" [color = "#e5e5e5ff", label = "pkgutil.ImpLoader\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.singleton.__init__" [color = "#e1e5e5ff", label = "sympy.core.singleton.__init__\ncalls: 23\ntime: 0.073332s"];
    "sympy.solvers.inequalities.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.inequalities.<module>\ncalls: 1\ntime: 0.000049s"];
    "sympy.mpmath.ctx_mp_python.<module>" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_mp_python.<module>\ncalls: 1\ntime: 0.013212s"];
    "sympy.concrete.expr_with_intlimits.<module>" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_intlimits.<module>\ncalls: 1\ntime: 0.006548s"];
    "numpy.core.numerictypes.english_capitalize" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.english_capitalize\ncalls: 14\ntime: 0.000523s"];
    "sympy.mpmath.ctx_iv._mpq" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv._mpq\ncalls: 17\ntime: 0.006670s"];
    "sympy.logic.boolalg.Predicate.__invert__" [color = "#e4e5e5ff", label = "sympy.logic.boolalg.Predicate.__invert__\ncalls: 13\ntime: 0.016424s"];
    "numpy.lib._version.NumpyVersion" [color = "#e5e5e5ff", label = "numpy.lib._version.NumpyVersion\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.numbers.Infinity.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Infinity.__eq__\ncalls: 3\ntime: 0.000011s"];
    "sympy.functions.special.delta_functions.DiracDelta" [color = "#e5e5e5ff", label = "sympy.functions.special.delta_functions.DiracDelta\ncalls: 1\ntime: 0.000015s"];
    "sympy.functions.special.error_functions.fresnels" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.fresnels\ncalls: 1\ntime: 0.000336s"];
    "sympy.polys.domains.fractionfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.fractionfield.<module>\ncalls: 1\ntime: 0.000190s"];
    "sympy.matrices.dense.DenseMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.dense.DenseMatrix\ncalls: 1\ntime: 0.001019s"];
    "sympy.polys.domains.pythonintegerring.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonintegerring.<module>\ncalls: 1\ntime: 0.000160s"];
    "sympy.matrices.expressions.determinant.Determinant" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.determinant.Determinant\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.polyoptions.Frac" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Frac\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.math2.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.math2.<module>\ncalls: 1\ntime: 0.001022s"];
    "sympy.functions.special.error_functions.fresnelc" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.fresnelc\ncalls: 1\ntime: 0.000269s"];
    "numpy.lib.arrayterator.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arrayterator.<module>\ncalls: 1\ntime: 0.000106s"];
    "sympy.sets.sets.ProductSet" [color = "#e5e5e5ff", label = "sympy.sets.sets.ProductSet\ncalls: 1\ntime: 0.000134s"];
    "sympy.sets.fancysets.__new__" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.__new__\ncalls: 1\ntime: 0.000959s"];
    "sympy.core.facts.TautologyDetected" [color = "#e5e5e5ff", label = "sympy.core.facts.TautologyDetected\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.elementary.miscellaneous.MinMaxBase" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.MinMaxBase\ncalls: 1\ntime: 0.000016s"];
    "logging.Formatter" [color = "#e5e5e5ff", label = "logging.Formatter\ncalls: 1\ntime: 0.000020s"];
    "sympy.core.basic.Implies.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Implies.__hash__\ncalls: 64\ntime: 0.002158s"];
    "sympy.mpmath.functions.qfunctions.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.qfunctions.<module>\ncalls: 1\ntime: 0.000167s"];
    "RRtoolbox.lib.directory.correctPath" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.correctPath\ncalls: 1\ntime: 0.001174s"];
    "sympy.ntheory.factor_.perfect_power" [color = "#e5e5e5ff", label = "sympy.ntheory.factor_.perfect_power\ncalls: 2\ntime: 0.000021s"];
    "sympy.strategies.core.do_one" [color = "#e5e5e5ff", label = "sympy.strategies.core.do_one\ncalls: 3\ntime: 0.000019s"];
    "sympy.polys.numberfields.IntervalPrinter" [color = "#e5e5e5ff", label = "sympy.polys.numberfields.IntervalPrinter\ncalls: 1\ntime: 0.000008s"];
    "sympy.matrices.matrices.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.<module>\ncalls: 1\ntime: 0.002937s"];
    "pickle.PickleError" [color = "#e5e5e5ff", label = "pickle.PickleError\ncalls: 1\ntime: 0.000008s"];
    "sympy.utilities.enumerative.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.enumerative.<module>\ncalls: 1\ntime: 0.000221s"];
    "sympy.geometry.ellipse.Ellipse" [color = "#e5e5e5ff", label = "sympy.geometry.ellipse.Ellipse\ncalls: 1\ntime: 0.000137s"];
    "numpy.matrixlib.<module>" [color = "#e5e5e5ff", label = "numpy.matrixlib.<module>\ncalls: 1\ntime: 0.003382s"];
    "IntegralInfo" [color = "#e5e5e5ff", label = "IntegralInfo\ncalls: 1\ntime: 0.000026s"];
    "sympy.polys.polyconfig.configure" [color = "#e5e5e5ff", label = "sympy.polys.polyconfig.configure\ncalls: 1\ntime: 0.000720s"];
    "sympy.functions.elementary.exponential.log" [color = "#e5e5e5ff", label = "sympy.functions.elementary.exponential.log\ncalls: 1\ntime: 0.000286s"];
    "sympy.core.relational._Less" [color = "#e5e5e5ff", label = "sympy.core.relational._Less\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.elementary.miscellaneous.__new__" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.__new__\ncalls: 1\ntime: 0.001159s"];
    "RRtoolbox.lib.config.directoryManager.__getattr__" [color = "#e3e5e5ff", label = "RRtoolbox.lib.config.directoryManager.__getattr__\ncalls: 327\ntime: 0.000000s"];
    "sympy.geometry.entity.GeometryEntity" [color = "#e5e5e5ff", label = "sympy.geometry.entity.GeometryEntity\ncalls: 1\ntime: 0.000029s"];
    "sympy.core.basic.preorder_traversal.__next__" [color = "#e5e5e5ff", label = "sympy.core.basic.preorder_traversal.__next__\ncalls: 4\ntime: 0.000195s"];
    "sympy.core.compatibility._HashedSeq" [color = "#e5e5e5ff", label = "sympy.core.compatibility._HashedSeq\ncalls: 1\ntime: 0.000008s"];
    "unittest.case.FunctionTestCase" [color = "#e5e5e5ff", label = "unittest.case.FunctionTestCase\ncalls: 1\ntime: 0.000020s"];
    "numpy.linalg.linalg.LinAlgError" [color = "#e5e5e5ff", label = "numpy.linalg.linalg.LinAlgError\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.expr.Pi.__mul__" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi.__mul__\ncalls: 1\ntime: 0.004336s"];
    "ctypes._check_size" [color = "#e5e5e5ff", label = "ctypes._check_size\ncalls: 14\ntime: 0.000292s"];
    "doctest.DocTest" [color = "#e5e5e5ff", label = "doctest.DocTest\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.facts.Prover.split_alpha_beta" [color = "#e5e5e5ff", label = "sympy.core.facts.Prover.split_alpha_beta\ncalls: 3\ntime: 0.000947s"];
    "joblib.pool.<module>" [color = "#e5e5e5ff", label = "joblib.pool.<module>\ncalls: 1\ntime: 0.001657s"];
    "sympy.mpmath.calculus.quadrature.QuadratureRule" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.QuadratureRule\ncalls: 1\ntime: 0.000021s"];
    "sympy.plotting.pygletplot.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.pygletplot.<module>\ncalls: 1\ntime: 0.000110s"];
    "numpy.ma.core.get_object_signature" [color = "#e4e5e5ff", label = "numpy.ma.core.get_object_signature\ncalls: 40\ntime: 0.008955s"];
    "sympy.core.compatibility.decorating_function" [color = "#e4e5e5ff", label = "sympy.core.compatibility.decorating_function\ncalls: 76\ntime: 0.011626s"];
    "sympy.concrete.expr_with_limits.<module>" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_limits.<module>\ncalls: 1\ntime: 0.003753s"];
    "sympy.integrals.trigonometry.<module>" [color = "#e5e5e5ff", label = "sympy.integrals.trigonometry.<module>\ncalls: 1\ntime: 0.000605s"];
    "<module>" [color = "#e3e5e5ff", label = "<module>\ncalls: 45\ntime: 0.042086s"];
    "sympy.core.numbers.Pi.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Pi.__hash__\ncalls: 21\ntime: 0.000537s"];
    "sympy.core.assumptions.ManagedProperties" [color = "#e5e5e5ff", label = "sympy.core.assumptions.ManagedProperties\ncalls: 1\ntime: 0.000007s"];
    "numpy.matrixlib.defmatrix.matrix" [color = "#e5e5e5ff", label = "numpy.matrixlib.defmatrix.matrix\ncalls: 1\ntime: 0.000058s"];
    "functools.K" [color = "#e5e5e5ff", label = "functools.K\ncalls: 2\ntime: 0.000086s"];
    "sympy.concrete.expr_with_limits.AddWithLimits" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_limits.AddWithLimits\ncalls: 1\ntime: 0.000012s"];
    "sympy.series.limits.Limit" [color = "#e5e5e5ff", label = "sympy.series.limits.Limit\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.basic.NegativeInfinity.is_comparable" [color = "#e5e5e5ff", label = "sympy.core.basic.NegativeInfinity.is_comparable\ncalls: 1\ntime: 0.000011s"];
    "weakref.WeakValueDictionary.__setitem__" [color = "#e5e5e5ff", label = "weakref.WeakValueDictionary.__setitem__\ncalls: 1\ntime: 0.000150s"];
    "sympy.mpmath.functions.<module>" [color = "#e4e5e5ff", label = "sympy.mpmath.functions.<module>\ncalls: 1\ntime: 0.020088s"];
    "re.compile" [color = "#c7dae5ff", label = "re.compile\ncalls: 60\ntime: 0.604409s"];
    "sympy.functions.elementary.exponential.<module>" [color = "#e4e5e5ff", label = "sympy.functions.elementary.exponential.<module>\ncalls: 1\ntime: 0.014739s"];
    "sympy.polys.polyoptions.OptionType" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.OptionType\ncalls: 1\ntime: 0.000006s"];
    "sympy.polys.domains.simpledomain.SimpleDomain" [color = "#e5e5e5ff", label = "sympy.polys.domains.simpledomain.SimpleDomain\ncalls: 1\ntime: 0.000008s"];
    "sre_compile._compile_charset" [color = "#e3e5e5ff", label = "sre_compile._compile_charset\ncalls: 144\ntime: 0.033551s"];
    "numpy.lib._datasource.<module>" [color = "#e5e5e5ff", label = "numpy.lib._datasource.<module>\ncalls: 1\ntime: 0.000326s"];
    "sympy.polys.domains.polynomialring.PolynomialRing" [color = "#e5e5e5ff", label = "sympy.polys.domains.polynomialring.PolynomialRing\ncalls: 1\ntime: 0.000037s"];
    "numpy.lib._iotools.ConverterError" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConverterError\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.libmp.libintmath.ifac" [color = "#e4e5e5ff", label = "sympy.mpmath.libmp.libintmath.ifac\ncalls: 151\ntime: 0.004625s"];
    "joblib.memory.Memory" [color = "#e5e5e5ff", label = "joblib.memory.Memory\ncalls: 1\ntime: 0.000022s"];
    "sympy.simplify.simplify._rf" [color = "#e5e5e5ff", label = "sympy.simplify.simplify._rf\ncalls: 1\ntime: 0.000007s"];
    "sympy.printing.mathematica.MCodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.mathematica.MCodePrinter\ncalls: 1\ntime: 0.000027s"];
    "sre_compile._compile" [color = "#d2e0e5ff", label = "sre_compile._compile\ncalls: 447\ntime: 0.350795s"];
    "sympy.strategies.branch.traverse.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.branch.traverse.<module>\ncalls: 1\ntime: 0.000778s"];
    "sympy.matrices.expressions.trace.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.trace.<module>\ncalls: 1\ntime: 0.001740s"];
    "sympy.core.numbers.Integer._eval_evalf" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer._eval_evalf\ncalls: 1\ntime: 0.000317s"];
    "bdb.<module>" [color = "#e5e5e5ff", label = "bdb.<module>\ncalls: 1\ntime: 0.000431s"];
    "numpy.core.numerictypes._typedict" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._typedict\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.calculus.optimization.Muller" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Muller\ncalls: 1\ntime: 0.000011s"];
    "unittest.case._deprecate" [color = "#e5e5e5ff", label = "unittest.case._deprecate\ncalls: 7\ntime: 0.000047s"];
    "sympy.utilities.timeutils.__do_timings" [color = "#e5e5e5ff", label = "sympy.utilities.timeutils.__do_timings\ncalls: 1\ntime: 0.000074s"];
    "sympy.core.expr.Pi.__rmul__" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi.__rmul__\ncalls: 2\ntime: 0.007928s"];
    "sympy.core.relational.<module>" [color = "#e4e5e5ff", label = "sympy.core.relational.<module>\ncalls: 1\ntime: 0.017514s"];
    "sympy.polys.domains.field.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.field.<module>\ncalls: 1\ntime: 0.000929s"];
    "decimal.InvalidContext" [color = "#e5e5e5ff", label = "decimal.InvalidContext\ncalls: 1\ntime: 0.000006s"];
    "sympy.polys.groebnertools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.groebnertools.<module>\ncalls: 1\ntime: 0.000057s"];
    "sympy.core.evalf.Half.evalf" [color = "#e5e5e5ff", label = "sympy.core.evalf.Half.evalf\ncalls: 1\ntime: 0.000286s"];
    "sympy.polys.domains.mpelements.RealElement.<lambda>" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.RealElement.<lambda>\ncalls: 10\ntime: 0.000033s"];
    "sympy.printing.mathml.MathMLPrinter" [color = "#e5e5e5ff", label = "sympy.printing.mathml.MathMLPrinter\ncalls: 1\ntime: 0.000037s"];
    "sympy.mpmath.calculus.quadrature.GaussLegendre.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.GaussLegendre.__init__\ncalls: 3\ntime: 0.000027s"];
    "bdb.Bdb" [color = "#e5e5e5ff", label = "bdb.Bdb\ncalls: 1\ntime: 0.000054s"];
    "sympy.polys.polyoptions.Symmetric" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Symmetric\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.functions.functions.SpecialFunctions" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.SpecialFunctions\ncalls: 1\ntime: 0.000040s"];
    "sympy.functions.special.zeta_functions.polylog" [color = "#e5e5e5ff", label = "sympy.functions.special.zeta_functions.polylog\ncalls: 1\ntime: 0.000011s"];
    "numpy.ma.core._frommethod.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._frommethod.__init__\ncalls: 23\ntime: 0.007377s"];
    "sympy.integrals.manualintegrate.Rule" [color = "#e1e5e5ff", label = "sympy.integrals.manualintegrate.Rule\ncalls: 20\ntime: 0.081409s"];
    "sympy.polys.fglmtools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.fglmtools.<module>\ncalls: 1\ntime: 0.000023s"];
    "sympy.functions.special.tensor_functions.KroneckerDelta" [color = "#e5e5e5ff", label = "sympy.functions.special.tensor_functions.KroneckerDelta\ncalls: 1\ntime: 0.000022s"];
    "sympy.logic.boolalg.Not.__and__" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Not.__and__\ncalls: 2\ntime: 0.004346s"];
    "sympy.integrals.transforms.SineCosineTypeTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.SineCosineTypeTransform\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.power.Pow" [color = "#e5e5e5ff", label = "sympy.core.power.Pow\ncalls: 1\ntime: 0.000556s"];
    "sympy.polys.polyerrors.BasePolynomialError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.BasePolynomialError\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.orderings.GradedLexOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.GradedLexOrder\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.core.__gt__" [color = "#e5e5e5ff", label = "sympy.core.core.__gt__\ncalls: 3\ntime: 0.000120s"];
    "RRtoolbox.lib.cache.cache" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.cache\ncalls: 1\ntime: 0.000011s"];
    "sympy.sets.sets.__new__" [color = "#e4e5e5ff", label = "sympy.sets.sets.__new__\ncalls: 44\ntime: 0.023930s"];
    "os._Environ.__setitem__" [color = "#e5e5e5ff", label = "os._Environ.__setitem__\ncalls: 2\ntime: 0.000029s"];
    "sympy.core.decorators.Pi.binary_op_wrapper" [color = "#e4e5e5ff", label = "sympy.core.decorators.Pi.binary_op_wrapper\ncalls: 3\ntime: 0.012387s"];
    "sympy.logic.boolalg.BooleanTrue.__nonzero__" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanTrue.__nonzero__\ncalls: 18\ntime: 0.000066s"];
    "codecs.__new__" [color = "#e5e5e5ff", label = "codecs.__new__\ncalls: 1\ntime: 0.000037s"];
    "numpy.ma.core._DomainCheckInterval" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainCheckInterval\ncalls: 1\ntime: 0.000008s"];
    "multiprocessing.dummy.<module>" [color = "#e5e5e5ff", label = "multiprocessing.dummy.<module>\ncalls: 1\ntime: 0.002202s"];
    "sympy.matrices.expressions.matpow.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matpow.<module>\ncalls: 1\ntime: 0.002754s"];
    "sympy.mpmath.calculus.approximation.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.approximation.<module>\ncalls: 1\ntime: 0.000163s"];
    "numpy.ma.core.mvoid" [color = "#e5e5e5ff", label = "numpy.ma.core.mvoid\ncalls: 1\ntime: 0.000018s"];
    "sympy.printing.jscode.JavascriptCodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.jscode.JavascriptCodePrinter\ncalls: 1\ntime: 0.000034s"];
    "abc.__new__" [color = "#e5e5e5ff", label = "abc.__new__\ncalls: 17\ntime: 0.006633s"];
    "RRtoolbox.lib.arrayops.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.lib.arrayops.<module>\ncalls: 1\ntime: 0.000000s"];
    "sympy.polys.polyerrors.NotInvertible" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.NotInvertible\ncalls: 1\ntime: 0.000006s"];
    "ctypes.c_ulong" [color = "#e5e5e5ff", label = "ctypes.c_ulong\ncalls: 1\ntime: 0.000008s"];
    "sympy.printing.mathml.<module>" [color = "#e5e5e5ff", label = "sympy.printing.mathml.<module>\ncalls: 1\ntime: 0.000155s"];
    "sympy.mpmath.rational.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.rational.<module>\ncalls: 1\ntime: 0.001936s"];
    "sympy.mpmath.libmp.libelefun.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libelefun.<module>\ncalls: 1\ntime: 0.001359s"];
    "sympy.core.expr.<module>" [color = "#b8cae5ff", label = "sympy.core.expr.<module>\ncalls: 1\ntime: 0.932500s"];
    "joblib.numpy_pickle.ZNDArrayWrapper" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.ZNDArrayWrapper\ncalls: 1\ntime: 0.000013s"];
    "numpy.random.<module>" [color = "#e5e5e5ff", label = "numpy.random.<module>\ncalls: 1\ntime: 0.006565s"];
    "numpy.core.numeric.errstate" [color = "#e5e5e5ff", label = "numpy.core.numeric.errstate\ncalls: 1\ntime: 0.000010s"];
    "RRtoolbox.lib.directory.filterdata" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.filterdata\ncalls: 20\ntime: 0.001748s"];
    "encodings.search_function" [color = "#e5e5e5ff", label = "encodings.search_function\ncalls: 1\ntime: 0.002937s"];
    "numpy.lib.arraysetops.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arraysetops.<module>\ncalls: 1\ntime: 0.000023s"];
    "sympy.polys.domains.gmpyfinitefield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyfinitefield.<module>\ncalls: 1\ntime: 0.000996s"];
    "sympy.core.numbers.Integer.sort_key" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.sort_key\ncalls: 2\ntime: 0.000049s"];
    "numpy.ma.core._DomainGreaterEqual.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainGreaterEqual.__init__\ncalls: 2\ntime: 0.000007s"];
    "doctest._TestClass" [color = "#e5e5e5ff", label = "doctest._TestClass\ncalls: 1\ntime: 0.000008s"];
    "numpy.ma.core._maximum_operation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._maximum_operation.__init__\ncalls: 1\ntime: 0.000009s"];
    "sympy.integrals.transforms.InverseFourierTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseFourierTransform\ncalls: 1\ntime: 0.004013s"];
    "inspect.ismethod" [color = "#e4e5e5ff", label = "inspect.ismethod\ncalls: 182\ntime: 0.000852s"];
    "sympy.plotting.experimental_lambdify.Lambdifier" [color = "#e5e5e5ff", label = "sympy.plotting.experimental_lambdify.Lambdifier\ncalls: 1\ntime: 0.000074s"];
    "pickle.Unpickler.load_append" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_append\ncalls: 3\ntime: 0.000025s"];
    "ctypes.c_ushort" [color = "#e5e5e5ff", label = "ctypes.c_ushort\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.densearith.<module>" [color = "#e5e5e5ff", label = "sympy.polys.densearith.<module>\ncalls: 1\ntime: 0.000080s"];
    "sympy.mpmath.calculus.calculus.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.calculus.<module>\ncalls: 1\ntime: 0.000111s"];
    "pickle.Unpickler.load_short_binstring" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_short_binstring\ncalls: 35\ntime: 0.000216s"];
    "sympy.sets.fancysets.Naturals0" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.Naturals0\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.logic.fuzzy_bool" [color = "#e5e5e5ff", label = "sympy.core.logic.fuzzy_bool\ncalls: 15\ntime: 0.000088s"];
    "sympy.integrals.transforms.MellinTransformStripError" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.MellinTransformStripError\ncalls: 1\ntime: 0.000006s"];
    "sympy.strategies.rl.glom" [color = "#e5e5e5ff", label = "sympy.strategies.rl.glom\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.domains.gmpyrationalfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyrationalfield.<module>\ncalls: 1\ntime: 0.000232s"];
    "numpy.lib._iotools.ConverterLockError" [color = "#e5e5e5ff", label = "numpy.lib._iotools.ConverterLockError\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.basic.Integer.func" [color = "#e5e5e5ff", label = "sympy.core.basic.Integer.func\ncalls: 1\ntime: 0.000003s"];
    "sympy.core.evalf.EvalfMixin" [color = "#e5e5e5ff", label = "sympy.core.evalf.EvalfMixin\ncalls: 1\ntime: 0.000012s"];
    "Mismatch" [color = "#e5e5e5ff", label = "Mismatch\ncalls: 1\ntime: 0.000160s"];
    "sympy.mpmath.calculus.odes.ODEMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.odes.ODEMethods\ncalls: 1\ntime: 0.000008s"];
    "sympy.printing.conventions.<module>" [color = "#e5e5e5ff", label = "sympy.printing.conventions.<module>\ncalls: 1\ntime: 0.000043s"];
    "stat.S_IFMT" [color = "#e5e5e5ff", label = "stat.S_IFMT\ncalls: 3\ntime: 0.000013s"];
    "numbers.<module>" [color = "#e5e5e5ff", label = "numbers.<module>\ncalls: 1\ntime: 0.006531s"];
    "sympy.core.facts.rules_2prereq" [color = "#e5e5e5ff", label = "sympy.core.facts.rules_2prereq\ncalls: 1\ntime: 0.001280s"];
    "sympy.polys.polyoptions.Method" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Method\ncalls: 1\ntime: 0.000008s"];
    "sympy.ntheory.generate.Sieve" [color = "#e5e5e5ff", label = "sympy.ntheory.generate.Sieve\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.function.Function" [color = "#e5e5e5ff", label = "sympy.core.function.Function\ncalls: 1\ntime: 0.000308s"];
    "sympy.utilities.exceptions.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.exceptions.<module>\ncalls: 1\ntime: 0.000147s"];
    "numpy.core.records.recarray" [color = "#e5e5e5ff", label = "numpy.core.records.recarray\ncalls: 1\ntime: 0.000020s"];
    "RRtoolbox.lib.arrayops.convert.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.lib.arrayops.convert.<module>\ncalls: 1\ntime: 0.000144s"];
    "sympy.simplify.traversaltools.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.traversaltools.<module>\ncalls: 1\ntime: 0.000016s"];
    "RRtoolbox.lib.cache.objectGetter" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.objectGetter\ncalls: 1\ntime: 0.000021s"];
    "numpy.core.numerictypes._set_array_types" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._set_array_types\ncalls: 1\ntime: 0.001299s"];
    "sympy.core.numbers.Rational" [color = "#e5e5e5ff", label = "sympy.core.numbers.Rational\ncalls: 1\ntime: 0.001310s"];
    "sympy.mpmath.ctx_mp_python._set_prec" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python._set_prec\ncalls: 2\ntime: 0.000064s"];
    "ctypes.LibraryLoader.__init__" [color = "#e5e5e5ff", label = "ctypes.LibraryLoader.__init__\ncalls: 2\ntime: 0.000012s"];
    "RRtoolbox.lib.config.loadConfigFile" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.loadConfigFile\ncalls: 1\ntime: 0.009773s"];
    "sympy.core.function._coeff_isneg" [color = "#e5e5e5ff", label = "sympy.core.function._coeff_isneg\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core._arraymethod.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._arraymethod.__init__\ncalls: 9\ntime: 0.000306s"];
    "sympy.mpmath.calculus.quadrature.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.__init__\ncalls: 3\ntime: 0.000224s"];
    "sympy.matrices.sparse.MutableSparseMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.sparse.MutableSparseMatrix\ncalls: 1\ntime: 0.000019s"];
    "sympy.simplify.<module>" [color = "#e3e5e5ff", label = "sympy.simplify.<module>\ncalls: 1\ntime: 0.048059s"];
    "unittest.main.TestProgram" [color = "#e5e5e5ff", label = "unittest.main.TestProgram\ncalls: 1\ntime: 0.000019s"];
    "numpy.add_newdocs.<module>" [color = "#dee4e5ff", label = "numpy.add_newdocs.<module>\ncalls: 1\ntime: 0.149836s"];
    "sympy.matrices.expressions.matexpr.MatrixElement" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.MatrixElement\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.matrices.calculus.MatrixCalculusMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.calculus.MatrixCalculusMethods\ncalls: 1\ntime: 0.000018s"];
    "sympy.polys.polytools.GroebnerBasis" [color = "#e5e5e5ff", label = "sympy.polys.polytools.GroebnerBasis\ncalls: 1\ntime: 0.000104s"];
    "sympy.polys.domains.modularinteger.ModularInteger" [color = "#e5e5e5ff", label = "sympy.polys.domains.modularinteger.ModularInteger\ncalls: 1\ntime: 0.000041s"];
    "sympy.core.numbers.NegativeOne" [color = "#e5e5e5ff", label = "sympy.core.numbers.NegativeOne\ncalls: 1\ntime: 0.000014s"];
    "sympy.functions.special.bessel.AiryBase" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.AiryBase\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.compatibility._nodes" [color = "#e5e5e5ff", label = "sympy.core.compatibility._nodes\ncalls: 29\ntime: 0.001959s"];
    "numpy.polynomial._polybase.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial._polybase.<module>\ncalls: 1\ntime: 0.001076s"];
    "distutils.version.LooseVersion" [color = "#e5e5e5ff", label = "distutils.version.LooseVersion\ncalls: 1\ntime: 0.004887s"];
    "pickle._Stop" [color = "#e5e5e5ff", label = "pickle._Stop\ncalls: 1\ntime: 0.000006s"];
    "sympy.mpmath.ctx_iv.make_mpf" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.make_mpf\ncalls: 24\ntime: 0.000187s"];
    "RRtoolbox.lib.cache.retriever" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.retriever\ncalls: 1\ntime: 0.000019s"];
    "sympy.mpmath.libmp.libhyper.NoConvergence" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libhyper.NoConvergence\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.numbers.EulerGamma" [color = "#e5e5e5ff", label = "sympy.core.numbers.EulerGamma\ncalls: 1\ntime: 0.000030s"];
    "numpy.core.numerictypes._set_up_aliases" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._set_up_aliases\ncalls: 1\ntime: 0.000228s"];
    "sympy.geometry.ellipse.Circle" [color = "#e5e5e5ff", label = "sympy.geometry.ellipse.Circle\ncalls: 1\ntime: 0.000016s"];
    "sympy.polys.orderings.InverseOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.InverseOrder\ncalls: 1\ntime: 0.000014s"];
    "sympy.functions.special.bessel.airybi" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.airybi\ncalls: 1\ntime: 0.000329s"];
    "sympy.functions.elementary.hyperbolic.asinh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.asinh\ncalls: 1\ntime: 0.000272s"];
    "unittest.runner.TextTestResult" [color = "#e5e5e5ff", label = "unittest.runner.TextTestResult\ncalls: 1\ntime: 0.000022s"];
    "sympy.utilities.misc.debug_decorator" [color = "#e5e5e5ff", label = "sympy.utilities.misc.debug_decorator\ncalls: 6\ntime: 0.000072s"];
    "numpy.core._internal.<module>" [color = "#e2e5e5ff", label = "numpy.core._internal.<module>\ncalls: 1\ntime: 0.064167s"];
    "sympy.geometry.curve.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.curve.<module>\ncalls: 1\ntime: 0.001846s"];
    "sre_parse.SubPattern.append" [color = "#e1e5e5ff", label = "sre_parse.SubPattern.append\ncalls: 821\ntime: 0.003955s"];
    "sympy.polys.polytools.PurePoly" [color = "#e5e5e5ff", label = "sympy.polys.polytools.PurePoly\ncalls: 1\ntime: 0.000141s"];
    "random.Random.shuffle" [color = "#e5e5e5ff", label = "random.Random.shuffle\ncalls: 1\ntime: 0.000082s"];
    "sympy.mpmath.matrices.matrices._matrix" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.matrices._matrix\ncalls: 1\ntime: 0.000068s"];
    "sympy.assumptions.assume.AppliedPredicate" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.AppliedPredicate\ncalls: 1\ntime: 0.000322s"];
    "sympy.polys.polyoptions.Order" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Order\ncalls: 1\ntime: 0.000011s"];
    "sre_parse.Tokenizer.tell" [color = "#e5e5e5ff", label = "sre_parse.Tokenizer.tell\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.polyclasses.ANP" [color = "#e5e5e5ff", label = "sympy.polys.polyclasses.ANP\ncalls: 1\ntime: 0.000053s"];
    "sympy.utilities.exceptions.SymPyDeprecationWarning" [color = "#e5e5e5ff", label = "sympy.utilities.exceptions.SymPyDeprecationWarning\ncalls: 1\ntime: 0.000010s"];
    "sympy.integrals.transforms.SineTransform" [color = "#e3e5e5ff", label = "sympy.integrals.transforms.SineTransform\ncalls: 1\ntime: 0.030876s"];
    "RRtoolbox.lib.directory.getSep" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.getSep\ncalls: 2\ntime: 0.000054s"];
    "sympy.mpmath.functions.zetazeros.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.zetazeros.<module>\ncalls: 1\ntime: 0.000788s"];
    "sympy.sets.sets.FiniteSet.contains" [color = "#e5e5e5ff", label = "sympy.sets.sets.FiniteSet.contains\ncalls: 4\ntime: 0.000469s"];
    "sympy.printing.repr.ReprPrinter" [color = "#e5e5e5ff", label = "sympy.printing.repr.ReprPrinter\ncalls: 1\ntime: 0.000048s"];
    "sympy.polys.polyoptions.Wrt" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Wrt\ncalls: 1\ntime: 0.003944s"];
    "sympy.functions.special.elliptic_integrals.elliptic_pi" [color = "#e5e5e5ff", label = "sympy.functions.special.elliptic_integrals.elliptic_pi\ncalls: 1\ntime: 0.000010s"];
    "repr.Repr" [color = "#e5e5e5ff", label = "repr.Repr\ncalls: 1\ntime: 0.000020s"];
    "sympy.core.sympify.SympifyError" [color = "#e5e5e5ff", label = "sympy.core.sympify.SympifyError\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.compatibility.iterable" [color = "#e4e5e5ff", label = "sympy.core.compatibility.iterable\ncalls: 168\ntime: 0.001568s"];
    "sympy.printing.printer.Printer" [color = "#e5e5e5ff", label = "sympy.printing.printer.Printer\ncalls: 1\ntime: 0.000020s"];
    "sympy.integrals.meijerint.<module>" [color = "#e5e5e5ff", label = "sympy.integrals.meijerint.<module>\ncalls: 1\ntime: 0.000875s"];
    "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing\ncalls: 1\ntime: 0.000093s"];
    "sympy.core.core.BasicType" [color = "#e5e5e5ff", label = "sympy.core.core.BasicType\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.containers.__new__" [color = "#e5e5e5ff", label = "sympy.core.containers.__new__\ncalls: 3\ntime: 0.000315s"];
    "numpy.ma.extras._fromnxfunction.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction.__init__\ncalls: 9\ntime: 0.002143s"];
    "fractions.<module>" [color = "#e3e5e5ff", label = "fractions.<module>\ncalls: 1\ntime: 0.044467s"];
    "sympy.mpmath.functions.functions.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.<module>\ncalls: 1\ntime: 0.001626s"];
    "sympy.mpmath.calculus.odes.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.odes.<module>\ncalls: 1\ntime: 0.000137s"];
    "sympy.plotting.experimental_lambdify.lambdify" [color = "#e5e5e5ff", label = "sympy.plotting.experimental_lambdify.lambdify\ncalls: 1\ntime: 0.000008s"];
    "DecimalTuple" [color = "#e5e5e5ff", label = "DecimalTuple\ncalls: 1\ntime: 0.000087s"];
    "numpy.core.numeric.<module>" [color = "#e5e5e5ff", label = "numpy.core.numeric.<module>\ncalls: 1\ntime: 0.006006s"];
    "sympy.tensor.indexed.Indexed" [color = "#e5e5e5ff", label = "sympy.tensor.indexed.Indexed\ncalls: 1\ntime: 0.000017s"];
    "sympy.functions.special.error_functions.Li" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.Li\ncalls: 1\ntime: 0.000015s"];
    "atexit.register" [color = "#e5e5e5ff", label = "atexit.register\ncalls: 2\ntime: 0.000022s"];
    "sympy.plotting.plot.LineOver1DRangeSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.LineOver1DRangeSeries\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.assumptions.NegativeOne.getit" [color = "#e5e5e5ff", label = "sympy.core.assumptions.NegativeOne.getit\ncalls: 1\ntime: 0.002092s"];
    "sympy.strategies.core.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.core.<module>\ncalls: 1\ntime: 0.000042s"];
    "encodings.hex_codec.StreamWriter" [color = "#e5e5e5ff", label = "encodings.hex_codec.StreamWriter\ncalls: 1\ntime: 0.000012s"];
    "sympy.functions.special.gamma_functions.lowergamma" [color = "#e5e5e5ff", label = "sympy.functions.special.gamma_functions.lowergamma\ncalls: 1\ntime: 0.000016s"];
    "joblib.memory.MemorizedFunc" [color = "#e5e5e5ff", label = "joblib.memory.MemorizedFunc\ncalls: 1\ntime: 0.000046s"];
    "sympy.polys.polyerrors.FlagError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.FlagError\ncalls: 1\ntime: 0.000005s"];
    "numpy.polynomial.laguerre.Laguerre" [color = "#e5e5e5ff", label = "numpy.polynomial.laguerre.Laguerre\ncalls: 1\ntime: 0.000025s"];
    "weakref.__new__" [color = "#e5e5e5ff", label = "weakref.__new__\ncalls: 1\ntime: 0.000013s"];
    "RewriteRule" [color = "#e5e5e5ff", label = "RewriteRule\ncalls: 1\ntime: 0.000026s"];
    "numpy.lib.arrayterator.Arrayterator" [color = "#e5e5e5ff", label = "numpy.lib.arrayterator.Arrayterator\ncalls: 1\ntime: 0.000019s"];
    "sympy.functions.elementary.complexes.sign" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.sign\ncalls: 1\ntime: 0.000022s"];
    "sympy.core.mod.Mod" [color = "#e5e5e5ff", label = "sympy.core.mod.Mod\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.Half" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half\ncalls: 1\ntime: 0.000011s"];
    "multiprocessing.util.debug" [color = "#e5e5e5ff", label = "multiprocessing.util.debug\ncalls: 1\ntime: 0.000008s"];
    "weakref.WeakKeyDictionary.__init__" [color = "#e5e5e5ff", label = "weakref.WeakKeyDictionary.__init__\ncalls: 3\ntime: 0.000051s"];
    "sympy.matrices.expressions.matexpr.<module>" [color = "#e3e5e5ff", label = "sympy.matrices.expressions.matexpr.<module>\ncalls: 1\ntime: 0.033427s"];
    "sympy.core.numbers.Zero" [color = "#e5e5e5ff", label = "sympy.core.numbers.Zero\ncalls: 1\ntime: 0.000028s"];
    "sympy.mpmath.ctx_mp.PrecisionManager" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp.PrecisionManager\ncalls: 1\ntime: 0.000011s"];
    "doctest.DocTestRunner" [color = "#e5e5e5ff", label = "doctest.DocTestRunner\ncalls: 1\ntime: 0.006417s"];
    "sympy.core.basic.Mul._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Mul._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "sympy.functions.combinatorial.numbers.bell" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.bell\ncalls: 1\ntime: 0.000217s"];
    "threading._RLock.__exit__" [color = "#e1e5e5ff", label = "threading._RLock.__exit__\ncalls: 537\ntime: 0.023927s"];
    "sympy.calculus.<module>" [color = "#e5e5e5ff", label = "sympy.calculus.<module>\ncalls: 1\ntime: 0.002317s"];
    "sympy.functions.special.elliptic_integrals.<module>" [color = "#e4e5e5ff", label = "sympy.functions.special.elliptic_integrals.<module>\ncalls: 1\ntime: 0.012285s"];
    "unittest.<module>" [color = "#e4e5e5ff", label = "unittest.<module>\ncalls: 1\ntime: 0.023384s"];
    "numpy.fft.fftpack.<module>" [color = "#e5e5e5ff", label = "numpy.fft.fftpack.<module>\ncalls: 1\ntime: 0.000222s"];
    "unittest.runner.TextTestRunner" [color = "#e5e5e5ff", label = "unittest.runner.TextTestRunner\ncalls: 1\ntime: 0.000013s"];
    "sympy.functions.special.beta_functions.<module>" [color = "#e5e5e5ff", label = "sympy.functions.special.beta_functions.<module>\ncalls: 1\ntime: 0.002074s"];
    "sympy.sets.fancysets.Naturals" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.Naturals\ncalls: 1\ntime: 0.000015s"];
    "sympy.mpmath.ctx_mp_python.__rdiv__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__rdiv__\ncalls: 2\ntime: 0.000569s"];
    "numpy.core.arrayprint.LongFloatFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.LongFloatFormat\ncalls: 1\ntime: 0.000008s"];
    "multiprocessing.pool.ThreadPool" [color = "#e5e5e5ff", label = "multiprocessing.pool.ThreadPool\ncalls: 1\ntime: 0.003593s"];
    "ctypes.c_uint" [color = "#e5e5e5ff", label = "ctypes.c_uint\ncalls: 1\ntime: 0.000008s"];
    "UserDict._Environ.get" [color = "#e5e5e5ff", label = "UserDict._Environ.get\ncalls: 21\ntime: 0.000541s"];
    "numpy.core.numerictypes._add_types" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._add_types\ncalls: 1\ntime: 0.001591s"];
    "sympy.functions.special.error_functions.erf2inv" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erf2inv\ncalls: 1\ntime: 0.000010s"];
    "logging.StreamHandler" [color = "#e5e5e5ff", label = "logging.StreamHandler\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.basic.ImaginaryUnit._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.ImaginaryUnit._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "sympy.polys.domains.expressiondomain.Expression.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.expressiondomain.Expression.__init__\ncalls: 2\ntime: 0.000160s"];
    "RRtoolbox.lib.directory.directory" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.directory\ncalls: 1\ntime: 0.000025s"];
    "sympy.geometry.line.Line" [color = "#e5e5e5ff", label = "sympy.geometry.line.Line\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.basic.Infinity.is_comparable" [color = "#e5e5e5ff", label = "sympy.core.basic.Infinity.is_comparable\ncalls: 1\ntime: 0.000012s"];
    "pickle.Unpickler.load_stop" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_stop\ncalls: 1\ntime: 0.000054s"];
    "sympy.core.basic.Implies._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Implies._hashable_content\ncalls: 32\ntime: 0.000104s"];
    "joblib.func_inspect.<module>" [color = "#e4e5e5ff", label = "joblib.func_inspect.<module>\ncalls: 1\ntime: 0.020938s"];
    "logging._checkLevel" [color = "#e5e5e5ff", label = "logging._checkLevel\ncalls: 1\ntime: 0.000012s"];
    "numpy.ma.core._maximum_operation" [color = "#e5e5e5ff", label = "numpy.ma.core._maximum_operation\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.elementary.complexes.periodic_argument" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.periodic_argument\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.process.AuthenticationString" [color = "#e5e5e5ff", label = "multiprocessing.process.AuthenticationString\ncalls: 1\ntime: 0.000009s"];
    "sympy.solvers.solvers.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.solvers.<module>\ncalls: 1\ntime: 0.002747s"];
    "sympy.polys.numberfields.<module>" [color = "#e2e5e5ff", label = "sympy.polys.numberfields.<module>\ncalls: 1\ntime: 0.058511s"];
    "sympy.polys.polyerrors.PolificationFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.PolificationFailed\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.defchararray.chararray" [color = "#e5e5e5ff", label = "numpy.core.defchararray.chararray\ncalls: 1\ntime: 0.000081s"];
    "doctest._OutputRedirectingPdb" [color = "#e5e5e5ff", label = "doctest._OutputRedirectingPdb\ncalls: 1\ntime: 0.000011s"];
    "sympy.logic.boolalg.Predicate.__or__" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Predicate.__or__\ncalls: 4\ntime: 0.008901s"];
    "unittest.runner._WritelnDecorator" [color = "#e5e5e5ff", label = "unittest.runner._WritelnDecorator\ncalls: 1\ntime: 0.000010s"];
    "numpy.core.numerictypes._add_array_type" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._add_array_type\ncalls: 30\ntime: 0.000425s"];
    "sympy.polys.domains.modularinteger.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.modularinteger.<module>\ncalls: 1\ntime: 0.000178s"];
    "multiprocessing.forking.ForkingPickler" [color = "#e5e5e5ff", label = "multiprocessing.forking.ForkingPickler\ncalls: 1\ntime: 0.000016s"];
    "sympy.core.logic.__eq__" [color = "#d9e3e5ff", label = "sympy.core.logic.__eq__\ncalls: 2.374\ntime: 0.014061s"];
    "sympy.mpmath.functions.functions.MPContext.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.MPContext.__init__\ncalls: 1\ntime: 0.008066s"];
    "sympy.polys.domains.complexfield.ComplexField.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.complexfield.ComplexField.__init__\ncalls: 1\ntime: 0.003404s"];
    "sympy.logic.boolalg.And.__and__" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.And.__and__\ncalls: 1\ntime: 0.006689s"];
    "pydoc.Helper" [color = "#e5e5e5ff", label = "pydoc.Helper\ncalls: 1\ntime: 0.000880s"];
    "sympy.mpmath.calculus.quadrature.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.<module>\ncalls: 1\ntime: 0.000469s"];
    "sympy.assumptions.<module>" [color = "#cedee5ff", label = "sympy.assumptions.<module>\ncalls: 1\ntime: 0.477286s"];
    "numpy.core.defchararray.<module>" [color = "#e5e5e5ff", label = "numpy.core.defchararray.<module>\ncalls: 1\ntime: 0.000314s"];
    "sympy.mpmath.calculus.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.<module>\ncalls: 1\ntime: 0.005212s"];
    "sympy.matrices.immutable.ImmutableMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.immutable.ImmutableMatrix\ncalls: 1\ntime: 0.000051s"];
    "sympy.functions.special.polynomials.assoc_legendre" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.assoc_legendre\ncalls: 1\ntime: 0.000012s"];
    "sympy.mpmath.ctx_mp_python.__neg__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__neg__\ncalls: 1\ntime: 0.000039s"];
    "sympy.core.compatibility.wrapper" [color = "#d2e0e5ff", label = "sympy.core.compatibility.wrapper\ncalls: 323\ntime: 0.357066s"];
    "sympy.functions.special.bessel.<module>" [color = "#e4e5e5ff", label = "sympy.functions.special.bessel.<module>\ncalls: 1\ntime: 0.030641s"];
    "sympy.mpmath.matrices.eigen.Eigen" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.eigen.Eigen\ncalls: 1\ntime: 0.000008s"];
    "RRtoolbox.lib.config.<module>" [color = "#e3e5e5ff", label = "RRtoolbox.lib.config.<module>\ncalls: 1\ntime: 0.031302s"];
    "multiprocessing.util.register_after_fork" [color = "#e5e5e5ff", label = "multiprocessing.util.register_after_fork\ncalls: 1\ntime: 0.000220s"];
    "numpy.compat._inspect.strseq" [color = "#e5e5e5ff", label = "numpy.compat._inspect.strseq\ncalls: 75\ntime: 0.000448s"];
    "unittest.case._ExpectedFailure" [color = "#e5e5e5ff", label = "unittest.case._ExpectedFailure\ncalls: 1\ntime: 0.000008s"];
    "logging.NullHandler" [color = "#e5e5e5ff", label = "logging.NullHandler\ncalls: 1\ntime: 0.000015s"];
    "pickle.Unpickler.load_binget" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_binget\ncalls: 52\ntime: 0.000297s"];
    "sympy.mpmath.calculus.quadrature.QuadratureMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.QuadratureMethods\ncalls: 1\ntime: 0.000017s"];
    "multiprocessing.ProcessError" [color = "#e5e5e5ff", label = "multiprocessing.ProcessError\ncalls: 1\ntime: 0.000009s"];
    "numpy.fft.helper.<module>" [color = "#e5e5e5ff", label = "numpy.fft.helper.<module>\ncalls: 1\ntime: 0.000023s"];
    "sympy.external.importtools.__sympy_debug" [color = "#e5e5e5ff", label = "sympy.external.importtools.__sympy_debug\ncalls: 1\ntime: 0.000758s"];
    "RRtoolbox.lib.config.directoryManager.__init__" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.directoryManager.__init__\ncalls: 1\ntime: 0.009911s"];
    "sympy.core.basic.And._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.And._hashable_content\ncalls: 15\ntime: 0.000050s"];
    "sympy.core.relational._Inequality" [color = "#e5e5e5ff", label = "sympy.core.relational._Inequality\ncalls: 1\ntime: 0.000008s"];
    "numpy.ctypeslib._ndptr" [color = "#e5e5e5ff", label = "numpy.ctypeslib._ndptr\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.decorators.deco" [color = "#e4e5e5ff", label = "sympy.core.decorators.deco\ncalls: 61\ntime: 0.005247s"];
    "sre_parse.SubPattern.__init__" [color = "#e3e5e5ff", label = "sre_parse.SubPattern.__init__\ncalls: 447\ntime: 0.004090s"];
    "sympy.integrals.transforms.IntegralTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.IntegralTransform\ncalls: 1\ntime: 0.000021s"];
    "RRtoolbox.lib.config.directoryManager.load" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.directoryManager.load\ncalls: 1\ntime: 0.009842s"];
    "sympy.matrices.expressions.adjoint.Adjoint" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.adjoint.Adjoint\ncalls: 1\ntime: 0.000015s"];
    "sympy.polys.polyoptions.Domain" [color = "#e4e5e5ff", label = "sympy.polys.polyoptions.Domain\ncalls: 1\ntime: 0.028657s"];
    "sympy.polys.polyerrors.UnivariatePolynomialError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.UnivariatePolynomialError\ncalls: 1\ntime: 0.000006s"];
    "joblib.parallel.ImmediateComputeBatch" [color = "#e5e5e5ff", label = "joblib.parallel.ImmediateComputeBatch\ncalls: 1\ntime: 0.000011s"];
    "posixpath.abspath" [color = "#e5e5e5ff", label = "posixpath.abspath\ncalls: 3\ntime: 0.000417s"];
    "sympy.core.assumptions.Integer.getit" [color = "#e4e5e5ff", label = "sympy.core.assumptions.Integer.getit\ncalls: 7\ntime: 0.011752s"];
    "numpy.ma.core._DomainCheckInterval.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainCheckInterval.__init__\ncalls: 3\ntime: 0.000016s"];
    "sympy.core.cache.__cacheit" [color = "#e5e5e5ff", label = "sympy.core.cache.__cacheit\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.numbers.NaN._as_mpf_val" [color = "#e5e5e5ff", label = "sympy.core.numbers.NaN._as_mpf_val\ncalls: 2\ntime: 0.000008s"];
    "sympy.polys.domains.pythonrationalfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonrationalfield.<module>\ncalls: 1\ntime: 0.000242s"];
    "sympy.core.core.ClassRegistry" [color = "#e5e5e5ff", label = "sympy.core.core.ClassRegistry\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.symbol.Wild" [color = "#e5e5e5ff", label = "sympy.core.symbol.Wild\ncalls: 1\ntime: 0.000278s"];
    "RRtoolbox.lib.session.readSession" [color = "#e5e5e5ff", label = "RRtoolbox.lib.session.readSession\ncalls: 1\ntime: 0.009680s"];
    "sympy.strategies.rl.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.rl.<module>\ncalls: 1\ntime: 0.000791s"];
    "sympy.core.decorators.Mul.binary_op_wrapper" [color = "#e5e5e5ff", label = "sympy.core.decorators.Mul.binary_op_wrapper\ncalls: 1\ntime: 0.003853s"];
    "sympy.core.logic.Not.arg" [color = "#e4e5e5ff", label = "sympy.core.logic.Not.arg\ncalls: 277\ntime: 0.000963s"];
    "_weakrefset.WeakSet.__iter__" [color = "#e4e5e5ff", label = "_weakrefset.WeakSet.__iter__\ncalls: 92\ntime: 0.004388s"];
    "sympy.core.basic.And.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.And.__hash__\ncalls: 29\ntime: 0.000456s"];
    "RRtoolbox.tools.lens.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.tools.lens.<module>\ncalls: 1\ntime: 0.000000s"];
    "ctypes._endian._swapped_meta" [color = "#e5e5e5ff", label = "ctypes._endian._swapped_meta\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.getlimits.finfo" [color = "#e5e5e5ff", label = "numpy.core.getlimits.finfo\ncalls: 1\ntime: 0.000013s"];
    "ctypes.c_char" [color = "#e5e5e5ff", label = "ctypes.c_char\ncalls: 1\ntime: 0.000008s"];
    "numpy.polynomial.laguerre.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.laguerre.<module>\ncalls: 1\ntime: 0.000402s"];
    "sympy.utilities.runtests.SymPyDocTestRunner" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.SymPyDocTestRunner\ncalls: 1\ntime: 0.000007s"];
    "RRtoolbox.lib.directory.joinPath" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.joinPath\ncalls: 7\ntime: 0.000263s"];
    "sympy.core.function.ArgumentIndexError" [color = "#e5e5e5ff", label = "sympy.core.function.ArgumentIndexError\ncalls: 1\ntime: 0.000014s"];
    "pickle._EmptyClass" [color = "#e5e5e5ff", label = "pickle._EmptyClass\ncalls: 1\ntime: 0.000006s"];
    "sympy.matrices.expressions.matexpr.deco" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr.deco\ncalls: 11\ntime: 0.000669s"];
    "sympy.ntheory.multinomial.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.multinomial.<module>\ncalls: 1\ntime: 0.000038s"];
    "sympy.utilities.timeutils.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.timeutils.<module>\ncalls: 1\ntime: 0.000272s"];
    "ctypes._endian.BigEndianStructure" [color = "#e5e5e5ff", label = "ctypes._endian.BigEndianStructure\ncalls: 1\ntime: 0.000010s"];
    "sympy.logic.boolalg._new_args_filter" [color = "#e0e5e5ff", label = "sympy.logic.boolalg._new_args_filter\ncalls: 87\ntime: 0.094450s"];
    "sympy.mpmath.ctx_iv.__init__" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_iv.__init__\ncalls: 1\ntime: 0.017110s"];
    "sympy.functions.special.zeta_functions.lerchphi" [color = "#e5e5e5ff", label = "sympy.functions.special.zeta_functions.lerchphi\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.operations.__new__" [color = "#d6e2e5ff", label = "sympy.core.operations.__new__\ncalls: 99\ntime: 0.305916s"];
    "numpy.lib.shape_base.<module>" [color = "#e5e5e5ff", label = "numpy.lib.shape_base.<module>\ncalls: 1\ntime: 0.000046s"];
    "sympy.polys.domains.pythonintegerring.PythonIntegerRing" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonintegerring.PythonIntegerRing\ncalls: 1\ntime: 0.000026s"];
    "sympy.matrices.expressions.matexpr._sympifyit" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matexpr._sympifyit\ncalls: 11\ntime: 0.000067s"];
    "multiprocessing.dummy.connection.<module>" [color = "#e5e5e5ff", label = "multiprocessing.dummy.connection.<module>\ncalls: 1\ntime: 0.000271s"];
    "weakref.KeyedRef.__init__" [color = "#e5e5e5ff", label = "weakref.KeyedRef.__init__\ncalls: 1\ntime: 0.000010s"];
    "sre_parse.Tokenizer.get" [color = "#d0dfe5ff", label = "sre_parse.Tokenizer.get\ncalls: 3.478\ntime: 0.109554s"];
    "pkgutil.simplegeneric" [color = "#e5e5e5ff", label = "pkgutil.simplegeneric\ncalls: 1\ntime: 0.000021s"];
    "sympy.mpmath.<module>" [color = "#d7e2e5ff", label = "sympy.mpmath.<module>\ncalls: 1\ntime: 0.293612s"];
    "sympy.functions.special.polynomials.OrthogonalPolynomial" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.OrthogonalPolynomial\ncalls: 1\ntime: 0.000009s"];
    "logging.RootLogger" [color = "#e5e5e5ff", label = "logging.RootLogger\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.polyoptions.Include" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Include\ncalls: 1\ntime: 0.000009s"];
    "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.basic.Infinity.__hash__" [color = "#e4e5e5ff", label = "sympy.core.basic.Infinity.__hash__\ncalls: 215\ntime: 0.001189s"];
    "CacheInfo" [color = "#e5e5e5ff", label = "CacheInfo\ncalls: 1\ntime: 0.000028s"];
    "sympy.mpmath.functions.bessel.c_memo" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.bessel.c_memo\ncalls: 4\ntime: 0.000045s"];
    "sympy.polys.polyerrors.IsomorphismFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.IsomorphismFailed\ncalls: 1\ntime: 0.000006s"];
    "sympy.printing.pretty.stringpict.stringPict" [color = "#e5e5e5ff", label = "sympy.printing.pretty.stringpict.stringPict\ncalls: 1\ntime: 0.000030s"];
    "sympy.functions.combinatorial.numbers.harmonic" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.harmonic\ncalls: 1\ntime: 0.000016s"];
    "sympy.core.cache.func_wrapper" [color = "#e4e5e5ff", label = "sympy.core.cache.func_wrapper\ncalls: 76\ntime: 0.018950s"];
    "sympy.core.numbers.One.sort_key" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.sort_key\ncalls: 2\ntime: 0.000075s"];
    "sympy.core.facts.Prover.rules_beta" [color = "#e5e5e5ff", label = "sympy.core.facts.Prover.rules_beta\ncalls: 2\ntime: 0.000704s"];
    "numpy.lib._iotools.StringConverter" [color = "#e5e5e5ff", label = "numpy.lib._iotools.StringConverter\ncalls: 1\ntime: 0.000044s"];
    "sympy.sets.sets.Complement" [color = "#e5e5e5ff", label = "sympy.sets.sets.Complement\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.elementary.trigonometric.sin" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.sin\ncalls: 1\ntime: 0.000285s"];
    "sympy.core.containers.<module>" [color = "#d5e2e5ff", label = "sympy.core.containers.<module>\ncalls: 1\ntime: 0.320638s"];
    "sympy.core.basic.Mul.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Mul.__hash__\ncalls: 1\ntime: 0.000082s"];
    "doctest.UnexpectedException" [color = "#e5e5e5ff", label = "doctest.UnexpectedException\ncalls: 1\ntime: 0.000007s"];
    "sre_parse._escape" [color = "#e4e5e5ff", label = "sre_parse._escape\ncalls: 142\ntime: 0.002282s"];
    "sympy.functions.special.bessel.airyai" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.airyai\ncalls: 1\ntime: 0.000289s"];
    "sympy.assumptions.assume.Predicate._hashable_content" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.Predicate._hashable_content\ncalls: 43\ntime: 0.000161s"];
    "unittest.result.TestResult" [color = "#e5e5e5ff", label = "unittest.result.TestResult\ncalls: 1\ntime: 0.000426s"];
    "sympy.polys.domains.rationalfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.rationalfield.<module>\ncalls: 1\ntime: 0.000143s"];
    "numpy.core.numerictypes.<module>" [color = "#e4e5e5ff", label = "numpy.core.numerictypes.<module>\ncalls: 1\ntime: 0.024086s"];
    "numpy.core.machar.MachAr" [color = "#e5e5e5ff", label = "numpy.core.machar.MachAr\ncalls: 1\ntime: 0.000015s"];
    "sympy.functions.elementary.integers.RoundFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.integers.RoundFunction\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.combinatorial.numbers.euler" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.euler\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.evalf.PrecisionExhausted" [color = "#e5e5e5ff", label = "sympy.core.evalf.PrecisionExhausted\ncalls: 1\ntime: 0.000005s"];
    "sympy.core.evaluate._global_evaluate" [color = "#e5e5e5ff", label = "sympy.core.evaluate._global_evaluate\ncalls: 1\ntime: 0.000007s"];
    "sympy.integrals.deltafunctions.<module>" [color = "#e5e5e5ff", label = "sympy.integrals.deltafunctions.<module>\ncalls: 1\ntime: 0.000026s"];
    "numpy.core.getlimits.iinfo" [color = "#e5e5e5ff", label = "numpy.core.getlimits.iinfo\ncalls: 1\ntime: 0.000019s"];
    "multiprocessing.dummy.Namespace" [color = "#e5e5e5ff", label = "multiprocessing.dummy.Namespace\ncalls: 1\ntime: 0.000010s"];
    "sympy.matrices.dense.MutableDenseMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.dense.MutableDenseMatrix\ncalls: 1\ntime: 0.000084s"];
    "numpy.core.numeric.set_string_function" [color = "#e5e5e5ff", label = "numpy.core.numeric.set_string_function\ncalls: 2\ntime: 0.000016s"];
    "sympy.printing.str.StrReprPrinter" [color = "#e5e5e5ff", label = "sympy.printing.str.StrReprPrinter\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.matrices.eigen.defun" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.eigen.defun\ncalls: 11\ntime: 0.000078s"];
    "sympy.polys.domains.gmpyintegerring.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyintegerring.<module>\ncalls: 1\ntime: 0.000232s"];
    "sympy.core.compatibility._make_key" [color = "#e2e5e5ff", label = "sympy.core.compatibility._make_key\ncalls: 323\ntime: 0.041037s"];
    "multiprocessing.forking.register" [color = "#e5e5e5ff", label = "multiprocessing.forking.register\ncalls: 4\ntime: 0.000041s"];
    "sympy.simplify.fu.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.fu.<module>\ncalls: 1\ntime: 0.007906s"];
    "sympy.functions.<module>" [color = "#d2e0e5ff", label = "sympy.functions.<module>\ncalls: 1\ntime: 0.395682s"];
    "sympy.mpmath.calculus.extrapolation.levin_class" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.extrapolation.levin_class\ncalls: 1\ntime: 0.000019s"];
    "sympy.polys.domains.<module>" [color = "#e2e5e5ff", label = "sympy.polys.domains.<module>\ncalls: 1\ntime: 0.064874s"];
    "sympy.polys.polyoptions.Strict" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Strict\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.relational.LessThan" [color = "#e5e5e5ff", label = "sympy.core.relational.LessThan\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.ctx_iv.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.<module>\ncalls: 1\ntime: 0.003302s"];
    "sympy.core.symbol.Symbol" [color = "#e5e5e5ff", label = "sympy.core.symbol.Symbol\ncalls: 1\ntime: 0.000555s"];
    "sympy.printing.defaults.<module>" [color = "#e5e5e5ff", label = "sympy.printing.defaults.<module>\ncalls: 1\ntime: 0.000084s"];
    "sympy.functions.special.error_functions.Si" [color = "#e4e5e5ff", label = "sympy.functions.special.error_functions.Si\ncalls: 1\ntime: 0.012502s"];
    "sympy.integrals.manualintegrate._evaluates" [color = "#e5e5e5ff", label = "sympy.integrals.manualintegrate._evaluates\ncalls: 20\ntime: 0.000132s"];
    "sympy.polys.polyoptions.All" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.All\ncalls: 1\ntime: 0.000008s"];
    "sre_compile.fixup" [color = "#e5e5e5ff", label = "sre_compile.fixup\ncalls: 90\ntime: 0.000523s"];
    "sympy.core.numbers.int_trace" [color = "#e5e5e5ff", label = "sympy.core.numbers.int_trace\ncalls: 1\ntime: 0.000074s"];
    "sympy.functions.elementary.complexes.Abs" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.Abs\ncalls: 1\ntime: 0.000019s"];
    "sympy.functions.elementary.hyperbolic.coth" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.coth\ncalls: 1\ntime: 0.000278s"];
    "sympy.printing.ccode.<module>" [color = "#e5e5e5ff", label = "sympy.printing.ccode.<module>\ncalls: 1\ntime: 0.002947s"];
    "sympy.polys.polyerrors.<module>" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.<module>\ncalls: 1\ntime: 0.002558s"];
    "sympy.mpmath.libmp.libmpf.mpf_sign" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_sign\ncalls: 15\ntime: 0.000114s"];
    "sympy.functions.elementary.complexes.re" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.re\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.ctx_mp_python.default" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.default\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.containers.Dict" [color = "#e5e5e5ff", label = "sympy.core.containers.Dict\ncalls: 1\ntime: 0.000029s"];
    "sympy.solvers.recurr.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.recurr.<module>\ncalls: 1\ntime: 0.000081s"];
    "sympy.functions.elementary.trigonometric.csc" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.csc\ncalls: 1\ntime: 0.000270s"];
    "sympy.core.expr.Pi.as_coeff_Mul" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi.as_coeff_Mul\ncalls: 4\ntime: 0.000017s"];
    "sympy.core.numbers.Zero.__mod__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Zero.__mod__\ncalls: 1\ntime: 0.000033s"];
    "sympy.mpmath.functions.functions.FPContext.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.functions.FPContext.__init__\ncalls: 1\ntime: 0.007895s"];
    "RRtoolbox.lib.directory.wrapper" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.wrapper\ncalls: 1\ntime: 0.000898s"];
    "sympy.interactive.printing.<module>" [color = "#e5e5e5ff", label = "sympy.interactive.printing.<module>\ncalls: 1\ntime: 0.000095s"];
    "numpy.VisibleDeprecationWarning" [color = "#e5e5e5ff", label = "numpy.VisibleDeprecationWarning\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.domains.pythonrational.PythonRational.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonrational.PythonRational.__init__\ncalls: 2\ntime: 0.000020s"];
    "sympy.strategies.core.exhaust" [color = "#e5e5e5ff", label = "sympy.strategies.core.exhaust\ncalls: 3\ntime: 0.000017s"];
    "sympy.mpmath.functions.functions.MPIntervalContext.__init__" [color = "#e4e5e5ff", label = "sympy.mpmath.functions.functions.MPIntervalContext.__init__\ncalls: 1\ntime: 0.013377s"];
    "joblib.pool.MemmapingPool" [color = "#e5e5e5ff", label = "joblib.pool.MemmapingPool\ncalls: 1\ntime: 0.000014s"];
    "sympy.mpmath.libmp.libmpf.mpf_abs" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_abs\ncalls: 28\ntime: 0.000753s"];
    "sympy.solvers.bivariate.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.bivariate.<module>\ncalls: 1\ntime: 0.000056s"];
    "sympy.polys.rootisolation.RealInterval" [color = "#e5e5e5ff", label = "sympy.polys.rootisolation.RealInterval\ncalls: 1\ntime: 0.000024s"];
    "json.decoder.<module>" [color = "#e3e5e5ff", label = "json.decoder.<module>\ncalls: 1\ntime: 0.039632s"];
    "numpy.polynomial.polyutils.PolyError" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.PolyError\ncalls: 1\ntime: 0.000006s"];
    "RRtoolbox.lib.directory.getShortenedPath" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.getShortenedPath\ncalls: 1\ntime: 0.000058s"];
    "threading._RLock.acquire" [color = "#e2e5e5ff", label = "threading._RLock.acquire\ncalls: 537\ntime: 0.016689s"];
    "sympy.core.power.<module>" [color = "#e2e5e5ff", label = "sympy.core.power.<module>\ncalls: 1\ntime: 0.069843s"];
    "sympy.plotting.plot.Parametric3DLineSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.Parametric3DLineSeries\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib.index_tricks.mr_class.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.mr_class.__init__\ncalls: 1\ntime: 0.000012s"];
    "numpy.ma.core.<module>" [color = "#e4e5e5ff", label = "numpy.ma.core.<module>\ncalls: 1\ntime: 0.014488s"];
    "sympy.series.residues.<module>" [color = "#e5e5e5ff", label = "sympy.series.residues.<module>\ncalls: 1\ntime: 0.000070s"];
    "sympy.strategies.util.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.util.<module>\ncalls: 1\ntime: 0.000096s"];
    "sympy.assumptions.ask.Q" [color = "#e5e5e5ff", label = "sympy.assumptions.ask.Q\ncalls: 1\ntime: 0.002094s"];
    "sympy.mpmath.ctx_mp_python.mpnumeric" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.mpnumeric\ncalls: 1\ntime: 0.000010s"];
    "sympy.polys.polyoptions.<module>" [color = "#e3e5e5ff", label = "sympy.polys.polyoptions.<module>\ncalls: 1\ntime: 0.040450s"];
    "decimal.Decimal" [color = "#e5e5e5ff", label = "decimal.Decimal\ncalls: 1\ntime: 0.000141s"];
    "pkgutil.<module>" [color = "#e5e5e5ff", label = "pkgutil.<module>\ncalls: 1\ntime: 0.000284s"];
    "sympy.functions.special.bessel.besselj" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.besselj\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.basic.Atom" [color = "#e5e5e5ff", label = "sympy.core.basic.Atom\ncalls: 1\ntime: 0.000273s"];
    "sympy.mpmath.libmp.libelefun.constant_memo" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libelefun.constant_memo\ncalls: 14\ntime: 0.000289s"];
    "sympy.functions.special.bessel.besselk" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.besselk\ncalls: 1\ntime: 0.000037s"];
    "sympy.core.exprtools.<module>" [color = "#e5e5e5ff", label = "sympy.core.exprtools.<module>\ncalls: 1\ntime: 0.000926s"];
    "sympy.core.decorators.<module>" [color = "#e5e5e5ff", label = "sympy.core.decorators.<module>\ncalls: 1\ntime: 0.000026s"];
    "sympy.core.numbers.Half.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half.__hash__\ncalls: 40\ntime: 0.001369s"];
    "sympy.core.expr.Pi.as_base_exp" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi.as_base_exp\ncalls: 6\ntime: 0.000021s"];
    "joblib.numpy_pickle.NumpyUnpickler" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.NumpyUnpickler\ncalls: 1\ntime: 0.000025s"];
    "sympy.matrices.expressions.slice.<module>" [color = "#e3e5e5ff", label = "sympy.matrices.expressions.slice.<module>\ncalls: 1\ntime: 0.037018s"];
    "sympy.mpmath.calculus.optimization.Bisection" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Bisection\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.special.delta_functions.<module>" [color = "#e5e5e5ff", label = "sympy.functions.special.delta_functions.<module>\ncalls: 1\ntime: 0.007594s"];
    "sympy.ntheory.partitions_.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.partitions_.<module>\ncalls: 1\ntime: 0.000033s"];
    "multiprocessing.process._MainProcess.__init__" [color = "#e5e5e5ff", label = "multiprocessing.process._MainProcess.__init__\ncalls: 1\ntime: 0.000040s"];
    "sre_parse.SubPattern.__delitem__" [color = "#e5e5e5ff", label = "sre_parse.SubPattern.__delitem__\ncalls: 6\ntime: 0.000024s"];
    "unittest.suite.TestSuite" [color = "#e5e5e5ff", label = "unittest.suite.TestSuite\ncalls: 1\ntime: 0.000014s"];
    "sympy.plotting.experimental_lambdify.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.experimental_lambdify.<module>\ncalls: 1\ntime: 0.000371s"];
    "sympy.mpmath.libmp.six.MovedModule" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.MovedModule\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.elementary.integers.ceiling" [color = "#e5e5e5ff", label = "sympy.functions.elementary.integers.ceiling\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.relational.StrictLessThan" [color = "#e5e5e5ff", label = "sympy.core.relational.StrictLessThan\ncalls: 1\ntime: 0.000009s"];
    "joblib.parallel.<module>" [color = "#e3e5e5ff", label = "joblib.parallel.<module>\ncalls: 1\ntime: 0.031243s"];
    "sympy.core.numbers.Half._eval_evalf" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half._eval_evalf\ncalls: 1\ntime: 0.000305s"];
    "ReciprocalRule" [color = "#e5e5e5ff", label = "ReciprocalRule\ncalls: 1\ntime: 0.000027s"];
    "sympy.geometry.plane.Plane" [color = "#e5e5e5ff", label = "sympy.geometry.plane.Plane\ncalls: 1\ntime: 0.000028s"];
    "numpy.linalg.linalg._determine_error_states" [color = "#e5e5e5ff", label = "numpy.linalg.linalg._determine_error_states\ncalls: 1\ntime: 0.000415s"];
    "multiprocessing.forking.<module>" [color = "#e5e5e5ff", label = "multiprocessing.forking.<module>\ncalls: 1\ntime: 0.000513s"];
    "sympy.polys.domains.gmpyrationalfield.GMPYRationalField" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyrationalfield.GMPYRationalField\ncalls: 1\ntime: 0.000097s"];
    "sympy.strategies.branch.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.branch.<module>\ncalls: 1\ntime: 0.002129s"];
    "RRtoolbox.lib.cache.resourceManager" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.resourceManager\ncalls: 1\ntime: 0.000057s"];
    "numpy.ma.extras._fromnxfunction" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.error_functions.Chi" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.Chi\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.numbers.Catalan" [color = "#e5e5e5ff", label = "sympy.core.numbers.Catalan\ncalls: 1\ntime: 0.000015s"];
    "numpy.core.memmap.<module>" [color = "#e5e5e5ff", label = "numpy.core.memmap.<module>\ncalls: 1\ntime: 0.000134s"];
    "sympy.utilities.runtests.SymPyTests" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.SymPyTests\ncalls: 1\ntime: 0.000013s"];
    "numpy.lib.utils._Deprecate.__call__" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate.__call__\ncalls: 2\ntime: 0.000165s"];
    "sympy.assumptions.refine.<module>" [color = "#e5e5e5ff", label = "sympy.assumptions.refine.<module>\ncalls: 1\ntime: 0.000036s"];
    "pickle.Unpickler.load_global" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_global\ncalls: 1\ntime: 0.001097s"];
    "numpy.linalg.<module>" [color = "#e5e5e5ff", label = "numpy.linalg.<module>\ncalls: 1\ntime: 0.002350s"];
    "sympy.polys.domains.realfield.RealField.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.realfield.RealField.__init__\ncalls: 1\ntime: 0.002915s"];
    "sympy.matrices.expressions.blockmatrix.BlockMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.blockmatrix.BlockMatrix\ncalls: 1\ntime: 0.000027s"];
    "sympy.polys.domains.complexfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.complexfield.<module>\ncalls: 1\ntime: 0.000192s"];
    "_weakrefset._IterationGuard.__enter__" [color = "#e5e5e5ff", label = "_weakrefset._IterationGuard.__enter__\ncalls: 34\ntime: 0.000299s"];
    "numpy.lib.type_check.<module>" [color = "#e0e5e5ff", label = "numpy.lib.type_check.<module>\ncalls: 1\ntime: 0.108009s"];
    "sympy.integrals.transforms.HankelTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.HankelTransform\ncalls: 1\ntime: 0.000007s"];
    "distutils.version.<module>" [color = "#e4e5e5ff", label = "distutils.version.<module>\ncalls: 1\ntime: 0.015422s"];
    "unittest.case.SkipTest" [color = "#e5e5e5ff", label = "unittest.case.SkipTest\ncalls: 1\ntime: 0.000008s"];
    "sympy.simplify.cse_main.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.cse_main.<module>\ncalls: 1\ntime: 0.000731s"];
    "sympy.mpmath.libmp.libmpf.from_rational" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.from_rational\ncalls: 35\ntime: 0.004770s"];
    "genericpath.isfile" [color = "#e5e5e5ff", label = "genericpath.isfile\ncalls: 1\ntime: 0.000119s"];
    "sympy.core.operations.LatticeOp" [color = "#e5e5e5ff", label = "sympy.core.operations.LatticeOp\ncalls: 1\ntime: 0.000278s"];
    "sympy.logic.boolalg.BooleanTrue" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanTrue\ncalls: 1\ntime: 0.000021s"];
    "unittest.result.<module>" [color = "#e5e5e5ff", label = "unittest.result.<module>\ncalls: 1\ntime: 0.005302s"];
    "sympy.matrices.expressions.trace.Trace" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.trace.Trace\ncalls: 1\ntime: 0.000013s"];
    "multiprocessing.synchronize.BoundedSemaphore" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.BoundedSemaphore\ncalls: 1\ntime: 0.000010s"];
    "numpy.core._internal._ctypes" [color = "#e5e5e5ff", label = "numpy.core._internal._ctypes\ncalls: 1\ntime: 0.000025s"];
    "sympy.printing.octave.<module>" [color = "#e5e5e5ff", label = "sympy.printing.octave.<module>\ncalls: 1\ntime: 0.000181s"];
    "sympy.matrices.sparse.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.sparse.<module>\ncalls: 1\ntime: 0.000305s"];
    "sympy.integrals.transforms._noconds_" [color = "#e5e5e5ff", label = "sympy.integrals.transforms._noconds_\ncalls: 6\ntime: 0.000037s"];
    "sympy.polys.domains.mpelements.RealElement" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.RealElement\ncalls: 1\ntime: 0.000012s"];
    "cmd.Cmd" [color = "#e5e5e5ff", label = "cmd.Cmd\ncalls: 1\ntime: 0.000041s"];
    "pydoc._OldStyleClass" [color = "#e5e5e5ff", label = "pydoc._OldStyleClass\ncalls: 1\ntime: 0.000010s"];
    "sympy.integrals.transforms.IntegralTransformError" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.IntegralTransformError\ncalls: 1\ntime: 0.000008s"];
    "RRtoolbox.tools.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.tools.<module>\ncalls: 1\ntime: 0.000007s"];
    "difflib.Differ" [color = "#e5e5e5ff", label = "difflib.Differ\ncalls: 1\ntime: 0.000015s"];
    "sympy.<module>" [color = "#e54ce5ff", label = "sympy.<module>\ncalls: 1\ntime: 3.150691s"];
    "sympy.utilities.runtests.Reporter" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.Reporter\ncalls: 1\ntime: 0.000006s"];
    "RRtoolbox.lib.directory.directory.__sub__" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.directory.__sub__\ncalls: 3\ntime: 0.001096s"];
    "sympy.polys.domains.pythonrational.PythonRational" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonrational.PythonRational\ncalls: 1\ntime: 0.000041s"];
    "sympy.geometry.exceptions.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.exceptions.<module>\ncalls: 1\ntime: 0.000094s"];
    "multiprocessing.BufferTooShort" [color = "#e5e5e5ff", label = "multiprocessing.BufferTooShort\ncalls: 1\ntime: 0.000009s"];
    "sympy.geometry.plane.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.plane.<module>\ncalls: 1\ntime: 0.002011s"];
    "sympy.polys.domains.compositedomain.CompositeDomain" [color = "#e5e5e5ff", label = "sympy.polys.domains.compositedomain.CompositeDomain\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.multidimensional.vectorize.__call__" [color = "#e5e5e5ff", label = "sympy.core.multidimensional.vectorize.__call__\ncalls: 2\ntime: 0.000266s"];
    "sympy.simplify.hyperexpand.FormulaCollection" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.FormulaCollection\ncalls: 1\ntime: 0.000007s"];
    "sre_parse.SubPattern.__getitem__" [color = "#dbe4e5ff", label = "sre_parse.SubPattern.__getitem__\ncalls: 1.907\ntime: 0.018411s"];
    "numpy.lib.utils.<module>" [color = "#e5e5e5ff", label = "numpy.lib.utils.<module>\ncalls: 1\ntime: 0.006073s"];
    "sympy.strategies.tools.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.tools.<module>\ncalls: 1\ntime: 0.000030s"];
    "sympy.core.numbers.One.__hash__" [color = "#e4e5e5ff", label = "sympy.core.numbers.One.__hash__\ncalls: 205\ntime: 0.000766s"];
    "sympy.mpmath.ctx_iv.convert_mpf_" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.convert_mpf_\ncalls: 8\ntime: 0.000712s"];
    "numpy.fft.<module>" [color = "#e5e5e5ff", label = "numpy.fft.<module>\ncalls: 1\ntime: 0.001737s"];
    "joblib.my_exceptions._mk_common_exceptions" [color = "#e5e5e5ff", label = "joblib.my_exceptions._mk_common_exceptions\ncalls: 1\ntime: 0.004001s"];
    "sympy.simplify.epathtools.EPath" [color = "#e5e5e5ff", label = "sympy.simplify.epathtools.EPath\ncalls: 1\ntime: 0.000015s"];
    "logging.Manager" [color = "#e5e5e5ff", label = "logging.Manager\ncalls: 1\ntime: 0.000018s"];
    "joblib._memory_helpers.<module>" [color = "#e5e5e5ff", label = "joblib._memory_helpers.<module>\ncalls: 1\ntime: 0.007798s"];
    "sympy.polys.polyerrors.HomomorphismFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.HomomorphismFailed\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.decorators.priority_decorator" [color = "#e5e5e5ff", label = "sympy.core.decorators.priority_decorator\ncalls: 33\ntime: 0.001968s"];
    "sympy.core.numbers.Half._as_mpf_val" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half._as_mpf_val\ncalls: 1\ntime: 0.000145s"];
    "sympy.functions.elementary.hyperbolic.tanh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.tanh\ncalls: 1\ntime: 0.000277s"];
    "sympy.logic.boolalg.And" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.And\ncalls: 1\ntime: 0.000011s"];
    "sympy.integrals.manualintegrate.uncurry" [color = "#e5e5e5ff", label = "sympy.integrals.manualintegrate.uncurry\ncalls: 8\ntime: 0.000049s"];
    "sympy.sets.sets.FiniteSet.__contains__" [color = "#e5e5e5ff", label = "sympy.sets.sets.FiniteSet.__contains__\ncalls: 4\ntime: 0.000646s"];
    "sympy.mpmath.ctx_iv.convert" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.convert\ncalls: 6\ntime: 0.002053s"];
    "sympy.functions.combinatorial.numbers.<module>" [color = "#dde4e5ff", label = "sympy.functions.combinatorial.numbers.<module>\ncalls: 1\ntime: 0.162892s"];
    "numpy.ma.core._MaskedBinaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedBinaryOperation\ncalls: 1\ntime: 0.000011s"];
    "pydoc.ErrorDuringImport" [color = "#e5e5e5ff", label = "pydoc.ErrorDuringImport\ncalls: 1\ntime: 0.000018s"];
    "sympy.core.function.Subs" [color = "#e5e5e5ff", label = "sympy.core.function.Subs\ncalls: 1\ntime: 0.000023s"];
    "doctest.DocTestFailure" [color = "#e5e5e5ff", label = "doctest.DocTestFailure\ncalls: 1\ntime: 0.000008s"];
    "contextlib.contextmanager" [color = "#e5e5e5ff", label = "contextlib.contextmanager\ncalls: 4\ntime: 0.000393s"];
    "sympy.assumptions.ask.register_handler" [color = "#e5e5e5ff", label = "sympy.assumptions.ask.register_handler\ncalls: 37\ntime: 0.000886s"];
    "RRtoolbox.lib.directory.getSplitted" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.getSplitted\ncalls: 1\ntime: 0.000113s"];
    "abc.<genexpr>" [color = "#e5e5e5ff", label = "abc.<genexpr>\ncalls: 73\ntime: 0.001342s"];
    "multiprocessing.synchronize.Semaphore.__init__" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Semaphore.__init__\ncalls: 2\ntime: 0.001110s"];
    "numpy.core.memmap.memmap" [color = "#e5e5e5ff", label = "numpy.core.memmap.memmap\ncalls: 1\ntime: 0.000015s"];
    "sre_compile.compile" [color = "#c8dae5ff", label = "sre_compile.compile\ncalls: 57\ntime: 0.599963s"];
    "numpy._NoValue" [color = "#e5e5e5ff", label = "numpy._NoValue\ncalls: 1\ntime: 0.000017s"];
    "sympy.core.compatibility.<genexpr>" [color = "#e0e5e5ff", label = "sympy.core.compatibility.<genexpr>\ncalls: 1.067\ntime: 0.004900s"];
    "numpy.core.numeric.extend_all" [color = "#e5e5e5ff", label = "numpy.core.numeric.extend_all\ncalls: 3\ntime: 0.002458s"];
    "sympy.tensor.index_methods.<module>" [color = "#e5e5e5ff", label = "sympy.tensor.index_methods.<module>\ncalls: 1\ntime: 0.000214s"];
    "numpy.linalg.linalg.<module>" [color = "#e5e5e5ff", label = "numpy.linalg.linalg.<module>\ncalls: 1\ntime: 0.001017s"];
    "sympy.functions.special.zeta_functions.zeta" [color = "#e5e5e5ff", label = "sympy.functions.special.zeta_functions.zeta\ncalls: 1\ntime: 0.000012s"];
    "sre_compile._code" [color = "#dce4e5ff", label = "sre_compile._code\ncalls: 57\ntime: 0.173227s"];
    "sympy.functions.elementary.trigonometric.cot" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.cot\ncalls: 1\ntime: 0.000288s"];
    "numpy.lib.utils._Deprecate.__init__" [color = "#e5e5e5ff", label = "numpy.lib.utils._Deprecate.__init__\ncalls: 2\ntime: 0.000015s"];
    "numpy.core.numerictypes._register_types" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._register_types\ncalls: 1\ntime: 0.002875s"];
    "sympy.core.numbers.Integer.__int__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.__int__\ncalls: 2\ntime: 0.000008s"];
    "sympy.logic.boolalg.BooleanFalse.__nonzero__" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanFalse.__nonzero__\ncalls: 3\ntime: 0.000012s"];
    "repr.HTMLRepr.__init__" [color = "#e5e5e5ff", label = "repr.HTMLRepr.__init__\ncalls: 1\ntime: 0.000030s"];
    "sympy.ntheory.primetest.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.primetest.<module>\ncalls: 1\ntime: 0.000069s"];
    "sympy.mpmath.ctx_mp_python.binary_op" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_mp_python.binary_op\ncalls: 7\ntime: 0.009983s"];
    "sympy.core.function.<module>" [color = "#e2e5e5ff", label = "sympy.core.function.<module>\ncalls: 1\ntime: 0.066571s"];
    "json.encoder.JSONEncoder.__init__" [color = "#e5e5e5ff", label = "json.encoder.JSONEncoder.__init__\ncalls: 1\ntime: 0.000026s"];
    "joblib.numpy_pickle.NDArrayWrapper" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.NDArrayWrapper\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.numbers.RationalConstant" [color = "#e5e5e5ff", label = "sympy.core.numbers.RationalConstant\ncalls: 1\ntime: 0.000008s"];
    "numpy.testing.utils.WarningMessage" [color = "#e5e5e5ff", label = "numpy.testing.utils.WarningMessage\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.polytools.Poly" [color = "#e5e5e5ff", label = "sympy.polys.polytools.Poly\ncalls: 1\ntime: 0.002298s"];
    "sympy.functions.special.bessel.jn" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.jn\ncalls: 1\ntime: 0.000009s"];
    "numpy.core.numeric.errstate.__exit__" [color = "#e5e5e5ff", label = "numpy.core.numeric.errstate.__exit__\ncalls: 1\ntime: 0.000086s"];
    "sympy.core.sympify.SympifyError.__init__" [color = "#e5e5e5ff", label = "sympy.core.sympify.SympifyError.__init__\ncalls: 2\ntime: 0.000011s"];
    "warnings.catch_warnings.__exit__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__exit__\ncalls: 1\ntime: 0.000013s"];
    "numpy.matrixlib.defmatrix.<module>" [color = "#e5e5e5ff", label = "numpy.matrixlib.defmatrix.<module>\ncalls: 1\ntime: 0.001509s"];
    "sympy.core.function.Not.func" [color = "#e5e5e5ff", label = "sympy.core.function.Not.func\ncalls: 91\ntime: 0.000322s"];
    "numpy.ma.extras.<module>" [color = "#e5e5e5ff", label = "numpy.ma.extras.<module>\ncalls: 1\ntime: 0.002875s"];
    "multiprocessing.dummy.connection.Connection" [color = "#e5e5e5ff", label = "multiprocessing.dummy.connection.Connection\ncalls: 1\ntime: 0.000012s"];
    "numpy.lib.npyio.BagObj" [color = "#e5e5e5ff", label = "numpy.lib.npyio.BagObj\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.logic.Not" [color = "#e5e5e5ff", label = "sympy.core.logic.Not\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.ctx_mp_python._wrap_specfun" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_mp_python._wrap_specfun\ncalls: 207\ntime: 0.002197s"];
    "pydoc.HTMLDoc" [color = "#e5e5e5ff", label = "pydoc.HTMLDoc\ncalls: 1\ntime: 0.000256s"];
    "numpy.ma.core.MaskedConstant" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant\ncalls: 1\ntime: 0.000028s"];
    "sympy.core.cache._cache" [color = "#e5e5e5ff", label = "sympy.core.cache._cache\ncalls: 1\ntime: 0.000008s"];
    "numpy.ma.core._extrema_operation" [color = "#e5e5e5ff", label = "numpy.ma.core._extrema_operation\ncalls: 1\ntime: 0.000009s"];
    "locale.setlocale" [color = "#e5e5e5ff", label = "locale.setlocale\ncalls: 3\ntime: 0.000069s"];
    "sympy.core.basic.Pow.func" [color = "#e5e5e5ff", label = "sympy.core.basic.Pow.func\ncalls: 1\ntime: 0.000003s"];
    "sympy.integrals.transforms.CosineTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.CosineTransform\ncalls: 1\ntime: 0.001754s"];
    "sympy.polys.domains.realfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.realfield.<module>\ncalls: 1\ntime: 0.001210s"];
    "sympy.functions.special.hyper.HyperRep_power2" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_power2\ncalls: 1\ntime: 0.000011s"];
    "collections.namedtuple" [color = "#e0e5e5ff", label = "collections.namedtuple\ncalls: 27\ntime: 0.100377s"];
    "sympy.mpmath.ctx_mp_python._wrap_libmp_function" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python._wrap_libmp_function\ncalls: 45\ntime: 0.000551s"];
    "sympy.assumptions.assume.Predicate.sort_key" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.Predicate.sort_key\ncalls: 2\ntime: 0.000944s"];
    "multiprocessing.Semaphore" [color = "#e5e5e5ff", label = "multiprocessing.Semaphore\ncalls: 1\ntime: 0.004810s"];
    "numpy.core.arrayprint.DatetimeFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.DatetimeFormat\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.domains.domain.Domain" [color = "#e5e5e5ff", label = "sympy.polys.domains.domain.Domain\ncalls: 1\ntime: 0.000104s"];
    "sympy.polys.polyoptions.Gens" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Gens\ncalls: 1\ntime: 0.000010s"];
    "numpy.lib.stride_tricks.DummyArray" [color = "#e5e5e5ff", label = "numpy.lib.stride_tricks.DummyArray\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.libmp.libmpf.from_int" [color = "#e3e5e5ff", label = "sympy.mpmath.libmp.libmpf.from_int\ncalls: 241\ntime: 0.028289s"];
    "numpy.polynomial.polynomial.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.polynomial.<module>\ncalls: 1\ntime: 0.003035s"];
    "sympy.functions.special.hyper.HyperRep" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep\ncalls: 1\ntime: 0.000014s"];
    "sympy.printing.lambdarepr.<module>" [color = "#e5e5e5ff", label = "sympy.printing.lambdarepr.<module>\ncalls: 1\ntime: 0.000208s"];
    "numpy.lib.arraypad.<module>" [color = "#e5e5e5ff", label = "numpy.lib.arraypad.<module>\ncalls: 1\ntime: 0.000043s"];
    "sympy.mpmath.libmp.libmpf.<genexpr>" [color = "#e3e5e5ff", label = "sympy.mpmath.libmp.libmpf.<genexpr>\ncalls: 268\ntime: 0.021885s"];
    "PiecewiseRule" [color = "#e5e5e5ff", label = "PiecewiseRule\ncalls: 1\ntime: 0.000027s"];
    "sympy.utilities.decorator.no_attrs_in_subclass" [color = "#e5e5e5ff", label = "sympy.utilities.decorator.no_attrs_in_subclass\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.compatibility._HashedSeq.__hash__" [color = "#e1e5e5ff", label = "sympy.core.compatibility._HashedSeq.__hash__\ncalls: 751\ntime: 0.002591s"];
    "sympy.polys.polyoptions.Auto" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Auto\ncalls: 1\ntime: 0.000011s"];
    "decimal.Overflow" [color = "#e5e5e5ff", label = "decimal.Overflow\ncalls: 1\ntime: 0.000007s"];
    "sympy.functions.special.error_functions.erfi" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erfi\ncalls: 1\ntime: 0.000378s"];
    "sympy.printing.fcode.<module>" [color = "#e5e5e5ff", label = "sympy.printing.fcode.<module>\ncalls: 1\ntime: 0.000179s"];
    "sympy.plotting.intervalmath.interval_arithmetic.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.intervalmath.interval_arithmetic.<module>\ncalls: 1\ntime: 0.000161s"];
    "sympy.core.compatibility.with_metaclass" [color = "#e4e5e5ff", label = "sympy.core.compatibility.with_metaclass\ncalls: 50\ntime: 0.006431s"];
    "sympy.functions.special.error_functions.erfc" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erfc\ncalls: 1\ntime: 0.000281s"];
    "sympy.core.expr.Pi._eval_power" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi._eval_power\ncalls: 2\ntime: 0.000007s"];
    "unittest.signals._InterruptHandler" [color = "#e5e5e5ff", label = "unittest.signals._InterruptHandler\ncalls: 1\ntime: 0.000009s"];
    "doctest._SpoofOut" [color = "#e5e5e5ff", label = "doctest._SpoofOut\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.orthopolys.<module>" [color = "#e5e5e5ff", label = "sympy.polys.orthopolys.<module>\ncalls: 1\ntime: 0.000235s"];
    "sympy.polys.polyutils.<module>" [color = "#e3e5e5ff", label = "sympy.polys.polyutils.<module>\ncalls: 1\ntime: 0.048966s"];
    "sympy.matrices.matrices.DeferredVector" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.DeferredVector\ncalls: 1\ntime: 0.000009s"];
    "unittest.case.<module>" [color = "#e5e5e5ff", label = "unittest.case.<module>\ncalls: 1\ntime: 0.009372s"];
    "sympy.mpmath.libmp.libhyper.<module>" [color = "#e3e5e5ff", label = "sympy.mpmath.libmp.libhyper.<module>\ncalls: 1\ntime: 0.043176s"];
    "sympy.mpmath.libmp.libmpf.to_int" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.to_int\ncalls: 2\ntime: 0.000023s"];
    "joblib.parallel.Parallel" [color = "#e5e5e5ff", label = "joblib.parallel.Parallel\ncalls: 1\ntime: 0.000036s"];
    "sympy.core.add.<module>" [color = "#e5e5e5ff", label = "sympy.core.add.<module>\ncalls: 1\ntime: 0.003034s"];
    "sympy.core.function.FunctionClass" [color = "#e5e5e5ff", label = "sympy.core.function.FunctionClass\ncalls: 1\ntime: 0.000011s"];
    "sympy.mpmath.libmp.libmpf._normalize" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf._normalize\ncalls: 22\ntime: 0.000406s"];
    "sympy.calculus.singularities.<module>" [color = "#e5e5e5ff", label = "sympy.calculus.singularities.<module>\ncalls: 1\ntime: 0.000015s"];
    "sympy.geometry.polygon.Triangle" [color = "#e5e5e5ff", label = "sympy.geometry.polygon.Triangle\ncalls: 1\ntime: 0.000027s"];
    "numpy.linalg.info.<module>" [color = "#e5e5e5ff", label = "numpy.linalg.info.<module>\ncalls: 1\ntime: 0.000011s"];
    "numpy.compat._inspect.getargspec" [color = "#e5e5e5ff", label = "numpy.compat._inspect.getargspec\ncalls: 40\ntime: 0.003928s"];
    "RRtoolbox.lib.cache.Memoizer.ignore" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.Memoizer.ignore\ncalls: 1\ntime: 0.000012s"];
    "sympy.functions.combinatorial.factorials.factorial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.factorial\ncalls: 1\ntime: 0.000016s"];
    "sympy.core.core.ClassRegistry.__setattr__" [color = "#e1e5e5ff", label = "sympy.core.core.ClassRegistry.__setattr__\ncalls: 690\ntime: 0.010490s"];
    "sympy.mpmath.matrices.eigen_symmetric.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.eigen_symmetric.<module>\ncalls: 1\ntime: 0.000250s"];
    "sympy.core.facts.InconsistentAssumptions" [color = "#e5e5e5ff", label = "sympy.core.facts.InconsistentAssumptions\ncalls: 1\ntime: 0.000006s"];
    "sympy.polys.densebasic.<module>" [color = "#e5e5e5ff", label = "sympy.polys.densebasic.<module>\ncalls: 1\ntime: 0.002329s"];
    "sympy.core.assumptions.<module>" [color = "#c5d8e5ff", label = "sympy.core.assumptions.<module>\ncalls: 1\ntime: 0.654945s"];
    "sympy.mpmath.ctx_iv._wrap_specfun" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_iv._wrap_specfun\ncalls: 207\ntime: 0.001730s"];
    "sympy.core.cache._getenv" [color = "#e5e5e5ff", label = "sympy.core.cache._getenv\ncalls: 2\ntime: 0.000140s"];
    "sympy.core.basic.Predicate.func" [color = "#e5e5e5ff", label = "sympy.core.basic.Predicate.func\ncalls: 92\ntime: 0.000324s"];
    "sympy.simplify.sqrtdenest.SqrtdenestStopIteration" [color = "#e5e5e5ff", label = "sympy.simplify.sqrtdenest.SqrtdenestStopIteration\ncalls: 1\ntime: 0.000006s"];
    "numpy.core.numeric._setdef" [color = "#e5e5e5ff", label = "numpy.core.numeric._setdef\ncalls: 1\ntime: 0.000012s"];
    "multiprocessing.AuthenticationError" [color = "#e5e5e5ff", label = "multiprocessing.AuthenticationError\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.core.SingletonRegistry.__setattr__" [color = "#e5e5e5ff", label = "sympy.core.core.SingletonRegistry.__setattr__\ncalls: 25\ntime: 0.000128s"];
    "numpy.compat._inspect.ismethod" [color = "#e5e5e5ff", label = "numpy.compat._inspect.ismethod\ncalls: 40\ntime: 0.000185s"];
    "encodings.normalize_encoding" [color = "#e5e5e5ff", label = "encodings.normalize_encoding\ncalls: 1\ntime: 0.000017s"];
    "TrigRule" [color = "#e5e5e5ff", label = "TrigRule\ncalls: 1\ntime: 0.000031s"];
    "sympy.polys.sqfreetools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.sqfreetools.<module>\ncalls: 1\ntime: 0.000052s"];
    "sympy.functions.special.error_functions.Ci" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.Ci\ncalls: 1\ntime: 0.003238s"];
    "RRtoolbox.lib.directory.directory.copy" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.directory.copy\ncalls: 1\ntime: 0.000150s"];
    "numpy.ma.core.MaskedConstant.__array_finalize__" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedConstant.__array_finalize__\ncalls: 1\ntime: 0.000004s"];
    "sympy.printing.codeprinter.AssignmentError" [color = "#e5e5e5ff", label = "sympy.printing.codeprinter.AssignmentError\ncalls: 1\ntime: 0.000007s"];
    "fractions.Fraction" [color = "#e5e5e5ff", label = "fractions.Fraction\ncalls: 1\ntime: 0.000251s"];
    "sympy.polys.domains.pythonrational.<module>" [color = "#e3e5e5ff", label = "sympy.polys.domains.pythonrational.<module>\ncalls: 1\ntime: 0.036116s"];
    "sympy.mpmath.ctx_mp.__init__" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_mp.__init__\ncalls: 1\ntime: 0.011055s"];
    "sympy.core.singleton.<module>" [color = "#e5e5e5ff", label = "sympy.core.singleton.<module>\ncalls: 1\ntime: 0.000240s"];
    "sympy.mpmath.calculus.calculus.defun" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.calculus.defun\ncalls: 24\ntime: 0.000181s"];
    "sympy.core.multidimensional.vectorize" [color = "#e5e5e5ff", label = "sympy.core.multidimensional.vectorize\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.combinatorial.factorials.subfactorial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.subfactorial\ncalls: 1\ntime: 0.000312s"];
    "sympy.core.basic.Infinity._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Infinity._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "sympy.core.coreerrors.BaseCoreError" [color = "#e5e5e5ff", label = "sympy.core.coreerrors.BaseCoreError\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.elementary.exponential.LambertW" [color = "#e5e5e5ff", label = "sympy.functions.elementary.exponential.LambertW\ncalls: 1\ntime: 0.000011s"];
    "sympy.solvers.deutils.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.deutils.<module>\ncalls: 1\ntime: 0.000027s"];
    "sympy.matrices.expressions.diagonal.DiagonalOf" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.diagonal.DiagonalOf\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.libmp.libmpf.to_float" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.to_float\ncalls: 2\ntime: 0.000022s"];
    "sympy.core.compatibility.is_sequence" [color = "#e4e5e5ff", label = "sympy.core.compatibility.is_sequence\ncalls: 199\ntime: 0.001781s"];
    "numpy.ma.extras.mr_class" [color = "#e5e5e5ff", label = "numpy.ma.extras.mr_class\ncalls: 1\ntime: 0.000007s"];
    "sympy.simplify.hyperexpand.Hyper_Function" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.Hyper_Function\ncalls: 1\ntime: 0.000019s"];
    "sympy.core.compatibility.as_int" [color = "#e4e5e5ff", label = "sympy.core.compatibility.as_int\ncalls: 129\ntime: 0.000987s"];
    "sympy.mpmath.libmp.libmpf.<module>" [color = "#dfe5e5ff", label = "sympy.mpmath.libmp.libmpf.<module>\ncalls: 1\ntime: 0.114030s"];
    "sympy.mpmath.libmp.libmpf.mpf_rdiv_int" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_rdiv_int\ncalls: 2\ntime: 0.000173s"];
    "sympy.series.gruntz.SubsSet" [color = "#e5e5e5ff", label = "sympy.series.gruntz.SubsSet\ncalls: 1\ntime: 0.000013s"];
    "pprint.<module>" [color = "#e5e5e5ff", label = "pprint.<module>\ncalls: 1\ntime: 0.000116s"];
    "RRtoolbox.lib.cache.Memoizer" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.Memoizer\ncalls: 1\ntime: 0.000032s"];
    "multiprocessing.util.ForkAwareThreadLock" [color = "#e5e5e5ff", label = "multiprocessing.util.ForkAwareThreadLock\ncalls: 1\ntime: 0.000011s"];
    "sympy.printing.python.PythonPrinter" [color = "#e5e5e5ff", label = "sympy.printing.python.PythonPrinter\ncalls: 1\ntime: 0.000011s"];
    "doctest.DocTestParser" [color = "#e1e5e5ff", label = "doctest.DocTestParser\ncalls: 1\ntime: 0.086879s"];
    "sympy.ntheory.factor_.totient" [color = "#e5e5e5ff", label = "sympy.ntheory.factor_.totient\ncalls: 1\ntime: 0.000008s"];
    "pickle.Unpickler.load_appends" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_appends\ncalls: 4\ntime: 0.000145s"];
    "sympy.core.decorators.__sympifyit" [color = "#e5e5e5ff", label = "sympy.core.decorators.__sympifyit\ncalls: 61\ntime: 0.003994s"];
    "sympy.ntheory.egyptian_fraction.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.egyptian_fraction.<module>\ncalls: 1\ntime: 0.000038s"];
    "sympy.mpmath.calculus.optimization.Halley" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Halley\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.containers.Tuple" [color = "#e5e5e5ff", label = "sympy.core.containers.Tuple\ncalls: 1\ntime: 0.000021s"];
    "sympy.mpmath.function_docs.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.function_docs.<module>\ncalls: 1\ntime: 0.000233s"];
    "sympy.mpmath.libmp.six._add_doc" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six._add_doc\ncalls: 4\ntime: 0.000019s"];
    "sympy.utilities.misc.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.misc.<module>\ncalls: 1\ntime: 0.000079s"];
    "sympy.core.relational.Unequality" [color = "#e5e5e5ff", label = "sympy.core.relational.Unequality\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.compatibility.default_sort_key" [color = "#e3e5e5ff", label = "sympy.core.compatibility.default_sort_key\ncalls: 56\ntime: 0.029253s"];
    "sympy.functions.special.gamma_functions.polygamma" [color = "#e5e5e5ff", label = "sympy.functions.special.gamma_functions.polygamma\ncalls: 1\ntime: 0.000016s"];
    "sympy.mpmath.rational.mpq" [color = "#e5e5e5ff", label = "sympy.mpmath.rational.mpq\ncalls: 1\ntime: 0.000043s"];
    "sympy.core.function.__new__" [color = "#dce4e5ff", label = "sympy.core.function.__new__\ncalls: 181\ntime: 0.160764s"];
    "sympy.polys.domains.groundtypes.GMPYRational" [color = "#e5e5e5ff", label = "sympy.polys.domains.groundtypes.GMPYRational\ncalls: 1\ntime: 0.000005s"];
    "sympy.polys.domains.groundtypes.GMPYRational.__init__" [color = "#e5e5e5ff", label = "sympy.polys.domains.groundtypes.GMPYRational.__init__\ncalls: 2\ntime: 0.000007s"];
    "ctypes._reset_cache" [color = "#e5e5e5ff", label = "ctypes._reset_cache\ncalls: 1\ntime: 0.000337s"];
    "sympy.matrices.expressions.hadamard.HadamardProduct" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.hadamard.HadamardProduct\ncalls: 1\ntime: 0.000013s"];
    "joblib.format_stack.<module>" [color = "#e5e5e5ff", label = "joblib.format_stack.<module>\ncalls: 1\ntime: 0.000100s"];
    "sympy.polys.polyclasses.GenericPoly" [color = "#e5e5e5ff", label = "sympy.polys.polyclasses.GenericPoly\ncalls: 1\ntime: 0.000019s"];
    "sympy.functions.elementary.complexes.adjoint" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.adjoint\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.polyoptions.Polys" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Polys\ncalls: 1\ntime: 0.000006s"];
    "logging.FileHandler" [color = "#e5e5e5ff", label = "logging.FileHandler\ncalls: 1\ntime: 0.000016s"];
    "sympy.polys.monomials.<module>" [color = "#e5e5e5ff", label = "sympy.polys.monomials.<module>\ncalls: 1\ntime: 0.000332s"];
    "sympy.core.logic.Logic" [color = "#e5e5e5ff", label = "sympy.core.logic.Logic\ncalls: 1\ntime: 0.000019s"];
    "sympy.ntheory.residue_ntheory.mobius" [color = "#e5e5e5ff", label = "sympy.ntheory.residue_ntheory.mobius\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.basic.Pow.compare" [color = "#e5e5e5ff", label = "sympy.core.basic.Pow.compare\ncalls: 1\ntime: 0.000305s"];
    "sympy.plotting.plot.SurfaceBaseSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.SurfaceBaseSeries\ncalls: 1\ntime: 0.000008s"];
    "pdb.Restart" [color = "#e5e5e5ff", label = "pdb.Restart\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.libmp.libmpf.h_mask_big" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.h_mask_big\ncalls: 1\ntime: 0.000015s"];
    "sympy.printing.gtk.<module>" [color = "#e5e5e5ff", label = "sympy.printing.gtk.<module>\ncalls: 1\ntime: 0.000043s"];
    "TrigSubstitutionRule" [color = "#e5e5e5ff", label = "TrigSubstitutionRule\ncalls: 1\ntime: 0.000033s"];
    "sympy.functions.elementary.trigonometric.sec" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.sec\ncalls: 1\ntime: 0.000283s"];
    "sympy.functions.combinatorial.numbers.catalan" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.catalan\ncalls: 1\ntime: 0.000013s"];
    "os.getenv" [color = "#e5e5e5ff", label = "os.getenv\ncalls: 19\ntime: 0.000791s"];
    "HeavisideRule" [color = "#e5e5e5ff", label = "HeavisideRule\ncalls: 1\ntime: 0.000025s"];
    "sympy.core.numbers._new" [color = "#e5e5e5ff", label = "sympy.core.numbers._new\ncalls: 4\ntime: 0.000392s"];
    "sympy.matrices.matrices.NonSquareMatrixError" [color = "#e5e5e5ff", label = "sympy.matrices.matrices.NonSquareMatrixError\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.special.bessel.yn" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.yn\ncalls: 1\ntime: 0.000008s"];
    "numpy.lib.utils.SafeEval" [color = "#e5e5e5ff", label = "numpy.lib.utils.SafeEval\ncalls: 1\ntime: 0.000020s"];
    "sympy.ntheory.factor_.factorint" [color = "#e5e5e5ff", label = "sympy.ntheory.factor_.factorint\ncalls: 4\ntime: 0.000347s"];
    "sympy.polys.domains.ring.Ring" [color = "#e5e5e5ff", label = "sympy.polys.domains.ring.Ring\ncalls: 1\ntime: 0.000021s"];
    "sympy.logic.boolalg.BooleanAtom" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.BooleanAtom\ncalls: 1\ntime: 0.000006s"];
    "sympy.mpmath.ctx_iv.ivmpf.__neg__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.ivmpf.__neg__\ncalls: 1\ntime: 0.000199s"];
    "numpy.core.getlimits.<module>" [color = "#e5e5e5ff", label = "numpy.core.getlimits.<module>\ncalls: 1\ntime: 0.000218s"];
    "sympy.functions.elementary.exponential.exp" [color = "#e5e5e5ff", label = "sympy.functions.elementary.exponential.exp\ncalls: 1\ntime: 0.000300s"];
    "numpy.ma.core.MaskedArray" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskedArray\ncalls: 1\ntime: 0.000714s"];
    "sympy.utilities.decorator.xthreaded" [color = "#e1e5e5ff", label = "sympy.utilities.decorator.xthreaded\ncalls: 3\ntime: 0.081543s"];
    "pickle.Unpickler.marker" [color = "#e5e5e5ff", label = "pickle.Unpickler.marker\ncalls: 13\ntime: 0.000210s"];
    "sympy.mpmath.matrices.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.<module>\ncalls: 1\ntime: 0.002149s"];
    "functools.K.__lt__" [color = "#e5e5e5ff", label = "functools.K.__lt__\ncalls: 2\ntime: 0.000558s"];
    "sympy.polys.rationaltools.<module>" [color = "#e5e5e5ff", label = "sympy.polys.rationaltools.<module>\ncalls: 1\ntime: 0.000074s"];
    "sympy.matrices.expressions.diagonal.DiagonalMatrix" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.diagonal.DiagonalMatrix\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.relational.StrictGreaterThan" [color = "#e5e5e5ff", label = "sympy.core.relational.StrictGreaterThan\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.ctx_mp.MPContext" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp.MPContext\ncalls: 1\ntime: 0.000068s"];
    "posixpath.join" [color = "#e5e5e5ff", label = "posixpath.join\ncalls: 8\ntime: 0.000110s"];
    "sympy.core.numbers.One.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.One.__eq__\ncalls: 12\ntime: 0.000081s"];
    "pickle.Unpickler.load_tuple1" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_tuple1\ncalls: 8\ntime: 0.000040s"];
    "imrestore.<module>" [color = "#e5e5e5ff", label = "imrestore.<module>\ncalls: 1\ntime: 0.000000s"];
    "decimal._ContextManager" [color = "#e5e5e5ff", label = "decimal._ContextManager\ncalls: 1\ntime: 0.000008s"];
    "sympy.geometry.exceptions.GeometryError" [color = "#e5e5e5ff", label = "sympy.geometry.exceptions.GeometryError\ncalls: 1\ntime: 0.000007s"];
    "pkgutil.ImpImporter" [color = "#e5e5e5ff", label = "pkgutil.ImpImporter\ncalls: 1\ntime: 0.000009s"];
    "numpy.ctypeslib.prep_simple" [color = "#e5e5e5ff", label = "numpy.ctypeslib.prep_simple\ncalls: 12\ntime: 0.000194s"];
    "sympy.geometry.point3d.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.point3d.<module>\ncalls: 1\ntime: 0.001959s"];
    "inspect.getargspec" [color = "#e3e5e5ff", label = "inspect.getargspec\ncalls: 182\ntime: 0.032428s"];
    "sympy.polys.domains.algebraicfield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.algebraicfield.<module>\ncalls: 1\ntime: 0.000176s"];
    "sympy.core.operations.<module>" [color = "#e5e5e5ff", label = "sympy.core.operations.<module>\ncalls: 1\ntime: 0.004337s"];
    "sympy.core.expr.Half._eval_is_negative" [color = "#e5e5e5ff", label = "sympy.core.expr.Half._eval_is_negative\ncalls: 1\ntime: 0.005288s"];
    "sympy.solvers.polysys.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.polysys.<module>\ncalls: 1\ntime: 0.000124s"];
    "sympy.core.basic.Half.func" [color = "#e5e5e5ff", label = "sympy.core.basic.Half.func\ncalls: 1\ntime: 0.000004s"];
    "numpy.testing.nosetester.<module>" [color = "#e5e5e5ff", label = "numpy.testing.nosetester.<module>\ncalls: 1\ntime: 0.000129s"];
    "numpy.core._internal._missing_ctypes" [color = "#e5e5e5ff", label = "numpy.core._internal._missing_ctypes\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.domains.finitefield.FiniteField" [color = "#e5e5e5ff", label = "sympy.polys.domains.finitefield.FiniteField\ncalls: 1\ntime: 0.000029s"];
    "sympy.polys.polyoptions.Gaussian" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Gaussian\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.special.tensor_functions.LeviCivita" [color = "#e5e5e5ff", label = "sympy.functions.special.tensor_functions.LeviCivita\ncalls: 1\ntime: 0.000009s"];
    "sympy.simplify.sqrtdenest.<module>" [color = "#e5e5e5ff", label = "sympy.simplify.sqrtdenest.<module>\ncalls: 1\ntime: 0.000127s"];
    "numpy.__config__.<module>" [color = "#e5e5e5ff", label = "numpy.__config__.<module>\ncalls: 1\ntime: 0.000041s"];
    "numpy.lib.polynomial.poly1d" [color = "#e5e5e5ff", label = "numpy.lib.polynomial.poly1d\ncalls: 1\ntime: 0.000047s"];
    "RRtoolbox.lib.arrayops.basic.<module>" [color = "#e3e5e5ff", label = "RRtoolbox.lib.arrayops.basic.<module>\ncalls: 1\ntime: 0.032601s"];
    "sympy.core.basic.Zero.func" [color = "#e5e5e5ff", label = "sympy.core.basic.Zero.func\ncalls: 2\ntime: 0.000008s"];
    "sympy.polys.polyerrors.OperationNotSupported" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.OperationNotSupported\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.decorators.Pow.binary_op_wrapper" [color = "#e4e5e5ff", label = "sympy.core.decorators.Pow.binary_op_wrapper\ncalls: 5\ntime: 0.015000s"];
    "sre_parse.Tokenizer.__next" [color = "#d1e0e5ff", label = "sre_parse.Tokenizer.__next\ncalls: 3.901\ntime: 0.038825s"];
    "numbers.Real" [color = "#e5e5e5ff", label = "numbers.Real\ncalls: 1\ntime: 0.000255s"];
    "numpy.lib.index_tricks.AxisConcatenator" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.AxisConcatenator\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.elementary.integers.floor" [color = "#e5e5e5ff", label = "sympy.functions.elementary.integers.floor\ncalls: 1\ntime: 0.000009s"];
    "sympy.simplify.hyperexpand.UnShiftA" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.UnShiftA\ncalls: 1\ntime: 0.000007s"];
    "sympy.simplify.hyperexpand.UnShiftB" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.UnShiftB\ncalls: 1\ntime: 0.000007s"];
    "sympy.functions.special.error_functions.expint" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.expint\ncalls: 1\ntime: 0.000016s"];
    "sympy.plotting.plot.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.plot.<module>\ncalls: 1\ntime: 0.003983s"];
    "sympy.core.numbers.Half.as_numer_denom" [color = "#e5e5e5ff", label = "sympy.core.numbers.Half.as_numer_denom\ncalls: 1\ntime: 0.000058s"];
    "sympy.core.facts.Prover.process_rule" [color = "#e2e5e5ff", label = "sympy.core.facts.Prover.process_rule\ncalls: 91\ntime: 0.056284s"];
    "multiprocessing.synchronize.Event" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.Event\ncalls: 1\ntime: 0.000015s"];
    "sympy.integrals.manualintegrate.evaluates" [color = "#e5e5e5ff", label = "sympy.integrals.manualintegrate.evaluates\ncalls: 20\ntime: 0.000120s"];
    "sympy.mpmath.calculus.optimization.MDNewton" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.MDNewton\ncalls: 1\ntime: 0.000011s"];
    "pprint.PrettyPrinter" [color = "#e5e5e5ff", label = "pprint.PrettyPrinter\ncalls: 1\ntime: 0.000017s"];
    "sympy.functions.special.error_functions.li" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.li\ncalls: 1\ntime: 0.000019s"];
    "joblib.memory.JobLibCollisionWarning" [color = "#e5e5e5ff", label = "joblib.memory.JobLibCollisionWarning\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.special.bessel.besseli" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.besseli\ncalls: 1\ntime: 0.000037s"];
    "sympy.core.decorators.deprecated_decorator" [color = "#e5e5e5ff", label = "sympy.core.decorators.deprecated_decorator\ncalls: 14\ntime: 0.000923s"];
    "sympy.functions.special.hyper.HyperRep_sinasin" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_sinasin\ncalls: 1\ntime: 0.000011s"];
    "sympy.core.add.Add" [color = "#e5e5e5ff", label = "sympy.core.add.Add\ncalls: 1\ntime: 0.001090s"];
    "sympy.functions.special.bessel.bessely" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.bessely\ncalls: 1\ntime: 0.000013s"];
    "sympy.plotting.plot_implicit.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.plot_implicit.<module>\ncalls: 1\ntime: 0.002933s"];
    "sympy.mpmath.libmp.libmpf.mpf_neg" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_neg\ncalls: 3\ntime: 0.000030s"];
    "sympy.simplify.hyperexpand.<module>" [color = "#e4e5e5ff", label = "sympy.simplify.hyperexpand.<module>\ncalls: 1\ntime: 0.015336s"];
    "sympy.polys.domains.field.Field" [color = "#e5e5e5ff", label = "sympy.polys.domains.field.Field\ncalls: 1\ntime: 0.000072s"];
    "sympy.polys.polyoptions.Greedy" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Greedy\ncalls: 1\ntime: 0.000009s"];
    "ctypes.c_longdouble" [color = "#e5e5e5ff", label = "ctypes.c_longdouble\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.compatibility._getenv" [color = "#e5e5e5ff", label = "sympy.core.compatibility._getenv\ncalls: 1\ntime: 0.000085s"];
    "joblib.parallel.SafeFunction" [color = "#e5e5e5ff", label = "joblib.parallel.SafeFunction\ncalls: 1\ntime: 0.000011s"];
    "pickle.<module>" [color = "#e4e5e5ff", label = "pickle.<module>\ncalls: 1\ntime: 0.010972s"];
    "joblib.logger.<module>" [color = "#e4e5e5ff", label = "joblib.logger.<module>\ncalls: 1\ntime: 0.010309s"];
    "sympy.mpmath.libmp.libmpf.mpf_le" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_le\ncalls: 4\ntime: 0.000272s"];
    "sympy.utilities.source.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.source.<module>\ncalls: 1\ntime: 0.000017s"];
    "sympy.mpmath.visualization.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.visualization.<module>\ncalls: 1\ntime: 0.000153s"];
    "sympy.polys.polyerrors.ExtraneousFactors" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.ExtraneousFactors\ncalls: 1\ntime: 0.000005s"];
    "sympy.mpmath.libmp.libmpf.mpf_lt" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_lt\ncalls: 30\ntime: 0.001328s"];
    "ctypes._endian.<module>" [color = "#e5e5e5ff", label = "ctypes._endian.<module>\ncalls: 1\ntime: 0.000241s"];
    "pickle.Unpickler.__init__" [color = "#e5e5e5ff", label = "pickle.Unpickler.__init__\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.elliptic_integrals.elliptic_k" [color = "#e5e5e5ff", label = "sympy.functions.special.elliptic_integrals.elliptic_k\ncalls: 1\ntime: 0.000015s"];
    "numpy.core.machar.<module>" [color = "#e5e5e5ff", label = "numpy.core.machar.<module>\ncalls: 1\ntime: 0.000122s"];
    "sympy.functions.special.elliptic_integrals.elliptic_e" [color = "#e5e5e5ff", label = "sympy.functions.special.elliptic_integrals.elliptic_e\ncalls: 1\ntime: 0.000013s"];
    "sympy.functions.special.elliptic_integrals.elliptic_f" [color = "#e5e5e5ff", label = "sympy.functions.special.elliptic_integrals.elliptic_f\ncalls: 1\ntime: 0.000009s"];
    "sympy.polys.specialpolys.<module>" [color = "#e5e5e5ff", label = "sympy.polys.specialpolys.<module>\ncalls: 1\ntime: 0.005235s"];
    "sympy.polys.domains.simpledomain.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.simpledomain.<module>\ncalls: 1\ntime: 0.000121s"];
    "decimal.Rounded" [color = "#e5e5e5ff", label = "decimal.Rounded\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.special.hyper.hyper" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.hyper\ncalls: 1\ntime: 0.000027s"];
    "sympy.strategies.rl.sort" [color = "#e5e5e5ff", label = "sympy.strategies.rl.sort\ncalls: 1\ntime: 0.000006s"];
    "sympy.functions.elementary.piecewise.<module>" [color = "#e5e5e5ff", label = "sympy.functions.elementary.piecewise.<module>\ncalls: 1\ntime: 0.003943s"];
    "sympy.mpmath.visualization.VisualizationMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.visualization.VisualizationMethods\ncalls: 1\ntime: 0.000009s"];
    "RRtoolbox.lib.cache.memoizedDict" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.memoizedDict\ncalls: 1\ntime: 0.000028s"];
    "sympy.core.mul.flatten" [color = "#e4e5e5ff", label = "sympy.core.mul.flatten\ncalls: 7\ntime: 0.025911s"];
    "sympy.geometry.polygon.Polygon" [color = "#e5e5e5ff", label = "sympy.geometry.polygon.Polygon\ncalls: 1\ntime: 0.000026s"];
    "sympy.logic.boolalg.<lambda>" [color = "#e4e5e5ff", label = "sympy.logic.boolalg.<lambda>\ncalls: 278\ntime: 0.001171s"];
    "sympy.mpmath.libmp.libmpf.mpf_pos" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.mpf_pos\ncalls: 6\ntime: 0.000189s"];
    "sympy.polys.polyerrors.PolynomialDivisionFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.PolynomialDivisionFailed\ncalls: 1\ntime: 0.000006s"];
    "copy_reg.pickle" [color = "#e5e5e5ff", label = "copy_reg.pickle\ncalls: 1\ntime: 0.000063s"];
    "sympy.core.numbers.Float" [color = "#e5e5e5ff", label = "sympy.core.numbers.Float\ncalls: 1\ntime: 0.000784s"];
    "sympy.core.basic.Tuple.args" [color = "#e5e5e5ff", label = "sympy.core.basic.Tuple.args\ncalls: 1\ntime: 0.000004s"];
    "ctypes.c_char_p" [color = "#e5e5e5ff", label = "ctypes.c_char_p\ncalls: 1\ntime: 0.000011s"];
    "numpy.lib.npyio.<module>" [color = "#e5e5e5ff", label = "numpy.lib.npyio.<module>\ncalls: 1\ntime: 0.003233s"];
    "sympy.mpmath.matrices.calculus.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.calculus.<module>\ncalls: 1\ntime: 0.000128s"];
    "sympy.strategies.core.condition" [color = "#e5e5e5ff", label = "sympy.strategies.core.condition\ncalls: 2\ntime: 0.000012s"];
    "joblib.my_exceptions.JoblibException" [color = "#e5e5e5ff", label = "joblib.my_exceptions.JoblibException\ncalls: 1\ntime: 0.000017s"];
    "sympy.release.<module>" [color = "#e5e5e5ff", label = "sympy.release.<module>\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.decorators.__sympifyit_wrapper" [color = "#e3e5e5ff", label = "sympy.core.decorators.__sympifyit_wrapper\ncalls: 16\ntime: 0.039503s"];
    "sympy.printing.pretty.pretty_symbology.<genexpr>" [color = "#e5e5e5ff", label = "sympy.printing.pretty.pretty_symbology.<genexpr>\ncalls: 50\ntime: 0.002229s"];
    "sympy.strategies.branch.tools.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.branch.tools.<module>\ncalls: 1\ntime: 0.000018s"];
    "sympy.functions.combinatorial.numbers._MultisetHistogram" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers._MultisetHistogram\ncalls: 1\ntime: 0.000006s"];
    "sympy.matrices.expressions.matadd.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matadd.<module>\ncalls: 1\ntime: 0.003192s"];
    "encodings.hex_codec.Codec" [color = "#e5e5e5ff", label = "encodings.hex_codec.Codec\ncalls: 1\ntime: 0.000016s"];
    "multiprocessing.synchronize.RLock" [color = "#e5e5e5ff", label = "multiprocessing.synchronize.RLock\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.compatibility.Iterator" [color = "#e5e5e5ff", label = "sympy.core.compatibility.Iterator\ncalls: 1\ntime: 0.000006s"];
    "sympy.utilities.runtests.sys_normcase" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.sys_normcase\ncalls: 1\ntime: 0.000006s"];
    "numpy.polynomial.hermite.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite.<module>\ncalls: 1\ntime: 0.000494s"];
    "sympy.mpmath.matrices.linalg.LinearAlgebraMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.linalg.LinearAlgebraMethods\ncalls: 1\ntime: 0.000032s"];
    "sympy.polys.rootoftools.RootSum" [color = "#e5e5e5ff", label = "sympy.polys.rootoftools.RootSum\ncalls: 1\ntime: 0.000024s"];
    "RRtoolbox.lib.config.getDirectories" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.getDirectories\ncalls: 1\ntime: 0.000124s"];
    "sympy.functions.elementary.piecewise.ExprCondPair" [color = "#e5e5e5ff", label = "sympy.functions.elementary.piecewise.ExprCondPair\ncalls: 1\ntime: 0.000017s"];
    "sympy.mpmath.libmp.libelefun.def_mpf_constant" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libelefun.def_mpf_constant\ncalls: 15\ntime: 0.000197s"];
    "sympy.functions.elementary.miscellaneous.Min" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.Min\ncalls: 1\ntime: 0.000014s"];
    "sympy.polys.constructor.<module>" [color = "#e5e5e5ff", label = "sympy.polys.constructor.<module>\ncalls: 1\ntime: 0.000070s"];
    "numpy.ma.core._convert2ma.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.core._convert2ma.getdoc\ncalls: 8\ntime: 0.001334s"];
    "sympy.mpmath.calculus.polynomials.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.polynomials.<module>\ncalls: 1\ntime: 0.000092s"];
    "RRtoolbox.lib.config.ConfigTool" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.ConfigTool\ncalls: 1\ntime: 0.000007s"];
    "sympy.solvers.ode.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.ode.<module>\ncalls: 1\ntime: 0.001627s"];
    "sympy.simplify.hyperexpand.MeijerUnShiftA" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerUnShiftA\ncalls: 1\ntime: 0.000007s"];
    "pickle.Unpickler.load_empty_dictionary" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_empty_dictionary\ncalls: 9\ntime: 0.000033s"];
    "sympy.simplify.hyperexpand.MeijerUnShiftB" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerUnShiftB\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.functions.orthogonal.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.orthogonal.<module>\ncalls: 1\ntime: 0.000489s"];
    "sympy.functions.elementary.hyperbolic.cosh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.cosh\ncalls: 1\ntime: 0.000277s"];
    "sympy.core.basic.Predicate.__hash__" [color = "#e2e5e5ff", label = "sympy.core.basic.Predicate.__hash__\ncalls: 663\ntime: 0.004471s"];
    "sympy.core.power.Pow.as_base_exp" [color = "#e5e5e5ff", label = "sympy.core.power.Pow.as_base_exp\ncalls: 5\ntime: 0.000122s"];
    "sympy.concrete.expr_with_intlimits.ReorderError" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_intlimits.ReorderError\ncalls: 1\ntime: 0.000006s"];
    "multiprocessing.util.ForkAwareLocal" [color = "#e5e5e5ff", label = "multiprocessing.util.ForkAwareLocal\ncalls: 1\ntime: 0.000011s"];
    "sympy.geometry.line.Ray" [color = "#e5e5e5ff", label = "sympy.geometry.line.Ray\ncalls: 1\ntime: 0.000026s"];
    "numpy.lib.index_tricks.CClass.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.CClass.__init__\ncalls: 2\ntime: 0.000050s"];
    "sympy.mpmath.libmp.libintmath.isqrt_small_python" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libintmath.isqrt_small_python\ncalls: 2\ntime: 0.000025s"];
    "sympy.mpmath.calculus.optimization.Newton" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Newton\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.function.WildFunction" [color = "#e5e5e5ff", label = "sympy.core.function.WildFunction\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.special.error_functions.erf" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erf\ncalls: 1\ntime: 0.000298s"];
    "numpy.core._internal._getintp_ctype" [color = "#e5e5e5ff", label = "numpy.core._internal._getintp_ctype\ncalls: 1\ntime: 0.000016s"];
    "numpy.polynomial.polyutils.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.polyutils.<module>\ncalls: 1\ntime: 0.000335s"];
    "inspect.iscode" [color = "#e4e5e5ff", label = "inspect.iscode\ncalls: 182\ntime: 0.000813s"];
    "numpy.core.numerictypes.english_lower" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.english_lower\ncalls: 72\ntime: 0.000594s"];
    "sympy.solvers.<module>" [color = "#e4e5e5ff", label = "sympy.solvers.<module>\ncalls: 1\ntime: 0.011145s"];
    "sympy.utilities.runtests.<module>" [color = "#d6e2e5ff", label = "sympy.utilities.runtests.<module>\ncalls: 1\ntime: 0.308264s"];
    "ctypes.PyDLL.__init__" [color = "#e5e5e5ff", label = "ctypes.PyDLL.__init__\ncalls: 1\ntime: 0.000131s"];
    "sympy.utilities.runtests.SymPyOutputChecker" [color = "#e5e5e5ff", label = "sympy.utilities.runtests.SymPyOutputChecker\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.polyerrors.HeuristicGCDFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.HeuristicGCDFailed\ncalls: 1\ntime: 0.000005s"];
    "sympy.functions.elementary.hyperbolic.atanh" [color = "#e5e5e5ff", label = "sympy.functions.elementary.hyperbolic.atanh\ncalls: 1\ntime: 0.000279s"];
    "numpy.ma.core._MaskedPrintOption.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedPrintOption.__init__\ncalls: 1\ntime: 0.000005s"];
    "Match" [color = "#e5e5e5ff", label = "Match\ncalls: 1\ntime: 0.000030s"];
    "sympy.mpmath.libmp.six.MovedAttribute.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.MovedAttribute.__init__\ncalls: 18\ntime: 0.000301s"];
    "sympy.core.function.Implies.func" [color = "#e5e5e5ff", label = "sympy.core.function.Implies.func\ncalls: 32\ntime: 0.000103s"];
    "pickle.Unpickler.load_newobj" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_newobj\ncalls: 8\ntime: 0.001431s"];
    "numpy.ma.core.MaskError" [color = "#e5e5e5ff", label = "numpy.ma.core.MaskError\ncalls: 1\ntime: 0.000006s"];
    "ctypes.CFunctionType" [color = "#e5e5e5ff", label = "ctypes.CFunctionType\ncalls: 6\ntime: 0.000061s"];
    "sympy.simplify.hyperexpand.MeijerUnShiftC" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerUnShiftC\ncalls: 1\ntime: 0.000007s"];
    "sympy.logic.boolalg.Equivalent" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Equivalent\ncalls: 1\ntime: 0.000284s"];
    "sympy.geometry.ellipse.<module>" [color = "#e4e5e5ff", label = "sympy.geometry.ellipse.<module>\ncalls: 1\ntime: 0.010613s"];
    "sympy.external.importtools.<module>" [color = "#e5e5e5ff", label = "sympy.external.importtools.<module>\ncalls: 1\ntime: 0.000853s"];
    "sympy.simplify.hyperexpand.MeijerUnShiftD" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerUnShiftD\ncalls: 1\ntime: 0.000007s"];
    "sympy.geometry.line3d.Line3D" [color = "#e5e5e5ff", label = "sympy.geometry.line3d.Line3D\ncalls: 1\ntime: 0.000012s"];
    "sympy.sets.sets.FiniteSet._contains" [color = "#e5e5e5ff", label = "sympy.sets.sets.FiniteSet._contains\ncalls: 4\ntime: 0.000089s"];
    "sympy.strategies.rl.rm_id" [color = "#e5e5e5ff", label = "sympy.strategies.rl.rm_id\ncalls: 2\ntime: 0.000013s"];
    "numpy.polynomial.hermite_e.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.hermite_e.<module>\ncalls: 1\ntime: 0.000408s"];
    "ctypes.c_int" [color = "#e5e5e5ff", label = "ctypes.c_int\ncalls: 1\ntime: 0.000008s"];
    "sympy.mpmath.matrices.eigen.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.eigen.<module>\ncalls: 1\ntime: 0.000291s"];
    "sympy.core.function.eval" [color = "#e5e5e5ff", label = "sympy.core.function.eval\ncalls: 101\ntime: 0.000430s"];
    "sympy.core.basic.Pow.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Pow.__hash__\ncalls: 13\ntime: 0.000387s"];
    "sympy.polys.orderings.LexOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.LexOrder\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.numbers.Zero._as_mpf_val" [color = "#e5e5e5ff", label = "sympy.core.numbers.Zero._as_mpf_val\ncalls: 2\ntime: 0.000159s"];
    "numpy.lib.index_tricks.ndenumerate" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.ndenumerate\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.libmp.six._LazyDescr" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six._LazyDescr\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.extras.mr_class.__init__" [color = "#e5e5e5ff", label = "numpy.ma.extras.mr_class.__init__\ncalls: 2\ntime: 0.000111s"];
    "sympy.mpmath.libmp.libmpi.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpi.<module>\ncalls: 1\ntime: 0.000921s"];
    "sympy.printing.pretty.pretty_symbology.U" [color = "#e4e5e5ff", label = "sympy.printing.pretty.pretty_symbology.U\ncalls: 243\ntime: 0.001752s"];
    "RRtoolbox.lib.cache.MemorizedFunc" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.MemorizedFunc\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.domains.mpelements._make_tol" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements._make_tol\ncalls: 2\ntime: 0.000205s"];
    "RRtoolbox.lib.arrayops.filters.<module>" [color = "#e5e5e5ff", label = "RRtoolbox.lib.arrayops.filters.<module>\ncalls: 1\ntime: 0.000000s"];
    "sympy.polys.domains.integerring.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.integerring.<module>\ncalls: 1\ntime: 0.000985s"];
    "sympy.sets.sets.<module>" [color = "#e4e5e5ff", label = "sympy.sets.sets.<module>\ncalls: 1\ntime: 0.020221s"];
    "multiprocessing.pool.MapResult" [color = "#e5e5e5ff", label = "multiprocessing.pool.MapResult\ncalls: 1\ntime: 0.000011s"];
    "sympy.simplify.hyperexpand.ShiftB" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.ShiftB\ncalls: 1\ntime: 0.000008s"];
    "sympy.simplify.hyperexpand.ShiftA" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.ShiftA\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.ring_series.<module>" [color = "#e5e5e5ff", label = "sympy.polys.ring_series.<module>\ncalls: 1\ntime: 0.000049s"];
    "numpy.lib.<module>" [color = "#dee4e5ff", label = "numpy.lib.<module>\ncalls: 1\ntime: 0.140129s"];
    "numpy.lib.info.<module>" [color = "#e5e5e5ff", label = "numpy.lib.info.<module>\ncalls: 1\ntime: 0.000017s"];
    "sympy.functions.special.spherical_harmonics.Ynm" [color = "#e5e5e5ff", label = "sympy.functions.special.spherical_harmonics.Ynm\ncalls: 1\ntime: 0.000017s"];
    "sympy.mpmath.ctx_iv.__new__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.__new__\ncalls: 16\ntime: 0.002295s"];
    "sympy.utilities.memoization.<module>" [color = "#e5e5e5ff", label = "sympy.utilities.memoization.<module>\ncalls: 1\ntime: 0.000020s"];
    "numpy.ma.core._DomainSafeDivide.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainSafeDivide.__init__\ncalls: 6\ntime: 0.000020s"];
    "sympy.mpmath.functions.zeta.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.zeta.<module>\ncalls: 1\ntime: 0.000853s"];
    "numpy.polynomial.legendre.<module>" [color = "#e5e5e5ff", label = "numpy.polynomial.legendre.<module>\ncalls: 1\ntime: 0.000431s"];
    "sympy.functions.special.error_functions.FresnelIntegral" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.FresnelIntegral\ncalls: 1\ntime: 0.000013s"];
    "sympy.strategies.core.switch" [color = "#e5e5e5ff", label = "sympy.strategies.core.switch\ncalls: 1\ntime: 0.000007s"];
    "sympy.functions.combinatorial.<module>" [color = "#dce4e5ff", label = "sympy.functions.combinatorial.<module>\ncalls: 1\ntime: 0.181001s"];
    "sympy.mpmath.ctx_iv.ivmpf_constant" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_iv.ivmpf_constant\ncalls: 1\ntime: 0.000010s"];
    "numpy.ma.core._DomainedBinaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainedBinaryOperation.__init__\ncalls: 6\ntime: 0.000089s"];
    "pydoc.Scanner" [color = "#e5e5e5ff", label = "pydoc.Scanner\ncalls: 1\ntime: 0.000016s"];
    "sympy.printing.printer.<module>" [color = "#e5e5e5ff", label = "sympy.printing.printer.<module>\ncalls: 1\ntime: 0.000134s"];
    "sympy.core.function.Lambda" [color = "#e5e5e5ff", label = "sympy.core.function.Lambda\ncalls: 1\ntime: 0.000018s"];
    "encodings.hex_codec.hex_decode" [color = "#e5e5e5ff", label = "encodings.hex_codec.hex_decode\ncalls: 1\ntime: 0.000020s"];
    "sympy.plotting.plot.Parametric2DLineSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.Parametric2DLineSeries\ncalls: 1\ntime: 0.000012s"];
    "abc.__instancecheck__" [color = "#e5e5e5ff", label = "abc.__instancecheck__\ncalls: 5\ntime: 0.000540s"];
    "sympy.printing.repr.<module>" [color = "#e5e5e5ff", label = "sympy.printing.repr.<module>\ncalls: 1\ntime: 0.000152s"];
    "sympy.core.exprtools.Factors" [color = "#e5e5e5ff", label = "sympy.core.exprtools.Factors\ncalls: 1\ntime: 0.000031s"];
    "PowerRule" [color = "#e5e5e5ff", label = "PowerRule\ncalls: 1\ntime: 0.000028s"];
    "bdb.Tdb" [color = "#e5e5e5ff", label = "bdb.Tdb\ncalls: 1\ntime: 0.000010s"];
    "numpy.random.info.<module>" [color = "#e5e5e5ff", label = "numpy.random.info.<module>\ncalls: 1\ntime: 0.000046s"];
    "re.match" [color = "#e4e5e5ff", label = "re.match\ncalls: 117\ntime: 0.007734s"];
    "sympy.core.numbers.Infinity" [color = "#e5e5e5ff", label = "sympy.core.numbers.Infinity\ncalls: 1\ntime: 0.000532s"];
    "cmd.<module>" [color = "#e5e5e5ff", label = "cmd.<module>\ncalls: 1\ntime: 0.000118s"];
    "sympy.printing.mathematica.<module>" [color = "#e5e5e5ff", label = "sympy.printing.mathematica.<module>\ncalls: 1\ntime: 0.000202s"];
    "sympy.series.limits.<module>" [color = "#e5e5e5ff", label = "sympy.series.limits.<module>\ncalls: 1\ntime: 0.003880s"];
    "sympy.mpmath.libmp.gammazeta.bernoulli_size" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.gammazeta.bernoulli_size\ncalls: 1\ntime: 0.000020s"];
    "unittest.util.<module>" [color = "#e5e5e5ff", label = "unittest.util.<module>\ncalls: 1\ntime: 0.002883s"];
    "sympy.functions.elementary.complexes.eval" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.eval\ncalls: 4\ntime: 0.000042s"];
    "sympy.core.core.__cmp__" [color = "#e3e5e5ff", label = "sympy.core.core.__cmp__\ncalls: 302\ntime: 0.009382s"];
    "sympy.mpmath.ctx_base.<module>" [color = "#dbe4e5ff", label = "sympy.mpmath.ctx_base.<module>\ncalls: 1\ntime: 0.205600s"];
    "sympy.core.basic.And.__eq__" [color = "#e5e5e5ff", label = "sympy.core.basic.And.__eq__\ncalls: 40\ntime: 0.003803s"];
    "joblib.memory.MemorizedResult" [color = "#e5e5e5ff", label = "joblib.memory.MemorizedResult\ncalls: 1\ntime: 0.000017s"];
    "sympy.printing.fcode.FCodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.fcode.FCodePrinter\ncalls: 1\ntime: 0.000043s"];
    "numpy.ma.core._DomainedBinaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._DomainedBinaryOperation\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.facts.Prover.__init__" [color = "#e5e5e5ff", label = "sympy.core.facts.Prover.__init__\ncalls: 1\ntime: 0.000010s"];
    "sympy.matrices.expressions.blockmatrix.<module>" [color = "#e4e5e5ff", label = "sympy.matrices.expressions.blockmatrix.<module>\ncalls: 1\ntime: 0.010512s"];
    "numpy.ma.core.type.__new__" [color = "#e5e5e5ff", label = "numpy.ma.core.type.__new__\ncalls: 1\ntime: 0.000050s"];
    "RRtoolbox.lib.cache.notCallable" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.notCallable\ncalls: 1\ntime: 0.000009s"];
    "TestResults" [color = "#e5e5e5ff", label = "TestResults\ncalls: 2\ntime: 0.000067s"];
    "sympy.polys.domains.gmpyfinitefield.GMPYFiniteField" [color = "#e5e5e5ff", label = "sympy.polys.domains.gmpyfinitefield.GMPYFiniteField\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.numbers.Integer._eval_is_zero" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer._eval_is_zero\ncalls: 2\ntime: 0.000007s"];
    "sympy.core.evalf.<lambda>" [color = "#e5e5e5ff", label = "sympy.core.evalf.<lambda>\ncalls: 4\ntime: 0.000107s"];
    "sympy.logic.boolalg.eval" [color = "#e3e5e5ff", label = "sympy.logic.boolalg.eval\ncalls: 70\ntime: 0.039454s"];
    "pickle.Unpickler.load" [color = "#e5e5e5ff", label = "pickle.Unpickler.load\ncalls: 1\ntime: 0.009389s"];
    "sympy.geometry.polygon.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.polygon.<module>\ncalls: 1\ntime: 0.005714s"];
    "sympy.polys.polyerrors.GeneratorsError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.GeneratorsError\ncalls: 1\ntime: 0.000005s"];
    "sympy.functions.combinatorial.factorials.RisingFactorial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.RisingFactorial\ncalls: 1\ntime: 0.000008s"];
    "pickle.Unpickler.load_mark" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_mark\ncalls: 13\ntime: 0.000050s"];
    "functools.K.__init__" [color = "#e5e5e5ff", label = "functools.K.__init__\ncalls: 9\ntime: 0.000033s"];
    "sympy.plotting.plot.Plot" [color = "#e5e5e5ff", label = "sympy.plotting.plot.Plot\ncalls: 1\ntime: 0.000170s"];
    "sympy.concrete.expr_with_limits.ExprWithLimits" [color = "#e5e5e5ff", label = "sympy.concrete.expr_with_limits.ExprWithLimits\ncalls: 1\ntime: 0.000018s"];
    "sympy.simplify.simplify.<module>" [color = "#e4e5e5ff", label = "sympy.simplify.simplify.<module>\ncalls: 1\ntime: 0.018537s"];
    "sympy.printing.pretty.stringpict.prettyForm" [color = "#e5e5e5ff", label = "sympy.printing.pretty.stringpict.prettyForm\ncalls: 1\ntime: 0.000019s"];
    "sympy.mpmath.ctx_fp.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_fp.__init__\ncalls: 1\ntime: 0.008458s"];
    "numpy.ma.extras._fromnxfunction.getdoc" [color = "#e5e5e5ff", label = "numpy.ma.extras._fromnxfunction.getdoc\ncalls: 9\ntime: 0.001942s"];
    "sympy.mpmath.rational.create_reduced" [color = "#e5e5e5ff", label = "sympy.mpmath.rational.create_reduced\ncalls: 28\ntime: 0.000598s"];
    "sympy.core.assumptions.StdFactKB.copy" [color = "#e5e5e5ff", label = "sympy.core.assumptions.StdFactKB.copy\ncalls: 5\ntime: 0.006417s"];
    "sympy.core.numbers.Rational._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.numbers.Rational._hashable_content\ncalls: 1\ntime: 0.000004s"];
    "ctypes.c_bool" [color = "#e5e5e5ff", label = "ctypes.c_bool\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.polyerrors.ComputationFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.ComputationFailed\ncalls: 1\ntime: 0.000006s"];
    "sympy.strategies.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.<module>\ncalls: 1\ntime: 0.006406s"];
    "sympy.core.numbers.Infinity.__hash__" [color = "#e2e5e5ff", label = "sympy.core.numbers.Infinity.__hash__\ncalls: 430\ntime: 0.013554s"];
    "sympy.core.operations._new_args_filter" [color = "#dfe5e5ff", label = "sympy.core.operations._new_args_filter\ncalls: 384\ntime: 0.078781s"];
    "numpy.version.<module>" [color = "#e5e5e5ff", label = "numpy.version.<module>\ncalls: 1\ntime: 0.000015s"];
    "warnings.catch_warnings.__init__" [color = "#e5e5e5ff", label = "warnings.catch_warnings.__init__\ncalls: 1\ntime: 0.000007s"];
    "sympy.printing.codeprinter.Assignment" [color = "#e5e5e5ff", label = "sympy.printing.codeprinter.Assignment\ncalls: 1\ntime: 0.000009s"];
    "sympy.printing.codeprinter.CodePrinter" [color = "#e5e5e5ff", label = "sympy.printing.codeprinter.CodePrinter\ncalls: 1\ntime: 0.000067s"];
    "sympy.calculus.euler.<module>" [color = "#e5e5e5ff", label = "sympy.calculus.euler.<module>\ncalls: 1\ntime: 0.000034s"];
    "sympy.simplify.hyperexpand.MeijerShiftD" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerShiftD\ncalls: 1\ntime: 0.000007s"];
    "sympy.simplify.hyperexpand.MeijerShiftB" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerShiftB\ncalls: 1\ntime: 0.000007s"];
    "sympy.simplify.hyperexpand.MeijerShiftC" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerShiftC\ncalls: 1\ntime: 0.000007s"];
    "sympy.simplify.hyperexpand.MeijerShiftA" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.MeijerShiftA\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.facts.transitive_closure" [color = "#dae3e5ff", label = "sympy.core.facts.transitive_closure\ncalls: 1\ntime: 0.227007s"];
    "sympy.polys.domains.compositedomain.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.compositedomain.<module>\ncalls: 1\ntime: 0.000741s"];
    "sympy.functions.special.polynomials.gegenbauer" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.gegenbauer\ncalls: 1\ntime: 0.000011s"];
    "numpy.lib._datasource.DataSource" [color = "#e5e5e5ff", label = "numpy.lib._datasource.DataSource\ncalls: 1\ntime: 0.000019s"];
    "sympy.geometry.line3d.LinearEntity3D" [color = "#e5e5e5ff", label = "sympy.geometry.line3d.LinearEntity3D\ncalls: 1\ntime: 0.000031s"];
    "sympy.mpmath.calculus.extrapolation.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.extrapolation.<module>\ncalls: 1\ntime: 0.000564s"];
    "unittest.suite._ErrorHolder" [color = "#e5e5e5ff", label = "unittest.suite._ErrorHolder\ncalls: 1\ntime: 0.000014s"];
    "numpy.lib.index_tricks.nd_grid.__init__" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.nd_grid.__init__\ncalls: 2\ntime: 0.000009s"];
    "numpy.lib._datasource._FileOpeners.__init__" [color = "#e5e5e5ff", label = "numpy.lib._datasource._FileOpeners.__init__\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.power.integer_nthroot" [color = "#e5e5e5ff", label = "sympy.core.power.integer_nthroot\ncalls: 2\ntime: 0.000195s"];
    "sympy.core.expr.Float.as_real_imag" [color = "#e5e5e5ff", label = "sympy.core.expr.Float.as_real_imag\ncalls: 2\ntime: 0.008302s"];
    "numpy.compat._inspect.iscode" [color = "#e5e5e5ff", label = "numpy.compat._inspect.iscode\ncalls: 31\ntime: 0.000131s"];
    "numpy.<module>" [color = "#dbe4e5ff", label = "numpy.<module>\ncalls: 1\ntime: 0.200962s"];
    "sympy.polys.polyerrors.PolynomialError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.PolynomialError\ncalls: 1\ntime: 0.000005s"];
    "sympy.printing.pretty.pretty_symbology.<module>" [color = "#e4e5e5ff", label = "sympy.printing.pretty.pretty_symbology.<module>\ncalls: 1\ntime: 0.011776s"];
    "sympy.integrals.transforms.InverseLaplaceTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseLaplaceTransform\ncalls: 1\ntime: 0.000636s"];
    "sympy.core.power.__new__" [color = "#e4e5e5ff", label = "sympy.core.power.__new__\ncalls: 5\ntime: 0.021441s"];
    "sympy.integrals.heurisch.<module>" [color = "#e5e5e5ff", label = "sympy.integrals.heurisch.<module>\ncalls: 1\ntime: 0.000968s"];
    "ctypes._FuncPtr" [color = "#e5e5e5ff", label = "ctypes._FuncPtr\ncalls: 1\ntime: 0.000011s"];
    "sympy.matrices.expressions.transpose.Transpose" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.transpose.Transpose\ncalls: 1\ntime: 0.000017s"];
    "sympy.polys.domains.groundtypes.GMPYInteger" [color = "#e5e5e5ff", label = "sympy.polys.domains.groundtypes.GMPYInteger\ncalls: 1\ntime: 0.000006s"];
    "numpy.ma.core._MaskedUnaryOperation.__init__" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedUnaryOperation.__init__\ncalls: 27\ntime: 0.000359s"];
    "sympy.printing.str.<module>" [color = "#e5e5e5ff", label = "sympy.printing.str.<module>\ncalls: 1\ntime: 0.001121s"];
    "sympy.functions.combinatorial.numbers.fibonacci" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.fibonacci\ncalls: 1\ntime: 0.000182s"];
    "sympy.core.symbol.__new_stage2__" [color = "#e5e5e5ff", label = "sympy.core.symbol.__new_stage2__\ncalls: 14\ntime: 0.001913s"];
    "sympy.core.basic.<module>" [color = "#c5d7e5ff", label = "sympy.core.basic.<module>\ncalls: 1\ntime: 0.663745s"];
    "RRtoolbox.lib.cache.Memoizer.__init__" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.Memoizer.__init__\ncalls: 1\ntime: 0.000170s"];
    "sympy.mpmath.ctx_mp_python.make_mpf" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.make_mpf\ncalls: 17\ntime: 0.001521s"];
    "sympy.core.core.<module>" [color = "#e5e5e5ff", label = "sympy.core.core.<module>\ncalls: 1\ntime: 0.000471s"];
    "sympy.core.symbol.<module>" [color = "#e3e5e5ff", label = "sympy.core.symbol.<module>\ncalls: 1\ntime: 0.044334s"];
    "sympy.mpmath.ctx_mp_python.make_mpc" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.make_mpc\ncalls: 3\ntime: 0.000556s"];
    "sympy.polys.polyerrors.GeneratorsNeeded" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.GeneratorsNeeded\ncalls: 1\ntime: 0.000005s"];
    "sympy.polys.domains.integerring.IntegerRing" [color = "#e5e5e5ff", label = "sympy.polys.domains.integerring.IntegerRing\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.numbers.IntegerConstant" [color = "#e5e5e5ff", label = "sympy.core.numbers.IntegerConstant\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.relational.Equality" [color = "#e5e5e5ff", label = "sympy.core.relational.Equality\ncalls: 1\ntime: 0.000011s"];
    "ctypes.CDLL" [color = "#e5e5e5ff", label = "ctypes.CDLL\ncalls: 1\ntime: 0.000019s"];
    "sympy.functions.special.error_functions.erfcinv" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.erfcinv\ncalls: 1\ntime: 0.000010s"];
    "sympy.functions.combinatorial.factorials.CombinatorialFunction" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.CombinatorialFunction\ncalls: 1\ntime: 0.000009s"];
    "ctypes.c_float" [color = "#e5e5e5ff", label = "ctypes.c_float\ncalls: 1\ntime: 0.000008s"];
    "sympy.series.order.Order" [color = "#e5e5e5ff", label = "sympy.series.order.Order\ncalls: 1\ntime: 0.000558s"];
    "sympy.mpmath.functions.expintegrals.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.expintegrals.<module>\ncalls: 1\ntime: 0.000883s"];
    "sympy.core.function.PoleError" [color = "#e5e5e5ff", label = "sympy.core.function.PoleError\ncalls: 1\ntime: 0.000006s"];
    "numpy.lib._iotools.LineSplitter" [color = "#e5e5e5ff", label = "numpy.lib._iotools.LineSplitter\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.numbers.Integer._as_mpf_val" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer._as_mpf_val\ncalls: 1\ntime: 0.000107s"];
    "sympy.core.numbers.<module>" [color = "#d7e2e5ff", label = "sympy.core.numbers.<module>\ncalls: 1\ntime: 0.294045s"];
    "ctypes.PyDLL" [color = "#e5e5e5ff", label = "ctypes.PyDLL\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.alphabets.<module>" [color = "#e5e5e5ff", label = "sympy.core.alphabets.<module>\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.polyoptions.Field" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Field\ncalls: 1\ntime: 0.000010s"];
    "doctest.DocTestCase" [color = "#e5e5e5ff", label = "doctest.DocTestCase\ncalls: 1\ntime: 0.000018s"];
    "sre_parse.parse" [color = "#d0dfe5ff", label = "sre_parse.parse\ncalls: 57\ntime: 0.420656s"];
    "sympy.solvers.pde.<module>" [color = "#e5e5e5ff", label = "sympy.solvers.pde.<module>\ncalls: 1\ntime: 0.000082s"];
    "sympy.mpmath.ctx_mp.init_builtins" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp.init_builtins\ncalls: 1\ntime: 0.002419s"];
    "sympy.polys.orderings.ProductOrder" [color = "#e5e5e5ff", label = "sympy.polys.orderings.ProductOrder\ncalls: 1\ntime: 0.000015s"];
    "numpy.core.numerictypes.bitname" [color = "#e5e5e5ff", label = "numpy.core.numerictypes.bitname\ncalls: 26\ntime: 0.003588s"];
    "sympy.functions.special.gamma_functions.uppergamma" [color = "#e5e5e5ff", label = "sympy.functions.special.gamma_functions.uppergamma\ncalls: 1\ntime: 0.000013s"];
    "sympy.functions.special.gamma_functions.gamma" [color = "#e5e5e5ff", label = "sympy.functions.special.gamma_functions.gamma\ncalls: 1\ntime: 0.000016s"];
    "sympy.polys.domains.rationalfield.RationalField" [color = "#e5e5e5ff", label = "sympy.polys.domains.rationalfield.RationalField\ncalls: 1\ntime: 0.000013s"];
    "sympy.mpmath.matrices.matrices.MatrixMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.matrices.MatrixMethods\ncalls: 1\ntime: 0.000022s"];
    "sympy.mpmath.libmp.six._MovedItems" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six._MovedItems\ncalls: 1\ntime: 0.000006s"];
    "RRtoolbox.lib.cache.DynamicMemoizedFunc" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.DynamicMemoizedFunc\ncalls: 1\ntime: 0.000069s"];
    "abc.__subclasscheck__" [color = "#e4e5e5ff", label = "abc.__subclasscheck__\ncalls: 34\ntime: 0.021784s"];
    "pydoc.HTMLRepr" [color = "#e5e5e5ff", label = "pydoc.HTMLRepr\ncalls: 1\ntime: 0.000031s"];
    "threading.RLock" [color = "#e4e5e5ff", label = "threading.RLock\ncalls: 77\ntime: 0.003725s"];
    "numpy.compat._inspect.<lambda>" [color = "#e5e5e5ff", label = "numpy.compat._inspect.<lambda>\ncalls: 48\ntime: 0.000215s"];
    "sympy.functions.elementary.exponential.exp_polar" [color = "#e5e5e5ff", label = "sympy.functions.elementary.exponential.exp_polar\ncalls: 1\ntime: 0.000013s"];
    "numpy.lib.financial.<module>" [color = "#e5e5e5ff", label = "numpy.lib.financial.<module>\ncalls: 1\ntime: 0.000034s"];
    "multiprocessing.pool.Pool" [color = "#e5e5e5ff", label = "multiprocessing.pool.Pool\ncalls: 1\ntime: 0.000049s"];
    "sympy.mpmath.ctx_base.memoize" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_base.memoize\ncalls: 3\ntime: 0.000040s"];
    "sympy.simplify.hyperexpand.ReduceOrder" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.ReduceOrder\ncalls: 1\ntime: 0.000011s"];
    "sympy.printing.<module>" [color = "#e3e5e5ff", label = "sympy.printing.<module>\ncalls: 1\ntime: 0.034666s"];
    "sympy.core.sympify.<module>" [color = "#e4e5e5ff", label = "sympy.core.sympify.<module>\ncalls: 1\ntime: 0.027333s"];
    "unittest.case._AssertRaisesContext" [color = "#e5e5e5ff", label = "unittest.case._AssertRaisesContext\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.libmp.six.MovedAttribute" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.six.MovedAttribute\ncalls: 1\ntime: 0.000007s"];
    "weakref.remove" [color = "#e5e5e5ff", label = "weakref.remove\ncalls: 1\ntime: 0.000013s"];
    "sympy.functions.elementary.piecewise.Piecewise" [color = "#e5e5e5ff", label = "sympy.functions.elementary.piecewise.Piecewise\ncalls: 1\ntime: 0.000038s"];
    "sympy.plotting.plot.TextBackend" [color = "#e5e5e5ff", label = "sympy.plotting.plot.TextBackend\ncalls: 1\ntime: 0.000007s"];
    "numpy.core.fromnumeric.<module>" [color = "#e5e5e5ff", label = "numpy.core.fromnumeric.<module>\ncalls: 1\ntime: 0.000657s"];
    "sympy.mpmath.functions.factorials.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.factorials.<module>\ncalls: 1\ntime: 0.000334s"];
    "sympy.core.facts._as_pair" [color = "#e3e5e5ff", label = "sympy.core.facts._as_pair\ncalls: 459\ntime: 0.006871s"];
    "sympy.printing.pretty.stringpict.<module>" [color = "#e4e5e5ff", label = "sympy.printing.pretty.stringpict.<module>\ncalls: 1\ntime: 0.012755s"];
    "ctypes.<module>" [color = "#e5e5e5ff", label = "ctypes.<module>\ncalls: 1\ntime: 0.006218s"];
    "sympy.core.numbers.Rational.__hash__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Rational.__hash__\ncalls: 8\ntime: 0.000296s"];
    "sympy.logic.boolalg.Predicate.__and__" [color = "#e4e5e5ff", label = "sympy.logic.boolalg.Predicate.__and__\ncalls: 12\ntime: 0.027299s"];
    "sre_parse.Pattern.closegroup" [color = "#e4e5e5ff", label = "sre_parse.Pattern.closegroup\ncalls: 112\ntime: 0.000598s"];
    "ctypes.c_double" [color = "#e5e5e5ff", label = "ctypes.c_double\ncalls: 1\ntime: 0.000007s"];
    "sympy.plotting.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.<module>\ncalls: 1\ntime: 0.009885s"];
    "sympy.functions.elementary.<module>" [color = "#dfe5e5ff", label = "sympy.functions.elementary.<module>\ncalls: 1\ntime: 0.125034s"];
    "numpy.ma.core._arraymethod" [color = "#e5e5e5ff", label = "numpy.ma.core._arraymethod\ncalls: 1\ntime: 0.000010s"];
    "joblib.numpy_pickle.hex_str" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.hex_str\ncalls: 1\ntime: 0.000015s"];
    "numpy.ma.core._MaskedUnaryOperation" [color = "#e5e5e5ff", label = "numpy.ma.core._MaskedUnaryOperation\ncalls: 1\ntime: 0.000014s"];
    "sympy.polys.polyroots.<module>" [color = "#e3e5e5ff", label = "sympy.polys.polyroots.<module>\ncalls: 1\ntime: 0.050607s"];
    "sympy.functions.elementary.trigonometric.tan" [color = "#e5e5e5ff", label = "sympy.functions.elementary.trigonometric.tan\ncalls: 1\ntime: 0.000286s"];
    "sympy.ntheory.continued_fraction.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.continued_fraction.<module>\ncalls: 1\ntime: 0.000014s"];
    "os._Environ.__delitem__" [color = "#e5e5e5ff", label = "os._Environ.__delitem__\ncalls: 2\ntime: 0.000023s"];
    "sympy.functions.elementary.miscellaneous.IdentityFunction" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.IdentityFunction\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.error_functions.Shi" [color = "#e5e5e5ff", label = "sympy.functions.special.error_functions.Shi\ncalls: 1\ntime: 0.000107s"];
    "sympy.printing.pretty.pretty_symbology.<lambda>" [color = "#e4e5e5ff", label = "sympy.printing.pretty.pretty_symbology.<lambda>\ncalls: 189\ntime: 0.005191s"];
    "sympy.geometry.line3d.<module>" [color = "#e5e5e5ff", label = "sympy.geometry.line3d.<module>\ncalls: 1\ntime: 0.007020s"];
    "locale.getpreferredencoding" [color = "#e5e5e5ff", label = "locale.getpreferredencoding\ncalls: 1\ntime: 0.000273s"];
    "sympy.core.basic.Half.__hash__" [color = "#e5e5e5ff", label = "sympy.core.basic.Half.__hash__\ncalls: 20\ntime: 0.000159s"];
    "sympy.functions.special.polynomials.laguerre" [color = "#e5e5e5ff", label = "sympy.functions.special.polynomials.laguerre\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.pool.MaybeEncodingError" [color = "#e5e5e5ff", label = "multiprocessing.pool.MaybeEncodingError\ncalls: 1\ntime: 0.000029s"];
    "sre_compile.isstring" [color = "#e4e5e5ff", label = "sre_compile.isstring\ncalls: 114\ntime: 0.001001s"];
    "sympy.polys.polyoptions.BooleanOption" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.BooleanOption\ncalls: 1\ntime: 0.000007s"];
    "sympy.mpmath.calculus.optimization.Secant" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.optimization.Secant\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.domains.domainelement.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.domainelement.<module>\ncalls: 1\ntime: 0.000131s"];
    "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#dee4e5ff", label = "sympy.mpmath.libmp.libintmath.python_bitcount\ncalls: 1.189\ntime: 0.021713s"];
    "sympy.core.cache.wrapper" [color = "#d2e0e5ff", label = "sympy.core.cache.wrapper\ncalls: 323\ntime: 0.365739s"];
    "numpy.compat._inspect.formatargspec" [color = "#e5e5e5ff", label = "numpy.compat._inspect.formatargspec\ncalls: 31\ntime: 0.003517s"];
    "sympy.sets.contains.<module>" [color = "#e5e5e5ff", label = "sympy.sets.contains.<module>\ncalls: 1\ntime: 0.002199s"];
    "sympy.polys.domains.pythonfinitefield.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.pythonfinitefield.<module>\ncalls: 1\ntime: 0.000918s"];
    "numpy.ma.core.MAError" [color = "#e5e5e5ff", label = "numpy.ma.core.MAError\ncalls: 1\ntime: 0.000007s"];
    "sympy.tensor.index_methods.IndexConformanceException" [color = "#e5e5e5ff", label = "sympy.tensor.index_methods.IndexConformanceException\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.basic.Predicate.count" [color = "#e5e5e5ff", label = "sympy.core.basic.Predicate.count\ncalls: 2\ntime: 0.000860s"];
    "RRtoolbox.lib.cache.<module>" [color = "#dee4e5ff", label = "RRtoolbox.lib.cache.<module>\ncalls: 1\ntime: 0.147243s"];
    "sympy.plotting.plot.DefaultBackend" [color = "#e5e5e5ff", label = "sympy.plotting.plot.DefaultBackend\ncalls: 1\ntime: 0.000006s"];
    "sympy.strategies.tools.typed" [color = "#e5e5e5ff", label = "sympy.strategies.tools.typed\ncalls: 1\ntime: 0.000053s"];
    "sympy.polys.domains.characteristiczero.CharacteristicZero" [color = "#e5e5e5ff", label = "sympy.polys.domains.characteristiczero.CharacteristicZero\ncalls: 1\ntime: 0.000009s"];
    "multiprocessing.<module>" [color = "#e5e5e5ff", label = "multiprocessing.<module>\ncalls: 1\ntime: 0.005709s"];
    "numpy.core.numeric.seterr" [color = "#e5e5e5ff", label = "numpy.core.numeric.seterr\ncalls: 2\ntime: 0.000168s"];
    "bdb.Breakpoint" [color = "#e5e5e5ff", label = "bdb.Breakpoint\ncalls: 1\ntime: 0.000015s"];
    "sympy.matrices.expressions.matpow.MatPow" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.matpow.MatPow\ncalls: 1\ntime: 0.000011s"];
    "sympy.geometry.line.LinearEntity" [color = "#e5e5e5ff", label = "sympy.geometry.line.LinearEntity\ncalls: 1\ntime: 0.000029s"];
    "sympy.integrals.transforms.FourierTypeTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.FourierTypeTransform\ncalls: 1\ntime: 0.000007s"];
    "sympy.core.operations.ShortCircuit" [color = "#e5e5e5ff", label = "sympy.core.operations.ShortCircuit\ncalls: 1\ntime: 0.000006s"];
    "sympy.concrete.products.<module>" [color = "#e5e5e5ff", label = "sympy.concrete.products.<module>\ncalls: 1\ntime: 0.009203s"];
    "sympy.functions.special.hyper.HyperRep_sqrts1" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_sqrts1\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.special.hyper.HyperRep_sqrts2" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_sqrts2\ncalls: 1\ntime: 0.000010s"];
    "sympy.plotting.textplot.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.textplot.<module>\ncalls: 1\ntime: 0.000019s"];
    "sympy.polys.polyoptions.__init__" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.__init__\ncalls: 24\ntime: 0.000245s"];
    "numpy.core.arrayprint.IntegerFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.IntegerFormat\ncalls: 1\ntime: 0.000008s"];
    "json.scanner.<module>" [color = "#e4e5e5ff", label = "json.scanner.<module>\ncalls: 1\ntime: 0.023122s"];
    "multiprocessing.dummy.Value" [color = "#e5e5e5ff", label = "multiprocessing.dummy.Value\ncalls: 1\ntime: 0.000020s"];
    "sympy.matrices.expressions.determinant.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.determinant.<module>\ncalls: 1\ntime: 0.001749s"];
    "sympy.printing.tableform.<module>" [color = "#e5e5e5ff", label = "sympy.printing.tableform.<module>\ncalls: 1\ntime: 0.000111s"];
    "RRtoolbox.lib.cache.Memory" [color = "#e5e5e5ff", label = "RRtoolbox.lib.cache.Memory\ncalls: 1\ntime: 0.000012s"];
    "unittest.suite.BaseTestSuite" [color = "#e5e5e5ff", label = "unittest.suite.BaseTestSuite\ncalls: 1\ntime: 0.000022s"];
    "sympy.mpmath.functions.bessel.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.bessel.<module>\ncalls: 1\ntime: 0.001272s"];
    "sympy.core.expr.Mul.__mul__" [color = "#e5e5e5ff", label = "sympy.core.expr.Mul.__mul__\ncalls: 1\ntime: 0.003831s"];
    "sympy.polys.domains.mpelements.RealElement._set_mpf" [color = "#e5e5e5ff", label = "sympy.polys.domains.mpelements.RealElement._set_mpf\ncalls: 20\ntime: 0.002154s"];
    "sympy.core.core.Registry" [color = "#e5e5e5ff", label = "sympy.core.core.Registry\ncalls: 1\ntime: 0.000009s"];
    "ctypes.c_wchar_p" [color = "#e5e5e5ff", label = "ctypes.c_wchar_p\ncalls: 1\ntime: 0.000008s"];
    "sympy.series.<module>" [color = "#e5e5e5ff", label = "sympy.series.<module>\ncalls: 1\ntime: 0.009152s"];
    "sympy.core.basic.Or.__hash__" [color = "#e4e5e5ff", label = "sympy.core.basic.Or.__hash__\ncalls: 140\ntime: 0.002191s"];
    "pydoc.TextRepr" [color = "#e5e5e5ff", label = "pydoc.TextRepr\ncalls: 1\ntime: 0.000024s"];
    "sympy.utilities.iterables.<lambda>" [color = "#e5e5e5ff", label = "sympy.utilities.iterables.<lambda>\ncalls: 48\ntime: 0.000188s"];
    "sympy.mpmath.rational.__new__" [color = "#e5e5e5ff", label = "sympy.mpmath.rational.__new__\ncalls: 28\ntime: 0.001395s"];
    "sympy.core.evalf.evalf" [color = "#e5e5e5ff", label = "sympy.core.evalf.evalf\ncalls: 4\ntime: 0.000435s"];
    "sympy.sets.sets.Intersection" [color = "#e5e5e5ff", label = "sympy.sets.sets.Intersection\ncalls: 1\ntime: 0.000016s"];
    "unittest.loader.TestLoader" [color = "#e5e5e5ff", label = "unittest.loader.TestLoader\ncalls: 1\ntime: 0.000024s"];
    "sympy.core.numbers.NumberSymbol" [color = "#e5e5e5ff", label = "sympy.core.numbers.NumberSymbol\ncalls: 1\ntime: 0.000020s"];
    "sympy.mpmath.ctx_mp_python.__nonzero__" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.__nonzero__\ncalls: 2\ntime: 0.000070s"];
    "RRtoolbox.lib.arrayops.convert.SimKeyPoint" [color = "#e5e5e5ff", label = "RRtoolbox.lib.arrayops.convert.SimKeyPoint\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.core.BasicMeta" [color = "#e5e5e5ff", label = "sympy.core.core.BasicMeta\ncalls: 1\ntime: 0.000008s"];
    "sympy.assumptions.assume.AssumptionsContext" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.AssumptionsContext\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.orderings.InverseOrder.__init__" [color = "#e5e5e5ff", label = "sympy.polys.orderings.InverseOrder.__init__\ncalls: 3\ntime: 0.000012s"];
    "sympy.sets.contains.Contains" [color = "#e5e5e5ff", label = "sympy.sets.contains.Contains\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.facts._base_fact" [color = "#e5e5e5ff", label = "sympy.core.facts._base_fact\ncalls: 39\ntime: 0.000524s"];
    "sympy.functions.special.hyper.HyperRep_power1" [color = "#e5e5e5ff", label = "sympy.functions.special.hyper.HyperRep_power1\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.domains.characteristiczero.<module>" [color = "#e5e5e5ff", label = "sympy.polys.domains.characteristiczero.<module>\ncalls: 1\ntime: 0.000212s"];
    "sympy.plotting.plot.BaseSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.BaseSeries\ncalls: 1\ntime: 0.000015s"];
    "sympy.functions.elementary.complexes.principal_branch" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.principal_branch\ncalls: 1\ntime: 0.000011s"];
    "sympy.logic.boolalg.Or" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.Or\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.numbers.Integer.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Integer.__eq__\ncalls: 5\ntime: 0.000028s"];
    "sympy.mpmath.ctx_base.__init__" [color = "#e4e5e5ff", label = "sympy.mpmath.ctx_base.__init__\ncalls: 3\ntime: 0.030105s"];
    "sympy.functions.special.delta_functions.Heaviside" [color = "#e5e5e5ff", label = "sympy.functions.special.delta_functions.Heaviside\ncalls: 1\ntime: 0.000012s"];
    "sympy.core.multidimensional.vectorize.__init__" [color = "#e5e5e5ff", label = "sympy.core.multidimensional.vectorize.__init__\ncalls: 2\ntime: 0.000018s"];
    "sympy.assumptions.assume.Predicate" [color = "#e5e5e5ff", label = "sympy.assumptions.assume.Predicate\ncalls: 1\ntime: 0.000285s"];
    "sympy.functions.special.polynomials.<module>" [color = "#e4e5e5ff", label = "sympy.functions.special.polynomials.<module>\ncalls: 1\ntime: 0.026073s"];
    "sympy.logic.boolalg.ITE" [color = "#e5e5e5ff", label = "sympy.logic.boolalg.ITE\ncalls: 1\ntime: 0.000008s"];
    "sympy.integrals.transforms.InverseMellinTransform" [color = "#e5e5e5ff", label = "sympy.integrals.transforms.InverseMellinTransform\ncalls: 1\ntime: 0.000569s"];
    "sympy.functions.combinatorial.numbers.bernoulli" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.numbers.bernoulli\ncalls: 1\ntime: 0.004625s"];
    "pickle._Stop.__init__" [color = "#e5e5e5ff", label = "pickle._Stop.__init__\ncalls: 1\ntime: 0.000005s"];
    "sympy.core.rules.Transform" [color = "#e5e5e5ff", label = "sympy.core.rules.Transform\ncalls: 1\ntime: 0.000010s"];
    "sympy.mpmath.functions.rszeta.RSCache" [color = "#e5e5e5ff", label = "sympy.mpmath.functions.rszeta.RSCache\ncalls: 1\ntime: 0.000009s"];
    "posixpath.normcase" [color = "#e5e5e5ff", label = "posixpath.normcase\ncalls: 1\ntime: 0.000009s"];
    "sympy.mpmath.calculus.extrapolation.cohen_alt_class" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.extrapolation.cohen_alt_class\ncalls: 1\ntime: 0.000011s"];
    "sympy.functions.special.zeta_functions.<module>" [color = "#e4e5e5ff", label = "sympy.functions.special.zeta_functions.<module>\ncalls: 1\ntime: 0.010292s"];
    "joblib.numpy_pickle.ZipNumpyUnpickler" [color = "#e5e5e5ff", label = "joblib.numpy_pickle.ZipNumpyUnpickler\ncalls: 1\ntime: 0.000011s"];
    "sympy.polys.polyerrors.OptionError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.OptionError\ncalls: 1\ntime: 0.000005s"];
    "sympy.core.mul._gather" [color = "#e5e5e5ff", label = "sympy.core.mul._gather\ncalls: 14\ntime: 0.004636s"];
    "sympy.matrices.expressions.inverse.Inverse" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.inverse.Inverse\ncalls: 1\ntime: 0.000095s"];
    "numpy.core.records.record" [color = "#e5e5e5ff", label = "numpy.core.records.record\ncalls: 1\ntime: 0.000016s"];
    "distutils.version.StrictVersion" [color = "#e4e5e5ff", label = "distutils.version.StrictVersion\ncalls: 1\ntime: 0.010328s"];
    "numpy.core.arrayprint.LongComplexFormat" [color = "#e5e5e5ff", label = "numpy.core.arrayprint.LongComplexFormat\ncalls: 1\ntime: 0.000008s"];
    "sympy.polys.domains.finitefield.<module>" [color = "#e3e5e5ff", label = "sympy.polys.domains.finitefield.<module>\ncalls: 1\ntime: 0.040611s"];
    "sympy.mpmath.calculus.calculus.CalculusMethods" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.calculus.CalculusMethods\ncalls: 1\ntime: 0.000008s"];
    "sympy.core.core.__init__" [color = "#e3e5e5ff", label = "sympy.core.core.__init__\ncalls: 344\ntime: 0.015787s"];
    "ExpRule" [color = "#e5e5e5ff", label = "ExpRule\ncalls: 1\ntime: 0.000028s"];
    "sympy.core.operations.make_args" [color = "#e5e5e5ff", label = "sympy.core.operations.make_args\ncalls: 1\ntime: 0.000007s"];
    "sympy.polys.orderings._ItemGetter" [color = "#e5e5e5ff", label = "sympy.polys.orderings._ItemGetter\ncalls: 1\ntime: 0.000008s"];
    "logging.Logger" [color = "#e5e5e5ff", label = "logging.Logger\ncalls: 1\ntime: 0.000043s"];
    "multiprocessing.process._MainProcess" [color = "#e5e5e5ff", label = "multiprocessing.process._MainProcess\ncalls: 1\ntime: 0.000009s"];
    "sympy.functions.special.bessel.SphericalBesselBase" [color = "#e5e5e5ff", label = "sympy.functions.special.bessel.SphericalBesselBase\ncalls: 1\ntime: 0.000011s"];
    "timeit.Timer" [color = "#e5e5e5ff", label = "timeit.Timer\ncalls: 1\ntime: 0.000013s"];
    "joblib.my_exceptions._mk_exception" [color = "#e5e5e5ff", label = "joblib.my_exceptions._mk_exception\ncalls: 48\ntime: 0.002215s"];
    "sympy.polys.domains.algebraicfield.AlgebraicField" [color = "#e5e5e5ff", label = "sympy.polys.domains.algebraicfield.AlgebraicField\ncalls: 1\ntime: 0.000032s"];
    "sympy.mpmath.ctx_mp_python.mpf_convert_arg" [color = "#e5e5e5ff", label = "sympy.mpmath.ctx_mp_python.mpf_convert_arg\ncalls: 6\ntime: 0.000169s"];
    "sympy.core.basic.Not.__eq__" [color = "#e2e5e5ff", label = "sympy.core.basic.Not.__eq__\ncalls: 370\ntime: 0.032545s"];
    "sympy.core.relational._Greater" [color = "#e5e5e5ff", label = "sympy.core.relational._Greater\ncalls: 1\ntime: 0.000010s"];
    "sympy.core.facts.<module>" [color = "#e5e5e5ff", label = "sympy.core.facts.<module>\ncalls: 1\ntime: 0.001324s"];
    "numpy.core.records.format_parser" [color = "#e5e5e5ff", label = "numpy.core.records.format_parser\ncalls: 1\ntime: 0.000019s"];
    "sympy.mpmath.libmp.libmpf.ComplexResult" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpf.ComplexResult\ncalls: 1\ntime: 0.000015s"];
    "sympy.core.expr.Pi.__neg__" [color = "#e5e5e5ff", label = "sympy.core.expr.Pi.__neg__\ncalls: 1\ntime: 0.003973s"];
    "sympy.simplify.hyperexpand.Operator" [color = "#e5e5e5ff", label = "sympy.simplify.hyperexpand.Operator\ncalls: 1\ntime: 0.000007s"];
    "decimal.<module>" [color = "#e1e5e5ff", label = "decimal.<module>\ncalls: 1\ntime: 0.085686s"];
    "sympy.polys.polyerrors.NotReversible" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.NotReversible\ncalls: 1\ntime: 0.000006s"];
    "numpy.ctypeslib.<module>" [color = "#e5e5e5ff", label = "numpy.ctypeslib.<module>\ncalls: 1\ntime: 0.000864s"];
    "sympy.core.expr.Pow.__div__" [color = "#e4e5e5ff", label = "sympy.core.expr.Pow.__div__\ncalls: 4\ntime: 0.014102s"];
    "sympy.mpmath.math2._mathfun_n" [color = "#e5e5e5ff", label = "sympy.mpmath.math2._mathfun_n\ncalls: 2\ntime: 0.000023s"];
    "ctypes.PYFUNCTYPE" [color = "#e5e5e5ff", label = "ctypes.PYFUNCTYPE\ncalls: 3\ntime: 0.000228s"];
    "pickle.Unpickler.load_true" [color = "#e5e5e5ff", label = "pickle.Unpickler.load_true\ncalls: 6\ntime: 0.000022s"];
    "sympy.functions.elementary.complexes.arg" [color = "#e5e5e5ff", label = "sympy.functions.elementary.complexes.arg\ncalls: 1\ntime: 0.000011s"];
    "sympy.printing.tableform.TableForm" [color = "#e5e5e5ff", label = "sympy.printing.tableform.TableForm\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.basic.Pow._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Pow._hashable_content\ncalls: 5\ntime: 0.000019s"];
    "encodings.hex_codec.StreamReader" [color = "#e5e5e5ff", label = "encodings.hex_codec.StreamReader\ncalls: 1\ntime: 0.000010s"];
    "decimal._WorkRep" [color = "#e5e5e5ff", label = "decimal._WorkRep\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.tensor_functions.<module>" [color = "#e5e5e5ff", label = "sympy.functions.special.tensor_functions.<module>\ncalls: 1\ntime: 0.006393s"];
    "sympy.functions.elementary.miscellaneous.<module>" [color = "#e5e5e5ff", label = "sympy.functions.elementary.miscellaneous.<module>\ncalls: 1\ntime: 0.009449s"];
    "decimal._Log10Memoize" [color = "#e5e5e5ff", label = "decimal._Log10Memoize\ncalls: 1\ntime: 0.000008s"];
    "sympy.matrices.expressions.inverse.<module>" [color = "#e5e5e5ff", label = "sympy.matrices.expressions.inverse.<module>\ncalls: 1\ntime: 0.002812s"];
    "sympy.core.numbers.Float.__eq__" [color = "#e5e5e5ff", label = "sympy.core.numbers.Float.__eq__\ncalls: 4\ntime: 0.000496s"];
    "sympy.sets.fancysets.Reals" [color = "#e5e5e5ff", label = "sympy.sets.fancysets.Reals\ncalls: 1\ntime: 0.000006s"];
    "sympy.mpmath.matrices.linalg.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.linalg.<module>\ncalls: 1\ntime: 0.000182s"];
    "sympy.core.cache.<module>" [color = "#e4e5e5ff", label = "sympy.core.cache.<module>\ncalls: 1\ntime: 0.016851s"];
    "InverseHyperbolicRule" [color = "#e5e5e5ff", label = "InverseHyperbolicRule\ncalls: 1\ntime: 0.000027s"];
    "unittest.loader.<module>" [color = "#e5e5e5ff", label = "unittest.loader.<module>\ncalls: 1\ntime: 0.004334s"];
    "sympy.core.numbers.NaN" [color = "#e5e5e5ff", label = "sympy.core.numbers.NaN\ncalls: 1\ntime: 0.000550s"];
    "sympy.ntheory.generate.<module>" [color = "#e5e5e5ff", label = "sympy.ntheory.generate.<module>\ncalls: 1\ntime: 0.000810s"];
    "sympy.strategies.tree.<module>" [color = "#e5e5e5ff", label = "sympy.strategies.tree.<module>\ncalls: 1\ntime: 0.000029s"];
    "numpy.testing.decorators.<module>" [color = "#e5e5e5ff", label = "numpy.testing.decorators.<module>\ncalls: 1\ntime: 0.000021s"];
    "sympy.functions.combinatorial.factorials.binomial" [color = "#e5e5e5ff", label = "sympy.functions.combinatorial.factorials.binomial\ncalls: 1\ntime: 0.000012s"];
    "sympy.polys.polyoptions.Modulus" [color = "#e5e5e5ff", label = "sympy.polys.polyoptions.Modulus\ncalls: 1\ntime: 0.000011s"];
    "sympy.interactive.<module>" [color = "#e5e5e5ff", label = "sympy.interactive.<module>\ncalls: 1\ntime: 0.001799s"];
    "sympy.mpmath.matrices.matrices.<module>" [color = "#e5e5e5ff", label = "sympy.mpmath.matrices.matrices.<module>\ncalls: 1\ntime: 0.000314s"];
    "numpy.compat._inspect.isfunction" [color = "#e5e5e5ff", label = "numpy.compat._inspect.isfunction\ncalls: 40\ntime: 0.000170s"];
    "decimal.DivisionImpossible" [color = "#e5e5e5ff", label = "decimal.DivisionImpossible\ncalls: 1\ntime: 0.000006s"];
    "sympy.core.function.Application" [color = "#e5e5e5ff", label = "sympy.core.function.Application\ncalls: 1\ntime: 0.000303s"];
    "sympy.mpmath.libmp.libmpi.mpi_from_str" [color = "#e5e5e5ff", label = "sympy.mpmath.libmp.libmpi.mpi_from_str\ncalls: 2\ntime: 0.000182s"];
    "sympy.mpmath.calculus.quadrature.TanhSinh.__init__" [color = "#e5e5e5ff", label = "sympy.mpmath.calculus.quadrature.TanhSinh.__init__\ncalls: 3\ntime: 0.000023s"];
    "ArctanRule" [color = "#e5e5e5ff", label = "ArctanRule\ncalls: 1\ntime: 0.000024s"];
    "numpy.core.numerictypes._construct_lookups" [color = "#e5e5e5ff", label = "numpy.core.numerictypes._construct_lookups\ncalls: 1\ntime: 0.000357s"];
    "numpy.core.numeric._unspecified" [color = "#e5e5e5ff", label = "numpy.core.numeric._unspecified\ncalls: 1\ntime: 0.000007s"];
    "AddRule" [color = "#e5e5e5ff", label = "AddRule\ncalls: 1\ntime: 0.000035s"];
    "sympy.core.basic.Equivalent._hashable_content" [color = "#e5e5e5ff", label = "sympy.core.basic.Equivalent._hashable_content\ncalls: 14\ntime: 0.000046s"];
    "sympy.sets.sets._infimum_key" [color = "#e5e5e5ff", label = "sympy.sets.sets._infimum_key\ncalls: 43\ntime: 0.000576s"];
    "doctest.OutputChecker" [color = "#e5e5e5ff", label = "doctest.OutputChecker\ncalls: 1\ntime: 0.000009s"];
    "sympy.core.evalf.Zero.evalf" [color = "#e5e5e5ff", label = "sympy.core.evalf.Zero.evalf\ncalls: 2\ntime: 0.000313s"];
    "logging.Filter" [color = "#e5e5e5ff", label = "logging.Filter\ncalls: 1\ntime: 0.000012s"];
    "sympy.printing.str.StrPrinter" [color = "#e5e5e5ff", label = "sympy.printing.str.StrPrinter\ncalls: 1\ntime: 0.000128s"];
    "numpy.lib.index_tricks.CClass" [color = "#e5e5e5ff", label = "numpy.lib.index_tricks.CClass\ncalls: 1\ntime: 0.000007s"];
    "numpy.ma.<module>" [color = "#e4e5e5ff", label = "numpy.ma.<module>\ncalls: 1\ntime: 0.019824s"];
    "sympy.core.logic.Or" [color = "#e5e5e5ff", label = "sympy.core.logic.Or\ncalls: 1\ntime: 0.000007s"];
    "sympy.utilities.decorator.public" [color = "#e4e5e5ff", label = "sympy.utilities.decorator.public\ncalls: 150\ntime: 0.001780s"];
    "logging.LogRecord" [color = "#e5e5e5ff", label = "logging.LogRecord\ncalls: 1\ntime: 0.000015s"];
    "RRtoolbox.lib.config.directoryManager" [color = "#e5e5e5ff", label = "RRtoolbox.lib.config.directoryManager\ncalls: 1\ntime: 0.000014s"];
    "pydoc.Doc" [color = "#e5e5e5ff", label = "pydoc.Doc\ncalls: 1\ntime: 0.000022s"];
    "sympy.polys.polyerrors.DomainError" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.DomainError\ncalls: 1\ntime: 0.000005s"];
    "sympy.core.basic.<lambda>" [color = "#e5e5e5ff", label = "sympy.core.basic.<lambda>\ncalls: 2\ntime: 0.000011s"];
    "sympy.plotting.intervalmath.lib_interval.<module>" [color = "#e5e5e5ff", label = "sympy.plotting.intervalmath.lib_interval.<module>\ncalls: 1\ntime: 0.000048s"];
    "sympy.mpmath.libmp.libintmath.python_trailing" [color = "#e4e5e5ff", label = "sympy.mpmath.libmp.libintmath.python_trailing\ncalls: 256\ntime: 0.002553s"];
    "RRtoolbox.lib.directory.repr2list" [color = "#e5e5e5ff", label = "RRtoolbox.lib.directory.repr2list\ncalls: 51\ntime: 0.001283s"];
    "sympy.polys.polyerrors.ExactQuotientFailed" [color = "#e5e5e5ff", label = "sympy.polys.polyerrors.ExactQuotientFailed\ncalls: 1\ntime: 0.000008s"];
    "sympy.functions.special.spherical_harmonics.Znm" [color = "#e5e5e5ff", label = "sympy.functions.special.spherical_harmonics.Znm\ncalls: 1\ntime: 0.000007s"];
    "sympy.plotting.plot.Line2DBaseSeries" [color = "#e5e5e5ff", label = "sympy.plotting.plot.Line2DBaseSeries\ncalls: 1\ntime: 0.000013s"];
    "sympy.core.logic.And._eval_propagate_not" [color = "#e5e5e5ff", label = "sympy.core.logic.And._eval_propagate_not\ncalls: 6\ntime: 0.001963s"];
    "sympy.polys.<module>" [color = "#c1d4e5ff", label = "sympy.polys.<module>\ncalls: 1\ntime: 0.747019s"];

    // Edges
    "numpy.add_newdocs.<module>" -> "numpy.lib.<module>" [color = "#adb2b2ff", label = "1"];
    "numpy.add_newdocs.<module>" -> "numpy.lib.function_base.add_newdoc" [color = "#b1b2b2ff", label = "272"];
    "json.<module>" -> "json.decoder.<module>" [color = "#b0b2b2ff", label = "1"];
    "json.<module>" -> "json.encoder.JSONEncoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "json.<module>" -> "json.decoder.JSONDecoder.__init__" [color = "#b2b2b2ff", label = "1"];
    "json.<module>" -> "json.encoder.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.AlgebraicNumber" -> "sympy.core.containers.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libintmath.sqrtrem_python" -> "sympy.mpmath.libmp.libintmath.isqrt_small_python" [color = "#b2b2b2ff", label = "2"];
    "functools.K.__lt__" -> "sympy.core.basic.Pow.compare" [color = "#b2b2b2ff", label = "1"];
    "functools.K.__lt__" -> "sympy.core.basic.ImaginaryUnit.compare" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.AxisConcatenator" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.IndexExpression" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.RClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.matrixlib.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.ndenumerate" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.nd_grid.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.function_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.CClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.stride_tricks.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.RClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.ndindex" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.IndexExpression.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.CClass" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.index_tricks.<module>" -> "numpy.lib.index_tricks.nd_grid" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._nodes" -> "sympy.core.basic.Predicate.count" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility._nodes" -> "sympy.core.compatibility.iterable" [color = "#b2b2b2ff", label = "27"];
    "sympy.polys.polyoptions.Wrt" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "imrestore.<module>" -> "numpy.<module>" [color = "#aab1b2ff", label = "1"];
    "imrestore.<module>" -> "RRtoolbox.tools.<module>" [color = "#b2b2b2ff", label = "1"];
    "imrestore.<module>" -> "RRtoolbox.tools.lens.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "numpy.polynomial._polybase.ABCPolyBase" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.LooseVersion" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.polys.galoistools.<module>" -> "sympy.polys.polyconfig.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.galoistools.<module>" -> "sympy.ntheory.<module>" [color = "#b0b2b2ff", label = "1"];
    "pydoc.HTMLRepr.__init__" -> "repr.HTMLRepr.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.chebyshev.<module>" -> "numpy.polynomial.chebyshev.Chebyshev" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.chebyshev.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot_implicit.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot_implicit.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot_implicit.<module>" -> "sympy.plotting.intervalmath.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot_implicit.<module>" -> "sympy.plotting.plot_implicit.ImplicitSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point3d.<module>" -> "sympy.geometry.point3d.Point3D" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point3d.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.basic.Pi.__hash__" -> "sympy.core.basic.Pi._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "inspect.getargspec" -> "inspect.isfunction" [color = "#b1b2b2ff", label = "182"];
    "inspect.getargspec" -> "inspect.ismethod" [color = "#b1b2b2ff", label = "182"];
    "inspect.getargspec" -> "inspect.getargs" [color = "#b1b2b2ff", label = "182"];
    "inspect.getargspec" -> "__new__" [color = "#b1b2b2ff", label = "182"];
    "sympy.polys.domains.algebraicfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.algebraicfield.<module>" -> "sympy.polys.domains.algebraicfield.AlgebraicField" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.ImaginaryUnit.compare" -> "sympy.core.core.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.ImaginaryUnit.compare" -> "sympy.core.core.__gt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.beta_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.functions.special.beta_functions.<module>" -> "sympy.functions.special.beta_functions.beta" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.airybi" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.operations.<module>" -> "sympy.core.operations.ShortCircuit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.<module>" -> "sympy.core.operations.LatticeOp" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.core.operations.<module>" -> "sympy.core.operations.AssocOp" [color = "#b2b2b2ff", label = "1"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.ismethod" [color = "#b2b2b2ff", label = "40"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.getargs" [color = "#b2b2b2ff", label = "31"];
    "numpy.compat._inspect.getargspec" -> "numpy.compat._inspect.isfunction" [color = "#b2b2b2ff", label = "40"];
    "sympy.polys.domains.mpelements._make_tol" -> "sympy.mpmath.ctx_mp_python.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements._make_tol" -> "sympy.mpmath.libmp.libmpf.python_mpf_mul" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.libmp.libmpc.<module>" -> "sympy.mpmath.libmp.libelefun.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpc.<module>" -> "sympy.mpmath.libmp.libmpf.from_float" [color = "#b2b2b2ff", label = "2"];
    "sympy.__sympy_debug" -> "<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.__sympy_debug" -> "os.getenv" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.evalf.Half.evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.numbers.Half._eval_evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.numbers.Float.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.logic.boolalg.BooleanFalse.__nonzero__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.numbers.Zero.__nonzero__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.expr.Float.as_real_imag" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Half._eval_is_negative" -> "sympy.core.numbers.Float.__eq__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.realfield.RealField.__init__" -> "sympy.mpmath.ctx_mp_python.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.realfield.RealField.__init__" -> "sympy.polys.domains.mpelements.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.FourierTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.asinh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.solvers.polysys.<module>" -> "sympy.solvers.polysys.SolveFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.Domain" -> "re.compile" [color = "#9ba9b2ff", label = "6"];
    "numpy.testing.nosetester.<module>" -> "numpy.testing.nosetester.NoseTester" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.X.__len__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.MovedAttribute.__init__" [color = "#b2b2b2ff", label = "9"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six._add_doc" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.MovedAttribute" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six._LazyDescr" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.MovedModule" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.X" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.MovedModule.__init__" [color = "#b2b2b2ff", label = "34"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six._MovedItems" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.Iterator" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.<module>" -> "sympy.mpmath.libmp.six.exec_" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.session.<module>" -> "pickle.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.meijerint.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.integrals.Integral" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.manualintegrate.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.heurisch.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.rationaltools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.utilities.decorator.xthreaded" [color = "#afb2b2ff", label = "2"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.deltafunctions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.integrals.<module>" -> "sympy.integrals.trigonometry.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core.numerictypes.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.compat.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "3"];
    "numpy.core._internal.<module>" -> "ctypes.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal._ctypes" [color = "#b2b2b2ff", label = "1"];
    "numpy.core._internal.<module>" -> "numpy.core._internal._missing_ctypes" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.rl.<module>" -> "sympy.strategies.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.curve.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.geometry.curve.<module>" -> "sympy.geometry.curve.Curve" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.sqrtdenest.<module>" -> "sympy.simplify.sqrtdenest.SqrtdenestStopIteration" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.ITE" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Implies" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Boolean" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Equivalent" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.BooleanFalse" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.BooleanTrue" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Nand" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Not" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Nor" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "10"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.And" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.BooleanAtom" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Or" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.Xor" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.logic.boolalg.BooleanFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.core.SingletonRegistry.__setattr__" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg.<module>" -> "sympy.core.singleton.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.polytools.PurePoly" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.PurePoly" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations._from_args" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.NegativeOne.__hash__" [color = "#b2b2b2ff", label = "5"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.Float.__hash__" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.Half.__hash__" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.Or.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.ImaginaryUnit.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.Mul.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.Pow.__hash__" [color = "#b2b2b2ff", label = "13"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.Integer.__hash__" [color = "#b2b2b2ff", label = "22"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.Not.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.Rational.__hash__" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.And.__hash__" [color = "#b2b2b2ff", label = "5"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.Pi.__hash__" [color = "#b2b2b2ff", label = "11"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.numbers.One.__hash__" [color = "#b2b2b2ff", label = "21"];
    "sympy.core.compatibility._HashedSeq.__init__" -> "sympy.core.basic.Predicate.__hash__" [color = "#b1b2b2ff", label = "153"];
    "sympy.polys.domains.field.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.field.<module>" -> "sympy.polys.domains.field.Field" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.field.<module>" -> "sympy.polys.domains.ring.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.assume.AppliedPredicate" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.expressions.funcmatrix.<module>" -> "sympy.matrices.expressions.funcmatrix.FunctionMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.funcmatrix.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.decorators.Pow.binary_op_wrapper" -> "sympy.core.expr.Pow.__rmul__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.Pow.binary_op_wrapper" -> "sympy.core.expr.Pow.__div__" [color = "#b1b2b2ff", label = "4"];
    "numbers.Real" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "8"];
    "sympy.mpmath.libmp.libintmath.<module>" -> "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#aeb2b2ff", label = "1024"];
    "sympy.mpmath.libmp.libintmath.<module>" -> "sympy.mpmath.libmp.libintmath.python_trailing" [color = "#b1b2b2ff", label = "256"];
    "sympy.integrals.transforms.SineTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.SineTransform" -> "sympy.functions.elementary.miscellaneous.sqrt" [color = "#b1b2b2ff", label = "2"];
    "sympy.polys.domains.gmpyintegerring.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyintegerring.<module>" -> "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.ContourSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.textplot.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.BaseSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.ParametricSurfaceSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.LineOver1DRangeSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.List2DSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.experimental_lambdify.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.TextBackend" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "5"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.SurfaceBaseSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.Parametric2DLineSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.Line2DBaseSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.MatplotlibBackend" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.SurfaceOver2DRangeSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.Plot" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.DefaultBackend" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.Parametric3DLineSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "5"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.BaseBackend" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.<module>" -> "sympy.plotting.plot.Line3DBaseSeries" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Half.as_numer_denom" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.facts.Prover.process_rule" -> "sympy.core.logic.Not.__hash__" [color = "#b0b2b2ff", label = "29"];
    "sympy.core.facts.Prover.process_rule" -> "sympy.core.facts.Prover._process_rule" [color = "#b0b2b2ff", label = "79"];
    "sympy.core.facts.Prover.process_rule" -> "sympy.core.logic.Or.__hash__" [color = "#b2b2b2ff", label = "19"];
    "sympy.core.facts.Prover.process_rule" -> "sympy.core.logic.And.__hash__" [color = "#b2b2b2ff", label = "80"];
    "sympy.core.facts.Prover.process_rule" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "18"];
    "sympy.utilities.iterables.<module>" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.iterables.<module>" -> "sympy.utilities.enumerative.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.iterables.<module>" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.zetazeros.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.zetazeros.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "2"];
    "sympy.sets.sets.FiniteSet.contains" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "4"];
    "sympy.sets.sets.FiniteSet.contains" -> "sympy.sets.sets.FiniteSet._contains" [color = "#b2b2b2ff", label = "4"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.atanh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.acosh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.tanh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.asinh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.HyperbolicFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.coth" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.cosh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.sinh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.functions.elementary.hyperbolic.acoth" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "9"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.StringConverter" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConverterLockError" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConverterError" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.LineSplitter" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.ConversionWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._iotools.<module>" -> "numpy.lib._iotools.NameValidator" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.MPIntervalContext.__init__" -> "sympy.mpmath.ctx_base.memoize" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.MPIntervalContext.__init__" -> "sympy.mpmath.ctx_iv._wrap_specfun" [color = "#b1b2b2ff", label = "207"];
    "sympy.mpmath.functions.functions.MPIntervalContext.__init__" -> "sympy.mpmath.ctx_iv._mpq" [color = "#b2b2b2ff", label = "17"];
    "sympy.integrals.meijerint.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.meijerint.<module>" -> "sympy.integrals.meijerint._CoeffExpValueError" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.meijerint.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.meijerint.<module>" -> "sympy.utilities.timeutils.decorator" [color = "#b2b2b2ff", label = "3"];
    "sympy.integrals.meijerint.<module>" -> "sympy.utilities.timeutils.timethis" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing" -> "sympy.polys.domains.groundtypes.GMPYInteger.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.containers.__new__" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "3"];
    "sympy.core.containers.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.extras._fromnxfunction.__init__" -> "numpy.ma.extras._fromnxfunction.getdoc" [color = "#b2b2b2ff", label = "9"];
    "sympy.functions.special.bessel.besseli" -> "sympy.core.numbers.__neg__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.deprecated_decorator" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.decorators.deprecated_decorator" -> "functools.wraps" [color = "#b2b2b2ff", label = "14"];
    "sympy.functions.special.bessel.besselk" -> "sympy.core.numbers.__neg__" [color = "#b2b2b2ff", label = "1"];
    "numpy.compat.<module>" -> "numpy.compat._inspect.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.compat.<module>" -> "numpy.compat.py3k.<module>" [color = "#b2b2b2ff", label = "1"];
    "fractions.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "fractions.<module>" -> "fractions.Fraction" [color = "#b2b2b2ff", label = "1"];
    "fractions.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.hadamard.<module>" -> "sympy.strategies.core.do_one" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.hadamard.<module>" -> "sympy.strategies.core.exhaust" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.hadamard.<module>" -> "sympy.strategies.core.condition" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.hadamard.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.hadamard.<module>" -> "sympy.matrices.expressions.hadamard.HadamardProduct" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "20"];
    "sympy.mpmath.functions.functions.<module>" -> "sympy.mpmath.functions.functions.SpecialFunctions" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "20"];
    "sympy.mpmath.calculus.odes.<module>" -> "sympy.mpmath.calculus.odes.ODEMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.numberfields.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "5"];
    "sympy.polys.numberfields.<module>" -> "sympy.polys.ring_series.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.numberfields.<module>" -> "sympy.polys.numberfields.IntervalPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.numberfields.<module>" -> "sympy.printing.lambdarepr.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.numberfields.<module>" -> "sympy.polys.rootoftools.<module>" [color = "#b0b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.ComplexWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric._unspecified" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.set_string_function" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.numeric.<module>" -> "numpy.core.arrayprint.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric._setdef" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.errstate" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.<module>" -> "numpy.core.numeric.extend_all" [color = "#b2b2b2ff", label = "3"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.Operator" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.Formula" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.UnShiftA" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.UnShiftB" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MultOperator" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerFormula" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.ShiftB" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.ShiftA" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.FormulaCollection" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerUnShiftC" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerUnShiftA" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerUnShiftB" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerUnShiftD" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.G_Function" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.Hyper_Function" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerFormulaCollection" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.series.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerShiftD" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerShiftB" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerShiftC" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.MeijerShiftA" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.hyperexpand.<module>" -> "sympy.simplify.hyperexpand.ReduceOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.NegativeOne.getit" -> "sympy.core.assumptions._ask" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions.NegativeOne.getit" -> "sympy.core.assumptions.StdFactKB.copy" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.ImaginaryUnit.binary_op_wrapper" -> "sympy.core.expr.ImaginaryUnit.__mul__" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial._polybase.ABCPolyBase" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.compatibility._getenv" -> "os.getenv" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.getregentry" -> "codecs.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.deprecate" -> "numpy.lib.utils._Deprecate.__call__" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.utils.deprecate" -> "numpy.lib.utils._Deprecate.__init__" [color = "#b2b2b2ff", label = "2"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.tell" [color = "#b2b2b2ff", label = "1"];
    "sre_parse._parse" -> "sre_parse._escape" [color = "#b1b2b2ff", label = "142"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__setitem__" [color = "#b1b2b2ff", label = "204"];
    "sre_parse._parse" -> "sre_parse.SubPattern.append" [color = "#afb2b2ff", label = "799"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.get" [color = "#a2adb2ff", label = "3409"];
    "sre_parse._parse" -> "sre_parse._parse_sub" [color = "#96a5b2ff", label = "141"];
    "sre_parse._parse" -> "sre_parse.isname" [color = "#b2b2b2ff", label = "33"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__getitem__" [color = "#afb2b2ff", label = "612"];
    "sre_parse._parse" -> "sre_parse.Tokenizer.match" [color = "#aeb2b2ff", label = "881"];
    "sre_parse._parse" -> "sre_parse._class_escape" [color = "#b2b2b2ff", label = "54"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__len__" [color = "#afb2b2ff", label = "816"];
    "sre_parse._parse" -> "sre_parse.Pattern.closegroup" [color = "#b2b2b2ff", label = "112"];
    "sre_parse._parse" -> "sre_parse.Pattern.opengroup" [color = "#b2b2b2ff", label = "112"];
    "sre_parse._parse" -> "sre_parse.SubPattern.__init__" [color = "#b1b2b2ff", label = "224"];
    "sre_parse._class_escape" -> "sre_parse.Tokenizer.get" [color = "#aeb2b2ff", label = "12"];
    "sympy.core.numbers.Infinity.__lt__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "1"];
    "pickle.load" -> "pickle.Unpickler.__init__" [color = "#b2b2b2ff", label = "1"];
    "pickle.load" -> "pickle.Unpickler.load" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle._EmptyClass" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle._Stop" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle.PickleError" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle.Pickler" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle.Unpickler" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "re.match" [color = "#b1b2b2ff", label = "117"];
    "pickle.<module>" -> "pickle.PicklingError" [color = "#b2b2b2ff", label = "1"];
    "pickle.<module>" -> "pickle.UnpicklingError" [color = "#b2b2b2ff", label = "1"];
    "joblib.logger.<module>" -> "logging.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.logger.<module>" -> "joblib.logger.PrintTime" [color = "#b2b2b2ff", label = "1"];
    "joblib.logger.<module>" -> "joblib.disk.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.logger.<module>" -> "joblib.logger.Logger" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Pi.__neg__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_le" -> "sympy.mpmath.libmp.libmpf.mpf_cmp" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.Integer" -> "sympy.core.numbers.int_trace" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.visualization.<module>" -> "sympy.mpmath.visualization.VisualizationMethods" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "numpy.lib.polynomial.poly1d" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "warnings.simplefilter" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "numpy.linalg.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.polynomial.<module>" -> "numpy.lib.polynomial.RankWarning" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.lambdify.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.lambdify.<module>" -> "sympy.utilities.decorator.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.lambdify.<module>" -> "sympy.utilities.exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.lambdify.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_lt" -> "sympy.mpmath.libmp.libmpf.mpf_cmp" [color = "#b2b2b2ff", label = "28"];
    "joblib.my_exceptions.<module>" -> "joblib.my_exceptions.TransportableException" [color = "#b2b2b2ff", label = "1"];
    "joblib.my_exceptions.<module>" -> "joblib.my_exceptions.JoblibException" [color = "#b2b2b2ff", label = "1"];
    "joblib.my_exceptions.<module>" -> "joblib.my_exceptions._mk_common_exceptions" [color = "#b2b2b2ff", label = "1"];
    "ctypes._endian.<module>" -> "ctypes._endian._swapped_meta" [color = "#b2b2b2ff", label = "1"];
    "ctypes._endian.<module>" -> "ctypes._endian.BigEndianStructure" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.csc" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matexpr.MatrixElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "5"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matmul.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matadd.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matpow.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matexpr.Identity" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matexpr.MatrixExpr" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matexpr.ZeroMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.matexpr.MatrixSymbol" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.<module>" -> "sympy.matrices.expressions.inverse.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.immutable.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.matrices.immutable.<module>" -> "sympy.matrices.expressions.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.matrices.immutable.<module>" -> "sympy.matrices.immutable.ImmutableMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.immutable.<module>" -> "sympy.matrices.immutable.ImmutableSparseMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpi.mpi_neg" -> "sympy.mpmath.libmp.libmpf.mpf_neg" [color = "#b2b2b2ff", label = "2"];
    "sympy.plotting.experimental_lambdify.<module>" -> "sympy.plotting.experimental_lambdify.vectorized_lambdify" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.experimental_lambdify.<module>" -> "sympy.plotting.experimental_lambdify.Lambdifier" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.experimental_lambdify.<module>" -> "sympy.plotting.experimental_lambdify.lambdify" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.machar.<module>" -> "numpy.core.machar.MachAr" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrationalfield.PythonRationalField" -> "sympy.polys.domains.pythonrational.PythonRational.__init__" [color = "#b2b2b2ff", label = "2"];
    "doctest.DocTestRunner" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.Reals" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.singleton.__init__" [color = "#afb2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.ImageSet" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.Range" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "3"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.Naturals" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "3"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.Naturals0" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.<module>" -> "sympy.sets.fancysets.Integers" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.with_metaclass" -> "sympy.core.compatibility.metaclass" [color = "#b2b2b2ff", label = "50"];
    "sympy.core.compatibility.with_metaclass" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "50"];
    "sympy.core.compatibility.with_metaclass" -> "sympy.core.core.__init__" [color = "#b1b2b2ff", label = "24"];
    "numpy.lib.arrayterator.<module>" -> "numpy.lib.arrayterator.Arrayterator" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.MovedModule.__init__" -> "sympy.mpmath.libmp.six.MovedModule.__init__" [color = "#b2b2b2ff", label = "34"];
    "sympy.utilities.runtests.get_sympy_dir" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.get_sympy_dir" -> "genericpath.isdir" [color = "#b2b2b2ff", label = "3"];
    "sympy.utilities.runtests.get_sympy_dir" -> "sympy.utilities.runtests.sys_normcase" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.get_sympy_dir" -> "posixpath.normpath" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.get_sympy_dir" -> "posixpath.join" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.get_sympy_dir" -> "posixpath.abspath" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Half.__mul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "2"];
    "sympy.assumptions.ask_generated.<module>" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "80"];
    "sympy.assumptions.ask_generated.<module>" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "67"];
    "sympy.assumptions.ask_generated.<module>" -> "sympy.core.basic.Predicate.__hash__" [color = "#b1b2b2ff", label = "198"];
    "sympy.functions.elementary.piecewise.<module>" -> "sympy.functions.elementary.piecewise.Piecewise" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.piecewise.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.functions.elementary.piecewise.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.functions.elementary.piecewise.<module>" -> "sympy.functions.elementary.piecewise.ExprCondPair" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.epathtools.<module>" -> "sympy.simplify.epathtools.EPath" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul._mulsort" -> "functools.K.__lt__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.mul._mulsort" -> "functools.K.__init__" [color = "#b2b2b2ff", label = "9"];
    "sympy.polys.polyconfig.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyconfig.<module>" -> "sympy.polys.polyconfig.configure" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.And.args" -> "sympy.core.compatibility.ordered" [color = "#aeb2b2ff", label = "3"];
    "sympy.core.mul.flatten" -> "sympy.core.expr.Pi.as_base_exp" [color = "#b2b2b2ff", label = "6"];
    "sympy.core.mul.flatten" -> "sympy.core.assumptions.Half.getit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "6"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Half.as_numer_denom" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.basic.Pow.args" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.assumptions.Integer.getit" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Zero.__nonzero__" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.mul.flatten" -> "sympy.core.expr.Pi.as_coeff_Mul" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Zero.__mod__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Half.__hash__" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.mul.flatten" -> "sympy.core.mul._gather" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.mul.flatten" -> "sympy.core.containers.Tuple.__iter__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.One.__mul__" [color = "#b2b2b2ff", label = "5"];
    "sympy.core.mul.flatten" -> "sympy.core.basic.Mul.args" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.mul.Mul.as_coeff_Mul" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.power.Pow.as_base_exp" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.mul.flatten" -> "sympy.core.assumptions.Pow.getit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.assumptions.NegativeOne.getit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Zero.__add__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.mul._mulsort" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.mul.flatten" -> "sympy.core.operations.make_args" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.One.__divmod__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Integer.__eq__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.flatten" -> "sympy.core.numbers.Integer.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.MatrixExpr" -> "sympy.core.decorators.call_highest_priority" [color = "#b2b2b2ff", label = "10"];
    "sympy.matrices.expressions.matexpr.MatrixExpr" -> "sympy.matrices.expressions.matexpr.deco" [color = "#b2b2b2ff", label = "10"];
    "sympy.matrices.expressions.matexpr.MatrixExpr" -> "sympy.core.decorators.priority_decorator" [color = "#b2b2b2ff", label = "10"];
    "sympy.matrices.expressions.matexpr.MatrixExpr" -> "sympy.matrices.expressions.matexpr._sympifyit" [color = "#b2b2b2ff", label = "10"];
    "sympy.mpmath.libmp.libmpf.mpf_pos" -> "sympy.mpmath.libmp.libmpf._normalize1" [color = "#b2b2b2ff", label = "6"];
    "re._compile" -> "sre_compile.compile" [color = "#9ba9b2ff", label = "57"];
    "re._compile" -> "sre_compile.isstring" [color = "#b2b2b2ff", label = "57"];
    "sympy.core.facts.<genexpr>" -> "sympy.core.logic.Not.__hash__" [color = "#abb1b2ff", label = "1283"];
    "sympy.core.facts.<genexpr>" -> "sympy.core.logic.__eq__" [color = "#adb2b2ff", label = "1343"];
    "sympy.core.facts.<genexpr>" -> "sympy.core.logic.__new__" [color = "#98a6b2ff", label = "5844"];
    "sympy.core.facts.<genexpr>" -> "sympy.core.facts._base_fact" [color = "#b2b2b2ff", label = "39"];
    "sympy.core.facts.<genexpr>" -> "sympy.core.facts._as_pair" [color = "#b0b2b2ff", label = "366"];
    "copy_reg.pickle" -> "copy_reg.constructor" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.sinh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.fresnelc" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.Float" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "6"];
    "sympy.core.numbers.Float" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "6"];
    "multiprocessing.pool.ThreadPool" -> "multiprocessing.dummy.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.multidimensional.<module>" -> "sympy.core.multidimensional.vectorize" [color = "#b2b2b2ff", label = "1"];
    "UserDict._Environ.get" -> "UserDict._Environ.__contains__" [color = "#b2b2b2ff", label = "21"];
    "sympy.core.facts.Prover.rules_beta" -> "sympy.core.facts.Prover.split_alpha_beta" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Float.__hash__" -> "sympy.core.basic.Float.__hash__" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.numbers.Float.__hash__" -> "sympy.core.numbers.Float.__hash__" [color = "#b2b2b2ff", label = "8"];
    "sympy.mpmath.matrices.calculus.<module>" -> "sympy.mpmath.matrices.calculus.MatrixCalculusMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.rules.<module>" -> "sympy.core.rules.Transform" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.Interval" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.Interval" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings._ItemGetter" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.LexOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.ProductOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.GradedLexOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.MonomialOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.InverseOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.InverseOrder.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.polys.orderings.<module>" -> "sympy.polys.orderings.ReversedGradedLexOrder" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.sin" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.functions.theta.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "10"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.numbers.One.__mul__" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.decorators.Pow.binary_op_wrapper" [color = "#b1b2b2ff", label = "5"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "3"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.decorators.ImaginaryUnit.binary_op_wrapper" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.numbers.Zero.__add__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.decorators.Mul.binary_op_wrapper" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.numbers.Half.__mul__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.decorators.__sympifyit_wrapper" -> "sympy.core.decorators.Pi.binary_op_wrapper" [color = "#b2b2b2ff", label = "3"];
    "sympy.printing.pretty.pretty_symbology.<genexpr>" -> "sympy.printing.pretty.pretty_symbology.<lambda>" [color = "#b2b2b2ff", label = "48"];
    "sympy.mpmath.calculus.differentiation.<module>" -> "sympy.mpmath.calculus.calculus.defun" [color = "#b2b2b2ff", label = "9"];
    "sympy.solvers.solvers.<module>" -> "sympy.solvers.polysys.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.solvers.<module>" -> "sympy.solvers.bivariate.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.solvers.<module>" -> "sympy.solvers.inequalities.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.hyper.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Ci" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Si" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.fresnels" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions._eis" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Ei" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.li" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.TrigonometricIntegral" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erf2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Li" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erf2inv" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.FresnelIntegral" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions._erfs" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Shi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "21"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erf" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erfi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.Chi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.expint" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erfc" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erfcinv" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.erfinv" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.<module>" -> "sympy.functions.special.error_functions.fresnelc" [color = "#b2b2b2ff", label = "1"];
    "numpy.compat._inspect.getargs" -> "numpy.compat._inspect.iscode" [color = "#b2b2b2ff", label = "31"];
    "sympy.mpmath.ctx_mp_python.__int__" -> "sympy.polys.domains.mpelements.RealElement.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp_python.__int__" -> "sympy.mpmath.libmp.libmpf.to_int" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.combinatorial.numbers.fibonacci" -> "sympy.utilities.memoization.decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.fibonacci" -> "sympy.utilities.memoization.recurrence_memo" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.twodim_base.<module>" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.basic.Mul.__hash__" -> "sympy.core.numbers.Pi.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Mul.__hash__" -> "sympy.core.numbers.NegativeOne.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Mul.__hash__" -> "sympy.core.basic.Mul._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.Predicate.__or__" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "4"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.core.do_one" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.matrices.expressions.matadd.MatAdd" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.core.condition" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.rl.sort" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.rl.glom" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.rl.rm_id" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matadd.<module>" -> "sympy.strategies.core.exhaust" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.modularinteger.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.modularinteger.<module>" -> "sympy.polys.domains.modularinteger.ModularInteger" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.atan" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "numpy.polynomial.hermite.<module>" -> "numpy.polynomial.hermite.Hermite" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "difflib.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.SequenceMatcher" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.Differ" [color = "#b2b2b2ff", label = "1"];
    "difflib.<module>" -> "difflib.HtmlDiff" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.getDirectories" -> "RRtoolbox.lib.config.<dictcomp>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Predicate.count" -> "sympy.core.basic.preorder_traversal.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.basic.Predicate.count" -> "sympy.core.basic.<genexpr>" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.Predicate.count" -> "sympy.core.basic._make_find_query" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.basic.Predicate.count" -> "sympy.core.basic.preorder_traversal.__iter__" [color = "#b2b2b2ff", label = "2"];
    "sympy.matrices.matrices.MatrixBase" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.__eq__" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "24"];
    "sympy.polys.constructor.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.MPContext.__init__" -> "sympy.mpmath.ctx_mp_python._wrap_specfun" [color = "#b1b2b2ff", label = "207"];
    "sympy.mpmath.functions.functions.MPContext.__init__" -> "sympy.mpmath.rational.__new__" [color = "#b2b2b2ff", label = "17"];
    "sympy.mpmath.functions.functions.MPContext.__init__" -> "sympy.mpmath.ctx_base.memoize" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.complexfield.ComplexField.__init__" -> "sympy.mpmath.ctx_mp_python.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.complexfield.ComplexField.__init__" -> "sympy.polys.domains.mpelements.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.And.__and__" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "1"];
    "numpy.ma.core._convert2ma.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "8"];
    "sympy.mpmath.calculus.polynomials.<module>" -> "sympy.mpmath.calculus.calculus.defun" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.calculus.quadrature.<module>" -> "sympy.mpmath.calculus.quadrature.QuadratureMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.quadrature.<module>" -> "sympy.mpmath.calculus.quadrature.TanhSinh" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.quadrature.<module>" -> "sympy.mpmath.calculus.quadrature.GaussLegendre" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.quadrature.<module>" -> "sympy.mpmath.calculus.quadrature.QuadratureRule" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyquinticconst.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyquinticconst.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyquinticconst.<module>" -> "sympy.polys.polyquinticconst.PolyQuintic" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.BatchedCalls" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.pool.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.WorkerInterrupt" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.Parallel" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.ImmediateComputeBatch" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.format_stack.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.SafeFunction" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib._multiprocessing_helpers.<module>" [color = "#b1b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.my_exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.parallel.<module>" -> "joblib.parallel.BatchCompletionCallBack" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.ode.<module>" -> "sympy.solvers.deutils.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.ode.<module>" -> "sympy.core.multidimensional.vectorize.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.solvers.ode.<module>" -> "sympy.core.multidimensional.vectorize.__call__" [color = "#b2b2b2ff", label = "2"];
    "sympy.assumptions.<module>" -> "sympy.assumptions.refine.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.<module>" -> "sympy.assumptions.ask.<module>" [color = "#a0adb2ff", label = "1"];
    "sympy.assumptions.<module>" -> "sympy.assumptions.assume.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.gammazeta.<module>" -> "sympy.mpmath.libmp.gammazeta.bernoulli_size" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.gammazeta.<module>" -> "sympy.mpmath.libmp.libelefun.constant_memo" [color = "#b2b2b2ff", label = "7"];
    "sympy.mpmath.libmp.gammazeta.<module>" -> "sympy.mpmath.libmp.libelefun.def_mpf_constant" [color = "#b2b2b2ff", label = "7"];
    "sympy.mpmath.libmp.gammazeta.<module>" -> "sympy.mpmath.libmp.libintmath.ifac" [color = "#b1b2b2ff", label = "151"];
    "sympy.mpmath.libmp.gammazeta.<module>" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b0b2b2ff", label = "153"];
    "repr.<module>" -> "repr.Repr" [color = "#b2b2b2ff", label = "1"];
    "repr.<module>" -> "repr.Repr.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.<module>" -> "sympy.mpmath.calculus.approximation.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.<module>" -> "sympy.mpmath.calculus.calculus.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.<module>" -> "sympy.mpmath.calculus.differentiation.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.<module>" -> "sympy.mpmath.calculus.extrapolation.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.<module>" -> "sympy.mpmath.calculus.polynomials.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.orthogonal.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.functions.orthogonal.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "8"];
    "sympy.mpmath.ctx_mp_python.__neg__" -> "sympy.mpmath.libmp.libmpf.mpf_neg" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.symbol.__new_stage2__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.wrapper" -> "threading._RLock.__exit__" [color = "#afb2b2ff", label = "537"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.numbers.Integer.sort_key" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.function.__new__" [color = "#abb1b2ff", label = "180"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "9"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.power.__new__" [color = "#b1b2b2ff", label = "5"];
    "sympy.core.compatibility.wrapper" -> "sympy.assumptions.assume.Predicate.sort_key" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.wrapper" -> "threading._RLock.acquire" [color = "#afb2b2ff", label = "537"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.numbers.One.sort_key" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.compatibility._make_key" [color = "#afb2b2ff", label = "323"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.operations.And.args" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.compatibility._HashedSeq.__hash__" [color = "#afb2b2ff", label = "751"];
    "sympy.core.compatibility.wrapper" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "12"];
    "RRtoolbox.lib.directory.correctPath" -> "RRtoolbox.lib.directory.decorator" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.correctPath" -> "RRtoolbox.lib.directory.decoratePath" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.correctPath" -> "RRtoolbox.lib.directory.wrapper" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.cosh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.directory.directory.__sub__" [color = "#b2b2b2ff", label = "3"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.directory.directory.copy" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.directory.__new__" [color = "#b2b2b2ff", label = "8"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.config.ConfigTool" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.config.directoryManager.__init__" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.config.directoryManager" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.directory.directory.__str__" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.config.getDirectories" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.session.<module>" [color = "#b1b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "pkgutil.<module>" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.<module>" -> "RRtoolbox.lib.directory.correctPath" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.Pow.as_base_exp" -> "sympy.core.basic.Pow.args" [color = "#b2b2b2ff", label = "5"];
    "sympy.core.expr.Expr" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "3"];
    "sympy.core.expr.Expr" -> "sympy.core.decorators.call_highest_priority" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.expr.Expr" -> "sympy.core.decorators.priority_decorator" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.expr.Expr" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.expr.Expr" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "12"];
    "numpy.testing.<module>" -> "numpy.testing.nosetester.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.<module>" -> "numpy.testing.utils.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.<module>" -> "unittest.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.testing.<module>" -> "numpy.testing.decorators.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.__new__" -> "sympy.core.numbers.igcd" [color = "#b2b2b2ff", label = "9"];
    "sympy.core.numbers.__new__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "8"];
    "sympy.core.numbers.__new__" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "5"];
    "sympy.core.numbers.__new__" -> "abc.__instancecheck__" [color = "#b2b2b2ff", label = "5"];
    "sympy.core.numbers.__new__" -> "sympy.core.numbers.One.__mul__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.__new__" -> "sympy.core.numbers.NegativeOne.__mul__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "21"];
    "sympy.core.numbers.__new__" -> "sympy.core.numbers.Integer.__int__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.monomials.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.monomials.<module>" -> "sympy.polys.monomials.MonomialOps" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.monomials.<module>" -> "sympy.polys.monomials.Monomial" [color = "#b2b2b2ff", label = "1"];
    "abc.__instancecheck__" -> "_weakrefset.WeakSet.__contains__" [color = "#b2b2b2ff", label = "10"];
    "abc.__instancecheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib.index_tricks.CClass.__init__" -> "numpy.lib.index_tricks.CClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.NegativeInfinity" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.NegativeInfinity" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "4"];
    "sympy.polys.domains.expressiondomain.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.expressiondomain.<module>" -> "sympy.polys.domains.expressiondomain.ExpressionDomain" [color = "#b2b2b2ff", label = "1"];
    "sympy.external.importtools.__sympy_debug" -> "<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.external.importtools.__sympy_debug" -> "os.getenv" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.erf" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.make_mpf" -> "sympy.polys.domains.mpelements.RealElement._set_mpf" [color = "#b2b2b2ff", label = "12"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyDomainError" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyBase" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.PolyError" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polyutils.<module>" -> "numpy.polynomial.polyutils.RankWarning" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.polys.domains.mpelements.ComplexElement._set_mpc" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.mpmath.ctx_mp_python.mpf_convert_arg" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.mpmath.ctx_mp_python.__new__" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.mpmath.libmp.libmpf.mpf_pos" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.polys.domains.mpelements.RealElement.<lambda>" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.ctx_mp_python.__new__" -> "sympy.polys.domains.mpelements.RealElement._set_mpf" [color = "#b2b2b2ff", label = "6"];
    "RRtoolbox.lib.config.directoryManager.__init__" -> "RRtoolbox.lib.config.directoryManager.load" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.<module>" -> "sympy.core.core.ClassRegistry" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.<module>" -> "sympy.core.core.BasicMeta" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.<module>" -> "sympy.core.core.BasicType" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.<module>" -> "sympy.core.core.Registry" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.<module>" -> "sympy.core.core.ClassRegistry.__setattr__" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.Xor" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.basic.Predicate.__eq__" -> "sympy.core.sympify._sympify" [color = "#abb1b2ff", label = "704"];
    "sympy.geometry.line.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "4"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.line.Segment" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.line.Undecidable" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.line.Line" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.line.LinearEntity" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.line.Ray" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line.<module>" -> "sympy.geometry.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrational.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrational.<module>" -> "sympy.polys.domains.pythonrational.PythonRational" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrational.<module>" -> "sympy.printing.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrational.<module>" -> "sympy.printing.defaults.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.SymPyOutputChecker" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.SymPyDocTests" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "pdb.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "timeit.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.Skipped" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.SymPyDocTestRunner" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.PyTestReporter" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.Reporter" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.get_sympy_dir" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.SymPyTests" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "sympy.utilities.runtests.SymPyDocTestFinder" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "doctest.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.utilities.runtests.<module>" -> "platform.<module>" [color = "#abb1b2ff", label = "1"];
    "sympy.core.decorators.deco" -> "sympy.core.decorators.__sympifyit" [color = "#b2b2b2ff", label = "61"];
    "sympy.logic.<module>" -> "sympy.logic.inference.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.<module>" -> "sympy.logic.boolalg.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.domains.rationalfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.rationalfield.<module>" -> "sympy.polys.domains.rationalfield.RationalField" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.directoryManager.load" -> "RRtoolbox.lib.config.loadConfigFile" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.traverse.<module>" -> "sympy.strategies.core.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.And.__hash__" -> "sympy.core.logic.Not.__hash__" [color = "#afb2b2ff", label = "92"];
    "ctypes.PyDLL.__init__" -> "ctypes._FuncPtr" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.InverseCosineTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.InverseCosineTransform" -> "sympy.functions.elementary.miscellaneous.sqrt" [color = "#b1b2b2ff", label = "2"];
    "numpy.ma.core._convert2ma.__init__" -> "numpy.ma.core._convert2ma.getdoc" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.compatibility.ordered" -> "sympy.core.compatibility.ordered" [color = "#aeb2b2ff", label = "86"];
    "sympy.core.compatibility.ordered" -> "sympy.logic.boolalg.BooleanTrue.__nonzero__" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.Infinity.__hash__" [color = "#b1b2b2ff", label = "215"];
    "sympy.core.compatibility.ordered" -> "sympy.sets.sets._infimum_key" [color = "#b2b2b2ff", label = "43"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.One.__lt__" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.One.__eq__" [color = "#b2b2b2ff", label = "12"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.Integer.__hash__" [color = "#b2b2b2ff", label = "75"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.Integer.__lt__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.ordered" -> "sympy.core.compatibility._nodes" [color = "#b2b2b2ff", label = "29"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.Integer.__eq__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.ordered" -> "sympy.core.compatibility.default_sort_key" [color = "#b1b2b2ff", label = "29"];
    "sympy.core.compatibility.ordered" -> "sympy.core.numbers.One.__hash__" [color = "#b2b2b2ff", label = "80"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.Prover.rules_beta" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.rules_2prereq" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.Prover.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts._as_pair" [color = "#b1b2b2ff", label = "93"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.<genexpr>" [color = "#a6b0b2ff", label = "460"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.Prover.process_rule" [color = "#b0b2b2ff", label = "39"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.logic.fromstring" [color = "#b2b2b2ff", label = "52"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.apply_beta_to_alpha_route" [color = "#a5afb2ff", label = "1"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.deduce_alpha_implications" [color = "#a9b1b2ff", label = "1"];
    "sympy.core.facts.FactRules.__init__" -> "sympy.core.facts.Prover.rules_alpha" [color = "#b2b2b2ff", label = "1"];
    "posixpath.abspath" -> "posixpath.isabs" [color = "#b2b2b2ff", label = "3"];
    "posixpath.abspath" -> "posixpath.normpath" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.assumptions.Integer.getit" -> "sympy.core.assumptions._ask" [color = "#b1b2b2ff", label = "3"];
    "sympy.core.assumptions.Integer.getit" -> "sympy.core.assumptions.StdFactKB.copy" [color = "#b2b2b2ff", label = "2"];
    "sympy.tensor.<module>" -> "sympy.tensor.indexed.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.tensor.<module>" -> "sympy.tensor.index_methods.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.adjoint.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.adjoint.<module>" -> "sympy.matrices.expressions.adjoint.Adjoint" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mod.<module>" -> "sympy.core.mod.Mod" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mod.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Halley" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.MDNewton" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.ANewton" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Illinois" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Muller" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Bisection" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.MNewton" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Ridder" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Newton" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.OptimizationMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.optimization.<module>" -> "sympy.mpmath.calculus.optimization.Secant" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrationalfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonrationalfield.<module>" -> "sympy.polys.domains.pythonrationalfield.PythonRationalField" [color = "#b2b2b2ff", label = "1"];
    "weakref.WeakValueDictionary.__init__" -> "UserDict.WeakValueDictionary.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.libmp.six.MovedAttribute.__init__" -> "sympy.mpmath.libmp.six.MovedAttribute.__init__" [color = "#b2b2b2ff", label = "9"];
    "sympy.core.symbol.Wild" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.rings.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "4"];
    "sympy.polys.rings.<module>" -> "sympy.polys.rings.PolyRing" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rings.<module>" -> "sympy.polys.compatibility.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rings.<module>" -> "sympy.polys.heuristicgcd.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rings.<module>" -> "sympy.polys.rings.PolyElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.numbers.Integer._eval_evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.numbers.Float.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.evalf.Integer.evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.logic.boolalg.BooleanFalse.__nonzero__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.numbers.Zero.__nonzero__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.expr.Float.as_real_imag" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Integer._eval_is_negative" -> "sympy.core.numbers.Float.__eq__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.six.exec_" -> "<module>" [color = "#b0b2b2ff", label = "8"];
    "pickle.Unpickler.load_newobj" -> "RRtoolbox.lib.directory.__new__" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.sympify.<module>" -> "sympy.core.core.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.sympify.<module>" -> "sympy.core.sympify.SympifyError" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.sympify.<module>" -> "sympy.core.evaluate.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.sympify.<module>" -> "sympy.core.compatibility.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.sympify.<module>" -> "sympy.core.sympify.CantSympify" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts._as_pair" -> "sympy.core.logic.Not.arg" [color = "#b1b2b2ff", label = "259"];
    "sympy.polys.domains.gmpyrationalfield.GMPYRationalField" -> "sympy.polys.domains.groundtypes.GMPYRational.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg.Equivalent" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite._DebugResult" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite._ErrorHolder" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite.TestSuite" [color = "#b2b2b2ff", label = "1"];
    "unittest.suite.<module>" -> "unittest.suite.BaseTestSuite" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.stride_tricks.<module>" -> "numpy.lib.stride_tricks.DummyArray" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "28"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Or.__hash__" [color = "#b2b2b2ff", label = "3"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "14"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Not.__eq__" [color = "#b1b2b2ff", label = "2"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.And.__eq__" [color = "#b2b2b2ff", label = "20"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Predicate.__eq__" [color = "#afb2b2ff", label = "28"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Or.__eq__" [color = "#b1b2b2ff", label = "6"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Not.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.And.__hash__" [color = "#b2b2b2ff", label = "10"];
    "sympy.logic.boolalg.__new__" -> "sympy.core.basic.Predicate.__hash__" [color = "#b2b2b2ff", label = "14"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__enter__" [color = "#b2b2b2ff", label = "34"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__init__" [color = "#b2b2b2ff", label = "34"];
    "_weakrefset.WeakSet.__iter__" -> "_weakrefset._IterationGuard.__exit__" [color = "#b2b2b2ff", label = "34"];
    "sympy.core.basic.And.__hash__" -> "sympy.core.basic.And._hashable_content" [color = "#b2b2b2ff", label = "15"];
    "sympy.external.importtools.<module>" -> "sympy.external.importtools.__sympy_debug" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.laguerre.<module>" -> "numpy.polynomial.laguerre.Laguerre" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.laguerre.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.solvers.<module>" -> "sympy.polys.solvers.RawMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.compatibility.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.compatibility.<module>" -> "sympy.polys.compatibility.IPolys" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.FiniteSet._contains" -> "sympy.core.numbers.One.__hash__" [color = "#b2b2b2ff", label = "4"];
    "RRtoolbox.lib.directory.joinPath" -> "posixpath.join" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.logic.Or.__hash__" -> "sympy.core.logic.Not.__hash__" [color = "#b0b2b2ff", label = "6"];
    "sympy.core.compatibility.__new__" -> "sympy.polys.polyoptions.__init__" [color = "#b2b2b2ff", label = "24"];
    "sympy.core.compatibility.__new__" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.compatibility.__new__" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.core.compatibility.__new__" -> "sympy.core.core.__init__" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.compatibility.__new__" -> "sympy.core.singleton.__init__" [color = "#afb2b2ff", label = "22"];
    "numpy.polynomial.hermite_e.<module>" -> "numpy.polynomial.hermite_e.HermiteE" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.hermite_e.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Pi.__hash__" -> "sympy.core.basic.Pi.__hash__" [color = "#b2b2b2ff", label = "21"];
    "sympy.core.evalf.evalf" -> "sympy.core.basic.Integer.func" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.evalf" -> "sympy.core.evalf.<lambda>" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.evalf.evalf" -> "sympy.core.basic.Half.func" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.evalf" -> "sympy.core.basic.Zero.func" [color = "#b2b2b2ff", label = "2"];
    "_weakrefset._IterationGuard.__exit__" -> "_weakrefset.WeakSet._commit_removals" [color = "#b2b2b2ff", label = "34"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.factorial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.subfactorial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.FallingFactorial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.RisingFactorial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.binomial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.factorial2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.CombinatorialFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.functions.combinatorial.factorials.MultiFactorial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "8"];
    "sympy.matrices.expressions.matexpr.deco" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "11"];
    "sympy.matrices.expressions.matexpr.deco" -> "functools.wraps" [color = "#b2b2b2ff", label = "11"];
    "sympy.mpmath.matrices.eigen.<module>" -> "sympy.mpmath.matrices.eigen.defun" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.matrices.eigen.<module>" -> "sympy.mpmath.matrices.eigen.Eigen" [color = "#b2b2b2ff", label = "1"];
    "genericpath.isdir" -> "stat.S_ISDIR" [color = "#b2b2b2ff", label = "2"];
    "sympy.matrices.<module>" -> "sympy.matrices.dense.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.<module>" -> "sympy.matrices.matrices.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.<module>" -> "sympy.matrices.immutable.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.matrices.<module>" -> "sympy.matrices.sparse.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Pow.__hash__" -> "sympy.core.numbers.Rational.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Pow.__hash__" -> "sympy.core.basic.Pow._hashable_content" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.basic.Pow.__hash__" -> "sympy.core.numbers.Integer.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Pow.__hash__" -> "sympy.core.numbers.Pi.__hash__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.basic.Pow.__hash__" -> "sympy.core.numbers.Half.__hash__" [color = "#b2b2b2ff", label = "2"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate.Rule" [color = "#afb2b2ff", label = "20"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate.rewriter" [color = "#b2b2b2ff", label = "2"];
    "sympy.integrals.manualintegrate.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "4"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate.evaluates" [color = "#b2b2b2ff", label = "20"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate.trig_rewriter" [color = "#b2b2b2ff", label = "8"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate._evaluates" [color = "#b2b2b2ff", label = "20"];
    "sympy.integrals.manualintegrate.<module>" -> "sympy.integrals.manualintegrate.uncurry" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.numbers.Zero._as_mpf_val" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "2"];
    "numpy.ma.extras.mr_class.__init__" -> "numpy.ma.extras.mr_class.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.mr_class.__init__" -> "numpy.lib.index_tricks.mr_class.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.jn" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.airybiprime" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.besseli" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.besselj" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.besselk" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.BesselBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.AiryBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.airyaiprime" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.airyai" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.hankel2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.bessely" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.hankel1" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.airybi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.yn" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.bessel.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "15"];
    "sympy.functions.special.bessel.<module>" -> "sympy.functions.special.bessel.SphericalBesselBase" [color = "#b2b2b2ff", label = "1"];
    "ctypes.CFUNCTYPE" -> "ctypes.CFunctionType" [color = "#b2b2b2ff", label = "3"];
    "sre_parse.Tokenizer.__init__" -> "sre_parse.Tokenizer.__next" [color = "#b0b2b2ff", label = "57"];
    "sympy.core.core.__init__" -> "sympy.core.core.ClassRegistry.__setattr__" [color = "#b0b2b2ff", label = "344"];
    "sympy.utilities.timeutils.<module>" -> "sympy.core.compatibility.u" [color = "#b2b2b2ff", label = "4"];
    "sympy.utilities.timeutils.<module>" -> "sympy.utilities.timeutils.__do_timings" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Predicate.__hash__" -> "sympy.assumptions.assume.Predicate._hashable_content" [color = "#b2b2b2ff", label = "43"];
    "joblib.func_inspect.<module>" -> "joblib.logger.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.func_inspect.<module>" -> "joblib._memory_helpers.<module>" [color = "#b2b2b2ff", label = "1"];
    "abc.register" -> "_weakrefset.WeakSet.add" [color = "#b2b2b2ff", label = "13"];
    "abc.register" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "13"];
    "sympy.polys.domains.integerring.<module>" -> "sympy.polys.domains.characteristiczero.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.integerring.<module>" -> "sympy.polys.domains.integerring.IntegerRing" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.integerring.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.Not.__eq__" [color = "#b0b2b2ff", label = "182"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.And.__eq__" [color = "#b2b2b2ff", label = "2"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.Predicate.__eq__" [color = "#afb2b2ff", label = "184"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.Or.__eq__" [color = "#b1b2b2ff", label = "132"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.operations.<genexpr>" [color = "#b0b2b2ff", label = "383"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.Implies.__eq__" [color = "#b1b2b2ff", label = "64"];
    "sympy.logic.boolalg._new_args_filter" -> "sympy.core.basic.Equivalent.__eq__" [color = "#b2b2b2ff", label = "28"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.And.__and__" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.Predicate.__or__" [color = "#b2b2b2ff", label = "4"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.Not.__and__" [color = "#b2b2b2ff", label = "2"];
    "sympy.assumptions.ask.<module>" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "32"];
    "sympy.assumptions.ask.<module>" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "1"];
    "sympy.assumptions.ask.<module>" -> "sympy.assumptions.ask_generated.<module>" [color = "#a8b0b2ff", label = "1"];
    "sympy.assumptions.ask.<module>" -> "sympy.assumptions.ask.Q" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.__new__" [color = "#b1b2b2ff", label = "14"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.Predicate.__invert__" [color = "#b1b2b2ff", label = "13"];
    "sympy.assumptions.ask.<module>" -> "sympy.logic.boolalg.Predicate.__and__" [color = "#b1b2b2ff", label = "12"];
    "sympy.assumptions.ask.<module>" -> "sympy.assumptions.ask.register_handler" [color = "#b2b2b2ff", label = "37"];
    "sympy.mpmath.ctx_iv.__init__" -> "sympy.mpmath.ctx_iv._init_builtins" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.__init__" -> "sympy.mpmath.ctx_base.__init__" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.__init__" -> "sympy.mpmath.ctx_iv._set_prec" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matpow.<module>" -> "sympy.matrices.expressions.matpow.MatPow" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matpow.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "timeit.<module>" -> "timeit.Timer" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.__new__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "20"];
    "sympy.core.operations.__new__" -> "sympy.logic.boolalg._new_args_filter" [color = "#aeb2b2ff", label = "87"];
    "sympy.core.operations.__new__" -> "sympy.core.mul.flatten" [color = "#b1b2b2ff", label = "7"];
    "sympy.core.operations.__new__" -> "sympy.core.basic.Or.__hash__" [color = "#b2b2b2ff", label = "66"];
    "sympy.core.operations.__new__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "87"];
    "sympy.core.operations.__new__" -> "sympy.core.operations._from_args" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.operations.__new__" -> "sympy.core.basic.Equivalent.__hash__" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.operations.__new__" -> "sympy.core.basic.Not.__hash__" [color = "#b2b2b2ff", label = "91"];
    "sympy.core.operations.__new__" -> "sympy.core.basic.Implies.__hash__" [color = "#b2b2b2ff", label = "32"];
    "sympy.core.operations.__new__" -> "sympy.core.basic.Predicate.__hash__" [color = "#b1b2b2ff", label = "94"];
    "sympy.core.operations.__new__" -> "sympy.core.operations._new_args_filter" [color = "#aeb2b2ff", label = "384"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.functions.elementary.miscellaneous.IdentityFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.functions.elementary.miscellaneous.Max" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.functions.elementary.miscellaneous.MinMaxBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "2"];
    "sympy.functions.elementary.miscellaneous.<module>" -> "sympy.functions.elementary.miscellaneous.Min" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.<module>" -> "sympy.core.logic.AndOr_Base" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.<module>" -> "sympy.core.logic.Not" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.<module>" -> "sympy.core.logic.Logic" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.<module>" -> "sympy.core.logic.And" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.<module>" -> "sympy.core.logic.Or" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootisolation.<module>" -> "sympy.polys.rootisolation.RealInterval" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootisolation.<module>" -> "sympy.polys.rootisolation.ComplexInterval" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.Complement" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.Interval" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "7"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.ProductSet" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.contains.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.Set" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.FiniteSet" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.Union" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.UniversalSet" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "2"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.Intersection" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "2"];
    "sympy.sets.sets.<module>" -> "sympy.sets.sets.EmptySet" [color = "#b2b2b2ff", label = "1"];
    "joblib._multiprocessing_helpers.<module>" -> "UserDict._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "joblib._multiprocessing_helpers.<module>" -> "multiprocessing.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib._multiprocessing_helpers.<module>" -> "multiprocessing.Semaphore" [color = "#b2b2b2ff", label = "1"];
    "joblib._multiprocessing_helpers.<module>" -> "weakref.remove" [color = "#b2b2b2ff", label = "1"];
    "joblib._multiprocessing_helpers.<module>" -> "multiprocessing.pool.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.str.<module>" -> "sympy.printing.str.StrReprPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.str.<module>" -> "sympy.printing.str.StrPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.str.<module>" -> "sympy.printing.precedence.<module>" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.connection.<module>" -> "multiprocessing.dummy.connection.Listener" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.connection.<module>" -> "multiprocessing.dummy.connection.Connection" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point.<module>" -> "sympy.geometry.point.Point" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point.<module>" -> "sympy.geometry.exceptions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point.<module>" -> "sympy.geometry.entity.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.point.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.JobLibCollisionWarning" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.func_inspect.<module>" [color = "#b1b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.Memory" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.MemorizedResult" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "json.<module>" [color = "#b0b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "pydoc.<module>" [color = "#b1b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.numpy_pickle.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.MemorizedFunc" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "weakref.WeakKeyDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.hashing.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.NotMemorizedFunc" [color = "#b2b2b2ff", label = "1"];
    "joblib.memory.<module>" -> "joblib.memory.NotMemorizedResult" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.Pow._eval_is_rational" -> "sympy.core.power.Pow.as_base_exp" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.power.Pow._eval_is_rational" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.core.power.Pow._eval_is_rational" -> "sympy.core.basic.Pow.func" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.ImaginaryUnit.__mul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "RRtoolbox.lib.directory.checkFile" -> "genericpath.isfile" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.strategies.core.do_one" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.strategies.rl.rm_id" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.strategies.core.exhaust" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.matrices.expressions.matmul.MatMul" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.matrices.expressions.transpose.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matmul.<module>" -> "sympy.strategies.tools.typed" [color = "#b2b2b2ff", label = "1"];
    "sre_parse.Tokenizer.get" -> "sre_parse.Tokenizer.__next" [color = "#a4afb2ff", label = "3478"];
    "sympy.concrete.gosper.<module>" -> "sympy.solvers.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.Dummy" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.usertools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_iv.__init__" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_mp.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_iv.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_fp.<module>" [color = "#aab1b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_mp.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.<module>" -> "sympy.mpmath.ctx_fp.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.FunctionClass.nargs" -> "sympy.sets.sets.__new__" [color = "#b1b2b2ff", label = "4"];
    "numpy.lib.<module>" -> "numpy.lib.npyio.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.arrayterator.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.type_check.<module>" [color = "#aeb2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.financial.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.arraysetops.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.nanfunctions.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.shape_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.index_tricks.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.lib.<module>" -> "numpy.lib._version.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.scimath.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.info.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.<module>" -> "numpy.lib.arraypad.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.preview.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.preview.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Infinity.__hash__" -> "sympy.core.basic.Infinity._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.getPath" -> "posixpath.abspath" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.getPath" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.getPath" -> "RRtoolbox.lib.directory.checkFile" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.utils.<module>" -> "numpy.testing.utils.WarningManager" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.utils.<module>" -> "numpy.testing.utils.clear_and_catch_warnings" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.utils.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.utils.<module>" -> "numpy.testing.utils.IgnoreException" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.utils.<module>" -> "numpy.testing.utils.WarningMessage" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.__new__" -> "sympy.mpmath.ctx_iv.convert" [color = "#b2b2b2ff", label = "6"];
    "sympy.core.assumptions.__init__" -> "sympy.core.assumptions.StdFactKB.__init__" [color = "#afb2b2ff", label = "316"];
    "sympy.core.assumptions.__init__" -> "sympy.core.assumptions.as_property" [color = "#7774b2ff", label = "16552"];
    "sympy.core.assumptions.__init__" -> "sympy.core.core.__init__" [color = "#b0b2b2ff", label = "316"];
    "sympy.core.assumptions.__init__" -> "sympy.core.assumptions.make_property" [color = "#b2b2b2ff", label = "31"];
    "unittest.main.<module>" -> "unittest.main.TestProgram" [color = "#b2b2b2ff", label = "1"];
    "unittest.main.<module>" -> "unittest.runner.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.zeta.<module>" -> "sympy.mpmath.functions.functions.defun_static" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.zeta.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "13"];
    "sympy.mpmath.functions.zeta.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "9"];
    "numpy.polynomial.legendre.<module>" -> "numpy.polynomial.legendre.Legendre" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.legendre.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.cache.func_wrapper" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "76"];
    "sympy.core.cache.func_wrapper" -> "sympy.core.compatibility.lru_cache" [color = "#b2b2b2ff", label = "76"];
    "sympy.core.cache.func_wrapper" -> "sympy.core.compatibility.decorating_function" [color = "#b1b2b2ff", label = "76"];
    "numpy.core.records.<module>" -> "numpy.core.records.recarray" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.records.record" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.records.<module>" -> "numpy.core.records.format_parser" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.load_setitems" -> "pickle.Unpickler.marker" [color = "#b2b2b2ff", label = "9"];
    "unittest.<module>" -> "unittest.result.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.<module>" -> "unittest.case.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.<module>" -> "unittest.suite.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.<module>" -> "unittest.main.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.<module>" -> "unittest.loader.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.spherical_harmonics.<module>" -> "sympy.functions.special.spherical_harmonics.Znm" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.spherical_harmonics.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.spherical_harmonics.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "2"];
    "sympy.functions.special.spherical_harmonics.<module>" -> "sympy.functions.special.spherical_harmonics.Ynm" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.One.sort_key" -> "sympy.core.numbers.class_key" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.combinatorial.<module>" -> "sympy.functions.combinatorial.factorials.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.combinatorial.<module>" -> "sympy.functions.combinatorial.numbers.<module>" [color = "#acb1b2ff", label = "1"];
    "numpy.core.numerictypes._add_types" -> "numpy.core.numerictypes.english_lower" [color = "#b2b2b2ff", label = "36"];
    "sympy.core.numbers.Half._as_mpf_val" -> "sympy.mpmath.libmp.libmpf.from_rational" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.load_stop" -> "pickle._Stop.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.sympify.sympify" -> "inspect.getmro" [color = "#b2b2b2ff", label = "101"];
    "sympy.core.sympify.sympify" -> "sympy.core.sympify.sympify" [color = "#adb2b2ff", label = "325"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.Or.__hash__" [color = "#b2b2b2ff", label = "69"];
    "sympy.core.sympify.sympify" -> "sympy.core.numbers.__new__" [color = "#aeb2b2ff", label = "807"];
    "sympy.core.sympify.sympify" -> "sympy.logic.boolalg.<lambda>" [color = "#b1b2b2ff", label = "278"];
    "sympy.core.sympify.sympify" -> "sympy.core.sympify.SympifyError.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.Not.__hash__" [color = "#b2b2b2ff", label = "92"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.Implies.__hash__" [color = "#b2b2b2ff", label = "32"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.And.__hash__" [color = "#b2b2b2ff", label = "10"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.Equivalent.__hash__" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.sympify.sympify" -> "sympy.core.compatibility.iterable" [color = "#b2b2b2ff", label = "101"];
    "sympy.core.sympify.sympify" -> "sympy.core.basic.Predicate.__hash__" [color = "#b1b2b2ff", label = "108"];
    "sympy.core.containers.<module>" -> "sympy.core.containers.Tuple" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.containers.<module>" -> "sympy.core.containers.Dict" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.containers.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.core.containers.<module>" -> "sympy.utilities.<module>" [color = "#a6b0b2ff", label = "1"];
    "sympy.printing.printer.<module>" -> "sympy.printing.printer.Printer" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.order.<module>" -> "sympy.series.order.Order" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.order.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.polys.fields.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "4"];
    "sympy.polys.fields.<module>" -> "sympy.polys.fields.FracElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.fields.<module>" -> "sympy.polys.fields.FracField" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.__new__" -> "sympy.core.logic.Not.__hash__" [color = "#afb2b2ff", label = "174"];
    "sympy.core.logic.__new__" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "104"];
    "sympy.core.logic.__new__" -> "sympy.core.logic.__new__" [color = "#a2aeb2ff", label = "2998"];
    "sympy.core.logic.__new__" -> "sympy.core.logic.flatten" [color = "#b2b2b2ff", label = "59"];
    "sympy.core.logic.__new__" -> "sympy.core.logic.And._eval_propagate_not" [color = "#b2b2b2ff", label = "6"];
    "sympy.functions.special.bessel.airyai" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "ctypes.PYFUNCTYPE" -> "ctypes.CFunctionType" [color = "#b2b2b2ff", label = "3"];
    "unittest.result.TestResult" -> "unittest.result.failfast" [color = "#b2b2b2ff", label = "3"];
    "sympy.assumptions.assume.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.assume.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.assumptions.assume.<module>" -> "sympy.assumptions.assume.Predicate" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.assume.<module>" -> "sympy.assumptions.assume.AssumptionsContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.assume.<module>" -> "sympy.assumptions.assume.AppliedPredicate" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.repr.<module>" -> "sympy.printing.repr.ReprPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_atanh" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_log2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_log1" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_cosasin" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.TupleArg" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_power2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_sinasin" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_asin1" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_asin2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_sqrts1" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.meijerg" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.hyper" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.TupleParametersBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "15"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_sqrts2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.hyper.<module>" -> "sympy.functions.special.hyper.HyperRep_power1" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._add_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._set_array_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._typedict" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._construct_lookups" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._register_types" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numbers.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._set_up_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._add_integer_aliases" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._construct_char_code_lookup" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes.<module>" -> "numpy.core.numerictypes._add_aliases" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.log" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "sympy.core.facts.StdFactKB._tell" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.assumptions._ask" -> "sympy.core.expr.Integer._eval_is_negative" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "sympy.core.assumptions._ask" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "sympy.core.facts.StdFactKB.deduce_all_facts" [color = "#b0b2b2ff", label = "6"];
    "sympy.core.assumptions._ask" -> "sympy.core.expr.Half._eval_is_negative" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "random.Random.shuffle" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "sympy.core.numbers.Integer._eval_is_zero" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.assumptions._ask" -> "sympy.core.numbers.NegativeOne._eval_is_zero" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions._ask" -> "sympy.core.power.Pow._eval_is_rational" [color = "#b2b2b2ff", label = "1"];
    "warnings.filterwarnings" -> "re.compile" [color = "#9ba9b2ff", label = "8"];
    "RRtoolbox.lib.directory.__new__" -> "RRtoolbox.lib.directory.filterdata" [color = "#b2b2b2ff", label = "20"];
    "RRtoolbox.lib.directory.__new__" -> "RRtoolbox.lib.directory.repr2str" [color = "#b2b2b2ff", label = "20"];
    "RRtoolbox.lib.directory.correctSep" -> "RRtoolbox.lib.directory.getSplitted" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.factor_.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.generate.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.multinomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.partitions_.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.continued_fraction.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.residue_ntheory.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.<module>" -> "sympy.ntheory.egyptian_fraction.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.factor_.<module>" -> "sympy.ntheory.factor_.<genexpr>" [color = "#aab1b2ff", label = "2040"];
    "sympy.ntheory.factor_.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "2"];
    "sympy.ntheory.factor_.<module>" -> "sympy.ntheory.factor_.divisor_sigma" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.factor_.<module>" -> "sympy.ntheory.factor_.totient" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.apply_beta_to_alpha_route" -> "sympy.core.logic.Not.__hash__" [color = "#acb1b2ff", label = "1028"];
    "sympy.core.facts.apply_beta_to_alpha_route" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "134"];
    "sympy.core.facts.apply_beta_to_alpha_route" -> "sympy.core.facts.<genexpr>" [color = "#9ba9b2ff", label = "3508"];
    "sympy.matrices.expressions.determinant.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.determinant.<module>" -> "sympy.matrices.expressions.determinant.Determinant" [color = "#b2b2b2ff", label = "1"];
    "re.match" -> "re._compile" [color = "#9ba9b2ff", label = "117"];
    "sympy.core.numbers.One.__mul__" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.numbers.One.__mul__" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "11"];
    "sympy.core.numbers.One.__mul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "3"];
    "sympy.ntheory.residue_ntheory.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.ntheory.residue_ntheory.<module>" -> "sympy.ntheory.residue_ntheory.mobius" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.find_class" -> "RRtoolbox.lib.directory.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Number" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.Number" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.Number" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.Rational.__hash__" -> "sympy.core.numbers.Rational._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "cmd.<module>" -> "cmd.Cmd" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.mathematica.<module>" -> "sympy.printing.mathematica.MCodePrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.limits.<module>" -> "sympy.series.limits.Limit" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.limits.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.series.limits.<module>" -> "sympy.series.gruntz.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.tan" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.exponential.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.InverseTrigonometricFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.sin" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.acsc" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.atan2" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.cot" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.sec" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.atan" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.cos" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.TrigonometricFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.acos" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.asec" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.asin" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.hyperbolic.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.csc" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.ReciprocalTrigonometricFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "16"];
    "sympy.functions.elementary.trigonometric.<module>" -> "sympy.functions.elementary.trigonometric.acot" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numerictypes._add_aliases" -> "numpy.core.numerictypes.english_capitalize" [color = "#b2b2b2ff", label = "14"];
    "numpy.core.numerictypes._add_aliases" -> "numpy.core.numerictypes.english_lower" [color = "#b2b2b2ff", label = "36"];
    "numpy.core.numerictypes._add_aliases" -> "numpy.core.numerictypes.bitname" [color = "#b2b2b2ff", label = "26"];
    "sympy.sets.sets.Union" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.Union" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.register_after_fork" -> "weakref.WeakValueDictionary.__setitem__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.integerring.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.rationalfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.gmpyintegerring.GMPYIntegerRing.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.pythonintegerring.PythonIntegerRing.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.gmpyrationalfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.gmpyrationalfield.GMPYRationalField.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.pythonfinitefield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.expressiondomain.ExpressionDomain.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.gmpyfinitefield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.realfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.algebraicfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.fractionfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.complexfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.complexfield.ComplexField.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.realfield.RealField.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.polynomialring.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.finitefield.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.pythonrationalfield.PythonRationalField.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.expressiondomain.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.pythonrationalfield.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.<module>" -> "sympy.polys.domains.domain.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility._make_key" -> "sympy.core.compatibility._HashedSeq.__init__" [color = "#b0b2b2ff", label = "323"];
    "sympy.core.compatibility._make_key" -> "sympy.core.compatibility.<genexpr>" [color = "#aeb2b2ff", label = "1067"];
    "unittest.util.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "platform.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "13"];
    "platform.<module>" -> "platform._popen" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.identification.<module>" -> "sympy.mpmath.identification.IdentificationMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Integer.factors" -> "sympy.ntheory.factor_.factorint" [color = "#b2b2b2ff", label = "4"];
    "sympy.plotting.intervalmath.<module>" -> "sympy.plotting.intervalmath.lib_interval.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.intervalmath.<module>" -> "sympy.plotting.intervalmath.interval_arithmetic.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.lambdarepr.<module>" -> "sympy.printing.lambdarepr.NumExprPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.lambdarepr.<module>" -> "sympy.printing.lambdarepr.LambdaPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.matrices.matrices.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.matrices.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.calculus.quadrature.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.functions.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.matrices.calculus.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.visualization.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.calculus.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.calculus.odes.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.libmp.<module>" [color = "#acb1b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.matrices.linalg.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.ctx_base.Context" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.calculus.optimization.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.ctx_base.StandardBaseContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.<module>" -> "sympy.mpmath.identification.<module>" [color = "#b2b2b2ff", label = "1"];
    "sre_compile._optimize_charset" -> "sre_compile._mk_bitmap" [color = "#b2b2b2ff", label = "12"];
    "sre_compile._optimize_charset" -> "sre_compile.fixup" [color = "#b2b2b2ff", label = "90"];
    "sympy.core.basic.And.__eq__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "40"];
    "threading._RLock.acquire" -> "threading._RLock._note" [color = "#b0b2b2ff", label = "537"];
    "sympy.mpmath.ctx_iv.<module>" -> "sympy.mpmath.ctx_iv._binary_op" [color = "#b2b2b2ff", label = "5"];
    "sympy.mpmath.ctx_iv.<module>" -> "sympy.mpmath.ctx_iv.ivmpf" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.<module>" -> "sympy.mpmath.ctx_iv.ivmpc" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.<module>" -> "sympy.mpmath.ctx_iv.ivmpf_constant" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.<module>" -> "sympy.mpmath.ctx_iv.MPIntervalContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.numbers.Integer.factors" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.numbers.igcd" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.assumptions.Half.getit" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.numbers.Integer.__eq__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.ntheory.factor_.perfect_power" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.assumptions.Integer.getit" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.Integer._eval_power" -> "sympy.core.power.integer_nthroot" [color = "#b2b2b2ff", label = "2"];
    "sympy.external.<module>" -> "sympy.external.importtools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.Symbol" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "2"];
    "sympy.printing.defaults.<module>" -> "sympy.printing.defaults.DefaultPrinting" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._version.<module>" -> "numpy.lib._version.NumpyVersion" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.inference.<module>" -> "sympy.logic.inference.PropKB" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.inference.<module>" -> "sympy.logic.inference.KB" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Implies.__eq__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "128"];
    "sympy.core.sympify._sympify" -> "sympy.core.sympify.sympify" [color = "#a7b0b2ff", label = "1967"];
    "sympy.plotting.<module>" -> "sympy.plotting.plot_implicit.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.<module>" -> "sympy.plotting.plot.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.<module>" -> "sympy.plotting.pygletplot.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Integer.evalf" -> "sympy.core.evalf._create_evalf_table" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Integer.evalf" -> "sympy.mpmath.libmp.libmpf.dps_to_prec" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Integer.evalf" -> "sympy.core.evalf.evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Integer.evalf" -> "sympy.core.numbers._new" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "cmd.<module>" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "pdb.Pdb" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "pdb.Restart" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "bdb.<module>" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "repr.Repr.__init__" [color = "#b2b2b2ff", label = "1"];
    "pdb.<module>" -> "repr.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions._init_dependencies_order" -> "sympy.utilities.iterables.topological_sort" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.int_trace" -> "os.getenv" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Integer._as_mpf_val" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.expressions.blockmatrix.<module>" -> "sympy.matrices.expressions.determinant.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.blockmatrix.<module>" -> "sympy.matrices.expressions.blockmatrix.BlockDiagMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.blockmatrix.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.matrices.expressions.blockmatrix.<module>" -> "sympy.matrices.expressions.trace.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.blockmatrix.<module>" -> "sympy.matrices.expressions.blockmatrix.BlockMatrix" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.function_base.<module>" -> "numpy.lib.function_base.vectorize" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.function_base.<module>" -> "numpy.lib.twodim_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.function_base.<module>" -> "numpy.lib.utils.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.function_base.<module>" -> "numpy.lib.utils.deprecate" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.Poly" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "17"];
    "sympy.polys.polytools.Poly" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "17"];
    "numpy.ma.core.type.__new__" -> "numpy.ma.core.MaskedConstant.__array_finalize__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.coth" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.simplify.fu.<module>" -> "sympy.strategies.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.fu.<module>" -> "sympy.strategies.tree.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.ImaginaryUnit.__hash__" -> "sympy.core.basic.ImaginaryUnit._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.ccode.<module>" -> "sympy.printing.codeprinter.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.ccode.<module>" -> "sympy.printing.ccode.CCodePrinter" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.decorator" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.decorator" -> "functools.wraps" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.HeuristicGCDFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.MultivariatePolynomialError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.GeneratorsError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.ExtraneousFactors" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.HomomorphismFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.BasePolynomialError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.NotReversible" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.OptionError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.PolynomialError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.NotAlgebraic" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.PolynomialDivisionFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.NotInvertible" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.IsomorphismFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "25"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.RefinementFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.UnificationFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.CoercionFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.ComputationFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.DomainError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.GeneratorsNeeded" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.FlagError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.OperationNotSupported" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.ExactQuotientFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.PolificationFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.ModularGCDFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.EvaluationFailed" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyerrors.<module>" -> "sympy.polys.polyerrors.UnivariatePolynomialError" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.densetools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.polyclasses.ANP" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.polyclasses.GenericPoly" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.rootisolation.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.sqfreetools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.polyclasses.DMP" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.densearith.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.euclidtools.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.densebasic.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.factortools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.polyclasses.DMF" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyclasses.<module>" -> "sympy.polys.polyutils.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.source.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.misc.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.iterables.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.lambdify.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.timeutils.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.<module>" -> "sympy.utilities.runtests.<module>" [color = "#a6b0b2ff", label = "1"];
    "sympy.plotting.intervalmath.interval_arithmetic.<module>" -> "sympy.plotting.intervalmath.interval_arithmetic.interval" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.asin" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.logic.boolalg.eval" -> "sympy.core.basic.Not.__eq__" [color = "#b1b2b2ff", label = "4"];
    "sympy.logic.boolalg.eval" -> "sympy.core.basic.Or.__eq__" [color = "#b1b2b2ff", label = "4"];
    "sympy.logic.boolalg.eval" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "32"];
    "sympy.logic.boolalg.eval" -> "sympy.core.basic.And.__eq__" [color = "#b2b2b2ff", label = "16"];
    "sympy.logic.boolalg.eval" -> "sympy.core.basic.Predicate.__eq__" [color = "#aeb2b2ff", label = "308"];
    "sympy.printing.pretty.pretty.<module>" -> "sympy.printing.pretty.pretty.PrettyPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty.<module>" -> "sympy.printing.printer.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty.<module>" -> "sympy.printing.pretty.stringpict.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty.<module>" -> "sympy.printing.str.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty.<module>" -> "sympy.printing.conventions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.polygon.<module>" -> "sympy.geometry.polygon.Polygon" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.polygon.<module>" -> "sympy.geometry.polygon.Triangle" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.polygon.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "3"];
    "sympy.geometry.polygon.<module>" -> "sympy.geometry.polygon.RegularPolygon" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft.<module>" -> "numpy.fft.fftpack.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.fft.<module>" -> "numpy.fft.info.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.fft.<module>" -> "numpy.fft.helper.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.StdFactKB.deduce_all_facts" -> "sympy.core.facts.StdFactKB._tell" [color = "#adb2b2ff", label = "1208"];
    "sympy.core.facts.StdFactKB.deduce_all_facts" -> "sympy.core.facts.StdFactKB.<genexpr>" [color = "#aeb2b2ff", label = "1078"];
    "sympy.polys.domains.fractionfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.fractionfield.<module>" -> "sympy.polys.domains.fractionfield.FractionField" [color = "#b2b2b2ff", label = "1"];
    "joblib.hashing.<module>" -> "joblib._compat.<module>" [color = "#b2b2b2ff", label = "1"];
    "joblib.hashing.<module>" -> "joblib.hashing._MyHash" [color = "#b2b2b2ff", label = "1"];
    "joblib.hashing.<module>" -> "joblib.hashing._ConsistentSet" [color = "#b2b2b2ff", label = "1"];
    "joblib.hashing.<module>" -> "joblib.hashing.NumpyHasher" [color = "#b2b2b2ff", label = "1"];
    "joblib.hashing.<module>" -> "joblib.hashing.Hasher" [color = "#b2b2b2ff", label = "1"];
    "__main__" -> "imrestore.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.plot.Plot" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "2"];
    "sympy.plotting.plot.Plot" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Zero.__mod__" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.FPContext.__init__" -> "sympy.mpmath.ctx_fp._wrap_specfun" [color = "#b1b2b2ff", label = "207"];
    "sympy.mpmath.functions.functions.FPContext.__init__" -> "sympy.mpmath.ctx_base.memoize" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.functions.FPContext.__init__" -> "sympy.mpmath.ctx_fp.<lambda>" [color = "#b2b2b2ff", label = "17"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.Finalize" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "weakref.WeakValueDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "atexit.register" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.ForkAwareLocal" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.util.<module>" -> "multiprocessing.util.ForkAwareThreadLock" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.wrapper" -> "RRtoolbox.lib.directory.getShortenedPath" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.wrapper" -> "RRtoolbox.lib.directory.getPath" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.wrapper" -> "RRtoolbox.lib.directory.correctSep" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootoftools.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.rootoftools.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.polys.rootoftools.<module>" -> "sympy.polys.rootoftools.RootOf" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootoftools.<module>" -> "sympy.polys.rootoftools.RootSum" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootoftools.<module>" -> "sympy.polys.polyroots.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.simplify.sqrtdenest.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.simplify.cse_main.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.simplify.simplify._rf" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.utilities.timeutils.timethis" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.utilities.timeutils.decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.simplify.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.acoth" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.ctx_fp.__init__" -> "sympy.mpmath.ctx_base._init_aliases" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_fp.__init__" -> "sympy.mpmath.ctx_base.__init__" [color = "#b1b2b2ff", label = "1"];
    "inspect.getargs" -> "inspect.iscode" [color = "#b1b2b2ff", label = "182"];
    "inspect.getargs" -> "__new__" [color = "#b1b2b2ff", label = "182"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.MapResult" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.IMapUnorderedIterator" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.MaybeEncodingError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.Pool" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.IMapIterator" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.ApplyResult" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.pool.<module>" -> "multiprocessing.pool.ThreadPool" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.elliptic_integrals.<module>" -> "sympy.functions.special.elliptic_integrals.elliptic_pi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.elliptic_integrals.<module>" -> "sympy.functions.special.elliptic_integrals.elliptic_k" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.elliptic_integrals.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "4"];
    "sympy.functions.special.elliptic_integrals.<module>" -> "sympy.functions.special.elliptic_integrals.elliptic_f" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.elliptic_integrals.<module>" -> "sympy.functions.special.elliptic_integrals.elliptic_e" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.iterables.topological_sort" -> "sympy.utilities.iterables.<lambda>" [color = "#b2b2b2ff", label = "48"];
    "numbers.Integral" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "13"];
    "sympy.core.assumptions.StdFactKB.copy" -> "sympy.core.assumptions.StdFactKB.__init__" [color = "#b0b2b2ff", label = "5"];
    "sympy.polys.domains.groundtypes.<module>" -> "sympy.polys.domains.groundtypes.GMPYInteger" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.groundtypes.<module>" -> "sympy.polys.domains.groundtypes.GMPYRational" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.groundtypes.<module>" -> "sympy.polys.domains.pythonrational.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_abs" -> "sympy.mpmath.libmp.libmpf._normalize1" [color = "#b2b2b2ff", label = "22"];
    "sympy.core.assumptions.Half.getit" -> "sympy.core.assumptions._ask" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions.Half.getit" -> "sympy.core.assumptions.StdFactKB.copy" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "2"];
    "json.decoder.<module>" -> "json.decoder.JSONDecoder" [color = "#b2b2b2ff", label = "1"];
    "json.decoder.<module>" -> "json.scanner.<module>" [color = "#b1b2b2ff", label = "1"];
    "json.decoder.<module>" -> "json.decoder._floatconstants" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.polynomialring.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.polynomialring.<module>" -> "sympy.polys.domains.polynomialring.PolynomialRing" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.polynomialring.<module>" -> "sympy.polys.domains.compositedomain.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.failfast" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "unittest.result.failfast" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "RRtoolbox.lib.directory.getShortenedPath" -> "RRtoolbox.lib.directory.getSep" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.<module>" -> "sympy.strategies.rl.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.<module>" -> "sympy.strategies.branch.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.<module>" -> "sympy.strategies.traverse.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.<module>" -> "sympy.strategies.tools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.from_man_exp" -> "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#b1b2b2ff", label = "150"];
    "sympy.mpmath.libmp.libmpf.from_man_exp" -> "sympy.mpmath.libmp.libmpf._normalize" [color = "#b2b2b2ff", label = "18"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.function.Equivalent.func" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.function.Implies.func" [color = "#b2b2b2ff", label = "32"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.core.__cmp__" [color = "#b1b2b2ff", label = "296"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Predicate.func" [color = "#b2b2b2ff", label = "92"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.function.Or.func" [color = "#b2b2b2ff", label = "66"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.And.__eq__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Predicate.__eq__" [color = "#afb2b2ff", label = "184"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Or.__eq__" [color = "#b1b2b2ff", label = "132"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Not.__eq__" [color = "#b0b2b2ff", label = "182"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.function.Not.func" [color = "#b2b2b2ff", label = "91"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Implies.__eq__" [color = "#b1b2b2ff", label = "64"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.function.And.func" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations._new_args_filter" -> "sympy.core.basic.Equivalent.__eq__" [color = "#b2b2b2ff", label = "28"];
    "sympy.core.power.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.power.<module>" -> "sympy.core.function.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.core.power.<module>" -> "sympy.core.power.Pow" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.is_sequence" -> "sympy.core.compatibility.iterable" [color = "#b2b2b2ff", label = "13"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainTan.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._convert2ma.__init__" [color = "#b2b2b2ff", label = "8"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedConstant" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MAError" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedPrintOption.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreater" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._convert2ma" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainCheckInterval" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._extrema_operation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._frommethod" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskError" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreater.__init__" [color = "#b2b2b2ff", label = "3"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._arraymethod" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainTan" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedPrintOption" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedUnaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedUnaryOperation.__init__" [color = "#b2b2b2ff", label = "27"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.mvoid" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreaterEqual" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedIterator" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainSafeDivide.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainSafeDivide" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "6"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedBinaryOperation.__init__" [color = "#b2b2b2ff", label = "18"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainedBinaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._maximum_operation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._MaskedBinaryOperation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.doc_note" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainGreaterEqual.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.type.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core.MaskedArray" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._minimum_operation.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._frommethod.__init__" [color = "#b2b2b2ff", label = "23"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._minimum_operation" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._maximum_operation.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core.<module>" -> "numpy.ma.core._DomainCheckInterval.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.series.residues.<module>" -> "sympy.utilities.timeutils.decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.residues.<module>" -> "sympy.utilities.timeutils.timethis" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.<module>" -> "RRtoolbox.lib.directory.directory" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.rootoftools.RootOf" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.append" [color = "#b2b2b2ff", label = "22"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__getitem__" [color = "#b1b2b2ff", label = "50"];
    "sre_parse._parse_sub" -> "sre_parse.Tokenizer.match" [color = "#b0b2b2ff", label = "365"];
    "sre_parse._parse_sub" -> "sre_parse._parse" [color = "#97a6b2ff", label = "224"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__len__" [color = "#b2b2b2ff", label = "66"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__delitem__" [color = "#b2b2b2ff", label = "6"];
    "sre_parse._parse_sub" -> "sre_parse.SubPattern.__init__" [color = "#b2b2b2ff", label = "19"];
    "sympy.core.facts.transitive_closure" -> "sympy.core.logic.Not.__hash__" [color = "#8996b2ff", label = "10799"];
    "sympy.core.facts.transitive_closure" -> "sympy.core.logic.__eq__" [color = "#b0b2b2ff", label = "481"];
    "sympy.assumptions.ask.Q" -> "sympy.assumptions.assume.__new__" [color = "#b2b2b2ff", label = "43"];
    "sympy.core.numbers.Integer.__lt__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "4"];
    "sympy.mpmath.libmp.<module>" -> "sympy.mpmath.libmp.libhyper.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.mpmath.libmp.<module>" -> "sympy.mpmath.libmp.libmpf.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.mpmath.libmp.<module>" -> "sympy.mpmath.libmp.libmpc.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.<module>" -> "sympy.mpmath.libmp.libmpi.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Gaussian" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "24"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Wrt" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Field" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Frac" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Split" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Extension" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Expand" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Include" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Strict" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Gens" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Options" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Method" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Greedy" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Symbols" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.OptionType" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "24"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Domain" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Option" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Sort" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.All" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Composite" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Auto" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Formal" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Symmetric" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions._init_dependencies_order" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Flag" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Polys" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.BooleanOption" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Gen" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Order" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyoptions.<module>" -> "sympy.polys.polyoptions.Modulus" [color = "#b2b2b2ff", label = "1"];
    "pkgutil.<module>" -> "pkgutil.ImpLoader" [color = "#b2b2b2ff", label = "1"];
    "pkgutil.<module>" -> "pkgutil.ImpImporter" [color = "#b2b2b2ff", label = "1"];
    "pkgutil.<module>" -> "pkgutil.simplegeneric" [color = "#b2b2b2ff", label = "1"];
    "pkgutil.<module>" -> "pkgutil.register" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Atom" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.exprtools.<module>" -> "sympy.core.exprtools.Factors" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.exprtools.<module>" -> "sympy.core.exprtools.Term" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.exprtools.<module>" -> "sympy.core.coreerrors.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.extrapolation.<module>" -> "sympy.mpmath.calculus.extrapolation.cohen_alt_class" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.extrapolation.<module>" -> "sympy.mpmath.calculus.extrapolation.levin_class" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.extrapolation.<module>" -> "sympy.mpmath.calculus.calculus.defun" [color = "#b2b2b2ff", label = "10"];
    "sympy.core.numbers.Half.__hash__" -> "sympy.core.basic.Half.__hash__" [color = "#b2b2b2ff", label = "20"];
    "sympy.core.numbers.Half.__hash__" -> "sympy.core.numbers.Half.__hash__" [color = "#b2b2b2ff", label = "20"];
    "sympy.core.decorators.priority_decorator" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "33"];
    "sympy.core.decorators.priority_decorator" -> "functools.wraps" [color = "#b2b2b2ff", label = "33"];
    "sympy.matrices.expressions.slice.<module>" -> "sympy.matrices.expressions.slice.MatrixSlice" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.slice.<module>" -> "sympy.matrices.expressions.matexpr.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.expressions.slice.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.fromnumeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.ComplexFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.FloatFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.IntegerFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.LongComplexFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.DatetimeFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.LongFloatFormat" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.arrayprint.<module>" -> "numpy.core.arrayprint.TimedeltaFormat" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.delta_functions.<module>" -> "sympy.functions.special.delta_functions.Heaviside" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.delta_functions.<module>" -> "sympy.functions.special.delta_functions.DiracDelta" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.delta_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "2"];
    "sympy.functions.special.error_functions.Si" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "2"];
    "sympy.functions.special.error_functions.Si" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "1"];
    "sympy.functions.special.error_functions.Si" -> "sympy.core.expr.Pi.__neg__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.polar_lift" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.conjugate" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.re" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.sign" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.im" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.principal_branch" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.periodic_argument" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.trigonometric.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.Abs" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.miscellaneous.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.arg" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.transpose" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.complexes.adjoint" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.functions.elementary.piecewise.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.complexes.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "11"];
    "sympy.core.power.integer_nthroot" -> "sympy.mpmath.libmp.libintmath.sqrtrem_python" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.expr.Float.as_real_imag" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "4"];
    "sympy.core.expr.Float.as_real_imag" -> "sympy.core.numbers.Float.__eq__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.ring.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.ring.<module>" -> "sympy.polys.domains.ring.Ring" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.add_newdocs.<module>" [color = "#acb1b2ff", label = "1"];
    "numpy.<module>" -> "numpy.ctypeslib.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy._import_tools.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.VisibleDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.fft.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.__config__.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy._NoValue" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.ModuleDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.version.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.<module>" -> "numpy.ma.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.<module>" -> "warnings.filterwarnings" [color = "#b2b2b2ff", label = "3"];
    "numpy.<module>" -> "numpy.random.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.mpelements.<module>" -> "sympy.polys.domains.mpelements.RealElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.mpelements.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "3"];
    "sympy.polys.domains.mpelements.<module>" -> "sympy.polys.domains.mpelements.MPContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.mpelements.<module>" -> "sympy.polys.domains.mpelements.ComplexElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Or.__hash__" -> "sympy.core.basic.Or._hashable_content" [color = "#b2b2b2ff", label = "70"];
    "sympy.printing.pretty.pretty_symbology.<module>" -> "sympy.printing.pretty.pretty_symbology.<genexpr>" [color = "#b2b2b2ff", label = "50"];
    "sympy.printing.pretty.pretty_symbology.<module>" -> "sympy.core.compatibility.u" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty_symbology.<module>" -> "sympy.core.alphabets.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty_symbology.<module>" -> "sympy.printing.pretty.pretty_symbology.U" [color = "#b2b2b2ff", label = "54"];
    "sympy.printing.pretty.pretty_symbology.<module>" -> "sympy.printing.pretty.pretty_symbology.<lambda>" [color = "#b1b2b2ff", label = "141"];
    "sympy.integrals.transforms.InverseLaplaceTransform" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.geometry.<module>" -> "sympy.geometry.curve.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.point3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.line.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.plane.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.ellipse.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.point.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.<module>" -> "sympy.geometry.line3d.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.__new__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "10"];
    "sympy.core.power.__new__" -> "sympy.core.function._coeff_isneg" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.__new__" -> "sympy.core.power.Pow._eval_power" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.__new__" -> "sympy.core.expr.Pi._eval_power" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.power.__new__" -> "sympy.core.numbers.NaN.__eq__" [color = "#b2b2b2ff", label = "10"];
    "sympy.core.power.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.power.__new__" -> "sympy.core.numbers.Integer._eval_power" [color = "#b1b2b2ff", label = "2"];
    "RRtoolbox.lib.directory.repr2str" -> "RRtoolbox.lib.directory.joinPath" [color = "#b2b2b2ff", label = "7"];
    "RRtoolbox.lib.directory.repr2str" -> "RRtoolbox.lib.directory.repr2str" [color = "#b2b2b2ff", label = "35"];
    "sympy.integrals.heurisch.<module>" -> "sympy.polys.solvers.<module>" [color = "#b2b2b2ff", label = "1"];
    "stat.S_ISDIR" -> "stat.S_IFMT" [color = "#b2b2b2ff", label = "2"];
    "RRtoolbox.lib.directory.directory.update_left" -> "RRtoolbox.lib.directory.__new__" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.functions.elliptic.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "9"];
    "sympy.mpmath.functions.elliptic.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "6"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.slice.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.blockmatrix.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.hadamard.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.adjoint.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.funcmatrix.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.<module>" -> "sympy.matrices.expressions.diagonal.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.<module>" -> "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.<module>" -> "sympy.printing.pretty.pretty.<module>" [color = "#b1b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner._WritelnDecorator" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner.TextTestResult" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.signals.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.runner.<module>" -> "unittest.runner.TextTestRunner" [color = "#b2b2b2ff", label = "1"];
    "threading._RLock.release" -> "threading._RLock._note" [color = "#b0b2b2ff", label = "537"];
    "sympy.core.facts.Prover.rules_alpha" -> "sympy.core.facts.Prover.split_alpha_beta" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.expressiondomain.Expression.__init__" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "2"];
    "sympy.polys.rationaltools.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.add.Add" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "4"];
    "sympy.core.symbol.__new_stage2__" -> "sympy.core.assumptions.StdFactKB.__init__" [color = "#b0b2b2ff", label = "14"];
    "sympy.core.symbol.__new_stage2__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.basic.<module>" -> "sympy.core.basic.Atom" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.decorators.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.basic.Basic" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.basic.preorder_traversal" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.assumptions.<module>" [color = "#99a8b2ff", label = "1"];
    "sympy.core.basic.<module>" -> "sympy.core.singleton.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.__new__" -> "sympy.core.symbol._sanitize" [color = "#b2b2b2ff", label = "15"];
    "sympy.core.symbol.__new__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "2"];
    "sympy.core.symbol.__new__" -> "sympy.core.symbol.__new_stage2__" [color = "#b2b2b2ff", label = "13"];
    "sympy.core.numbers.Infinity.__hash__" -> "sympy.core.basic.Infinity.__hash__" [color = "#b1b2b2ff", label = "215"];
    "sympy.core.numbers.Infinity.__hash__" -> "sympy.core.numbers.Infinity.__hash__" [color = "#b1b2b2ff", label = "215"];
    "sympy.core.numbers.Half._eval_evalf" -> "sympy.core.numbers.Half._as_mpf_val" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Half._eval_evalf" -> "sympy.core.numbers._new" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.Set" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "2"];
    "sympy.sets.sets.Set" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.process.<module>" -> "multiprocessing.process._MainProcess" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "posixpath.abspath" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process.AuthenticationString" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process.Process" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.process.<module>" -> "multiprocessing.process._MainProcess.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic._make_find_query" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "2"];
    "sre_parse.isname" -> "sre_parse.isdigit" [color = "#b2b2b2ff", label = "2"];
    "sre_parse.isname" -> "sre_parse.isident" [color = "#b1b2b2ff", label = "173"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.polynomial.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.chebyshev.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.laguerre.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.legendre.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.hermite.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.polynomial.hermite_e.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.numeric.errstate.__enter__" -> "numpy.core.numeric.seterr" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.<module>" -> "sympy.logic.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.symbol.<module>" -> "sympy.core.symbol.Wild" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "3"];
    "sympy.core.symbol.<module>" -> "sympy.core.symbol.Dummy" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.symbol.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.core.symbol.<module>" -> "sympy.core.symbol.Symbol" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.<module>" -> "sympy.solvers.ode.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.<module>" -> "sympy.solvers.recurr.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.<module>" -> "sympy.solvers.pde.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.solvers.<module>" -> "sympy.solvers.solvers.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.make_mpc" -> "sympy.polys.domains.mpelements.ComplexElement._set_mpc" [color = "#b2b2b2ff", label = "2"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.ZipNumpyUnpickler" [color = "#b2b2b2ff", label = "1"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.ZNDArrayWrapper" [color = "#b2b2b2ff", label = "1"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.NDArrayWrapper" [color = "#b2b2b2ff", label = "1"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.hex_str" [color = "#b2b2b2ff", label = "1"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.NumpyUnpickler" [color = "#b2b2b2ff", label = "1"];
    "joblib.numpy_pickle.<module>" -> "joblib.numpy_pickle.NumpyPickler" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core.numeric.errstate.__enter__" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core.numeric.errstate.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg._determine_error_states" -> "numpy.core.numeric.errstate.__exit__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.preorder_traversal._preorder_traversal" -> "sympy.core.basic.Predicate.args" [color = "#b2b2b2ff", label = "2"];
    "multiprocessing.forking.<module>" -> "multiprocessing.forking.ForkingPickler" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.forking.<module>" -> "multiprocessing.forking.Popen" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.forking.<module>" -> "multiprocessing.forking.register" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.assumptions.StdFactKB.__init__" -> "sympy.core.facts.StdFactKB.deduce_all_facts" [color = "#b0b2b2ff", label = "85"];
    "sympy.functions.elementary.miscellaneous.sqrt" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "8"];
    "sympy.strategies.branch.<module>" -> "sympy.strategies.branch.tools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.branch.<module>" -> "sympy.strategies.branch.traverse.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Float.__lt__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "4"];
    "sympy.core.numbers.Float.__lt__" -> "sympy.core.evalf.Zero.evalf" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Float.__lt__" -> "sympy.mpmath.libmp.libmpf.mpf_lt" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Float.__lt__" -> "sympy.core.numbers.Zero._as_mpf_val" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.elementary.hyperbolic.atanh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions.make_property" -> "sympy.core.assumptions.as_property" [color = "#afb2b2ff", label = "31"];
    "sympy.core.mul.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.mul.<module>" -> "sympy.core.mul.Mul" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.<module>" -> "sympy.core.mul.NC_Marker" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.<module>" -> "functools.cmp_to_key" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.<module>" -> "sympy.core.numbers.<module>" [color = "#a7b0b2ff", label = "1"];
    "sympy.core.mul.<module>" -> "sympy.core.operations.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.defchararray.<module>" -> "numpy.core.defchararray.chararray" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_cmp" -> "sympy.mpmath.libmp.libmpf.mpf_sign" [color = "#b2b2b2ff", label = "15"];
    "stat.S_ISREG" -> "stat.S_IFMT" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.memmap.<module>" -> "numpy.core.memmap.memmap" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.jscode.<module>" -> "sympy.printing.jscode.JavascriptCodePrinter" [color = "#b2b2b2ff", label = "1"];
    "numpy.testing.nosetester.NoseTester.__init__" -> "posixpath.dirname" [color = "#b2b2b2ff", label = "19"];
    "numpy.lib.utils._Deprecate.__call__" -> "numpy.lib.utils._set_function_name" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.symbol._sanitize" -> "sympy.core.symbol.<lambda>" [color = "#b2b2b2ff", label = "15"];
    "sympy.core.symbol._sanitize" -> "sympy.core.logic.fuzzy_bool" [color = "#b2b2b2ff", label = "15"];
    "pickle.Unpickler.load_global" -> "pickle.Unpickler.find_class" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.<module>" -> "numpy.linalg.linalg.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.<module>" -> "numpy.linalg.info.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.integrals.transforms.InverseSineTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.InverseSineTransform" -> "sympy.functions.elementary.miscellaneous.sqrt" [color = "#b1b2b2ff", label = "2"];
    "sympy.mpmath.functions.expintegrals.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "16"];
    "sympy.mpmath.functions.expintegrals.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "11"];
    "sympy.polys.domains.gmpyfinitefield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyfinitefield.<module>" -> "sympy.polys.domains.gmpyintegerring.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyfinitefield.<module>" -> "sympy.polys.domains.gmpyfinitefield.GMPYFiniteField" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv._set_prec" -> "sympy.mpmath.libmp.libmpf.prec_to_dps" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.<module>" -> "sympy.mpmath.ctx_mp_python.__float__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.evalf.<module>" -> "sympy.core.containers.<module>" [color = "#a6b0b2ff", label = "1"];
    "sympy.core.evalf.<module>" -> "sympy.core.evalf.EvalfMixin" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.<module>" -> "sympy.mpmath.<module>" [color = "#a7b0b2ff", label = "1"];
    "sympy.core.evalf.<module>" -> "sympy.core.evalf.PrecisionExhausted" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.<module>" -> "sympy.mpmath.ctx_mp_python.__neg__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.NegativeOne.__mul__" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "2"];
    "sympy.polys.domains.complexfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.complexfield.<module>" -> "sympy.polys.domains.complexfield.ComplexField" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.octave.<module>" -> "sympy.printing.octave.OctaveCodePrinter" [color = "#b2b2b2ff", label = "1"];
    "StringIO.<module>" -> "StringIO.StringIO" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_binput" [color = "#b2b2b2ff", label = "68"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_empty_list" [color = "#b2b2b2ff", label = "7"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_proto" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_global" [color = "#b2b2b2ff", label = "1"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_newobj" [color = "#b2b2b2ff", label = "8"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_false" [color = "#b2b2b2ff", label = "2"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_append" [color = "#b2b2b2ff", label = "3"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_binget" [color = "#b2b2b2ff", label = "52"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_true" [color = "#b2b2b2ff", label = "6"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_empty_dictionary" [color = "#b2b2b2ff", label = "9"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_mark" [color = "#b2b2b2ff", label = "13"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_short_binstring" [color = "#b2b2b2ff", label = "35"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_build" [color = "#b2b2b2ff", label = "8"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_setitems" [color = "#b2b2b2ff", label = "9"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_appends" [color = "#b2b2b2ff", label = "4"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_tuple1" [color = "#b2b2b2ff", label = "8"];
    "pickle.Unpickler.load" -> "pickle.Unpickler.load_stop" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.AlgebraicNumber" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.NegativeOne" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "14"];
    "sympy.core.numbers.<module>" -> "decimal.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.One" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Number" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Exp1" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.singleton.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.EulerGamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "fractions.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Infinity" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.GoldenRatio" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Float" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.NumberSymbol" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "8"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.NegativeInfinity" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.ComplexInfinity" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.ImaginaryUnit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.power.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.IntegerConstant" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Rational" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Pi" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Integer" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.RationalConstant" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Catalan" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.NaN" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Half" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.numbers.Zero" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "14"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.gamma_functions.polygamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.gamma_functions.loggamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.error_functions.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.gamma_functions.gamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.gamma_functions.lowergamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.zeta_functions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.functions.special.gamma_functions.uppergamma" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.gamma_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "5"];
    "sympy.functions.special.tensor_functions.<module>" -> "sympy.functions.special.tensor_functions.KroneckerDelta" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.tensor_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "2"];
    "sympy.functions.special.tensor_functions.<module>" -> "sympy.functions.special.tensor_functions.LeviCivita" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.NaN" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.NaN" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "4"];
    "numpy.lib.type_check.<module>" -> "numpy.lib.ufunclike.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.type_check.<module>" -> "numpy.core.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.init_builtins" -> "sympy.mpmath.ctx_mp_python.make_mpf" [color = "#b2b2b2ff", label = "5"];
    "sympy.mpmath.ctx_mp.init_builtins" -> "sympy.mpmath.ctx_mp_python.__new__" [color = "#b2b2b2ff", label = "14"];
    "sympy.mpmath.ctx_mp.init_builtins" -> "sympy.mpmath.ctx_mp_python._wrap_libmp_function" [color = "#b2b2b2ff", label = "45"];
    "sympy.mpmath.ctx_mp.init_builtins" -> "sympy.mpmath.ctx_mp_python.make_mpc" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.LooseVersion" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.Version" [color = "#b2b2b2ff", label = "1"];
    "distutils.version.<module>" -> "distutils.version.StrictVersion" [color = "#b2b2b2ff", label = "1"];
    "functools.cmp_to_key" -> "functools.K" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.containers.Tuple.__iter__" -> "sympy.core.basic.Tuple.args" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.cse_main.<module>" -> "sympy.simplify.cse_opts.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.from_rational" -> "sympy.mpmath.libmp.libmpf.mpf_div" [color = "#b2b2b2ff", label = "35"];
    "sympy.mpmath.libmp.libmpf.from_rational" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "70"];
    "RRtoolbox.lib.directory.directory.__str__" -> "RRtoolbox.lib.directory.repr2str" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "locale.getpreferredencoding" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.HTMLRepr" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.TextDoc" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc._OldStyleClass" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.HTMLDoc" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.Helper" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.ErrorDuringImport" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.TextRepr" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.Doc" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.ModuleScanner" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.Helper.__init__" [color = "#b2b2b2ff", label = "1"];
    "pydoc.<module>" -> "pydoc.Scanner" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.<module>" -> "unittest.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.<module>" -> "StringIO.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.result.<module>" -> "unittest.result.TestResult" [color = "#b2b2b2ff", label = "1"];
    "genericpath.isfile" -> "stat.S_ISREG" [color = "#b2b2b2ff", label = "1"];
    "sre_parse.SubPattern.getwidth" -> "sre_parse.SubPattern.getwidth" [color = "#aeb2b2ff", label = "377"];
    "numpy.core.numerictypes.bitname" -> "numpy.core.numerictypes.english_upper" [color = "#b2b2b2ff", label = "26"];
    "numpy.core.numerictypes.bitname" -> "numpy.core.numerictypes._evalname" [color = "#b2b2b2ff", label = "21"];
    "sympy.polys.polyfuncs.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "4"];
    "sympy.polys.polyfuncs.<module>" -> "sympy.polys.specialpolys.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.order.Order" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.operations.LatticeOp" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib.index_tricks.RClass.__init__" -> "numpy.lib.index_tricks.RClass.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.acos" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.acot" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.evalf.<lambda>" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "1"];
    "json.decoder._floatconstants" -> "encodings.hex_codec.hex_decode" [color = "#b2b2b2ff", label = "1"];
    "json.decoder._floatconstants" -> "encodings.search_function" [color = "#b2b2b2ff", label = "1"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__iter__" [color = "#b2b2b2ff", label = "92"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__init__" [color = "#b2b2b2ff", label = "30"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.add" [color = "#b2b2b2ff", label = "34"];
    "abc.__subclasscheck__" -> "_weakrefset.WeakSet.__contains__" [color = "#b2b2b2ff", label = "38"];
    "abc.__subclasscheck__" -> "abc.__subclasscheck__" [color = "#b1b2b2ff", label = "20"];
    "sympy.matrices.sparse.<module>" -> "sympy.matrices.sparse.SparseMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.sparse.<module>" -> "sympy.matrices.sparse.MutableSparseMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.tensor.indexed.<module>" -> "sympy.tensor.indexed.Indexed" [color = "#b2b2b2ff", label = "1"];
    "sympy.tensor.indexed.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "3"];
    "sympy.tensor.indexed.<module>" -> "sympy.tensor.indexed.IndexedBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.tensor.indexed.<module>" -> "sympy.tensor.indexed.IndexException" [color = "#b2b2b2ff", label = "1"];
    "sympy.tensor.indexed.<module>" -> "sympy.tensor.indexed.Idx" [color = "#b2b2b2ff", label = "1"];
    "threading.RLock" -> "threading._RLock.__init__" [color = "#b2b2b2ff", label = "77"];
    "sympy.utilities.decorator.<module>" -> "sympy.utilities.decorator.no_attrs_in_subclass" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Pow.__rmul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.polys.domains.expressiondomain.ExpressionDomain" -> "sympy.polys.domains.expressiondomain.Expression" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.expressiondomain.ExpressionDomain" -> "sympy.polys.domains.expressiondomain.Expression.__init__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.mul.Mul" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "3"];
    "RRtoolbox.lib.session.readSession" -> "pickle.load" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.tableform.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.mathematica.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.fcode.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.latex.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.gtk.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.python.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.mathml.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.jscode.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.pretty.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.ccode.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.preview.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.octave.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.<module>" -> "sympy.printing.tree.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_div" -> "sympy.mpmath.libmp.libmpf._normalize1" [color = "#b2b2b2ff", label = "33"];
    "sympy.mpmath.libmp.libmpf.mpf_div" -> "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#b1b2b2ff", label = "12"];
    "sympy.matrices.dense.<module>" -> "sympy.matrices.dense.DenseMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.dense.<module>" -> "sympy.matrices.dense.MutableDenseMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.dense.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.dense.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.entity.<module>" -> "sympy.geometry.entity.GeometryEntity" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.entity.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.<module>" -> "sympy.interactive.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.core.evalf._create_evalf_table" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.release.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.plotting.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.geometry.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.__sympy_debug" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.assumptions.<module>" [color = "#a0adb2ff", label = "1"];
    "sympy.<module>" -> "sympy.core.<module>" [color = "#7774b2ff", label = "1"];
    "sympy.<module>" -> "sympy.integrals.<module>" [color = "#abb1b2ff", label = "1"];
    "sympy.<module>" -> "sympy.tensor.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.parsing.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.calculus.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.concrete.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.<module>" -> "sympy.polys.<module>" [color = "#96a5b2ff", label = "1"];
    "numpy.ma.core.get_object_signature" -> "numpy.compat._inspect.formatargspec" [color = "#b2b2b2ff", label = "31"];
    "numpy.ma.core.get_object_signature" -> "numpy.compat._inspect.getargspec" [color = "#b2b2b2ff", label = "40"];
    "RRtoolbox.lib.directory.directory.__sub__" -> "RRtoolbox.lib.directory.directory.update_left" [color = "#b2b2b2ff", label = "3"];
    "unittest.case.TestCase" -> "unittest.case._deprecate" [color = "#b2b2b2ff", label = "7"];
    "sympy.assumptions.assume.Predicate.sort_key" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "2"];
    "sympy.assumptions.assume.Predicate.sort_key" -> "sympy.core.basic.class_key" [color = "#b2b2b2ff", label = "2"];
    "sre_compile._simple" -> "sre_parse.SubPattern.getwidth" [color = "#aeb2b2ff", label = "204"];
    "sre_compile._simple" -> "sre_parse.SubPattern.__getitem__" [color = "#b1b2b2ff", label = "174"];
    "sympy.geometry.exceptions.<module>" -> "sympy.geometry.exceptions.GeometryError" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.matrices.matrices.<module>" -> "sympy.mpmath.matrices.matrices._matrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.matrices.matrices.<module>" -> "sympy.mpmath.matrices.matrices.MatrixMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.factorials.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.functions.factorials.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.functions.rszeta.<module>" -> "sympy.mpmath.functions.rszeta.RSCache" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.rszeta.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.characteristiczero.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.characteristiczero.<module>" -> "sympy.polys.domains.characteristiczero.CharacteristicZero" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.stringpict.<module>" -> "sympy.printing.pretty.stringpict.stringPict" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.stringpict.<module>" -> "sympy.printing.pretty.stringpict.prettyForm" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.stringpict.<module>" -> "sympy.printing.pretty.pretty_symbology.<module>" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes._check_size" [color = "#b2b2b2ff", label = "14"];
    "ctypes.<module>" -> "ctypes.c_float" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.PyDLL.__init__" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes._reset_cache" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ushort" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.py_object" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ubyte" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.PyDLL" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_void_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_double" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.PYFUNCTYPE" [color = "#b2b2b2ff", label = "3"];
    "ctypes.<module>" -> "ctypes.c_long" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_ulong" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_wchar" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_char_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_byte" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_uint" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_char" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_bool" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_longdouble" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_int" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.c_wchar_p" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.LibraryLoader" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.LibraryLoader.__init__" [color = "#b2b2b2ff", label = "2"];
    "ctypes.<module>" -> "ctypes.c_short" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.CDLL" [color = "#b2b2b2ff", label = "1"];
    "ctypes.<module>" -> "ctypes.CFUNCTYPE" [color = "#b2b2b2ff", label = "2"];
    "ctypes.<module>" -> "ctypes._endian.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.coreerrors.<module>" -> "sympy.core.coreerrors.NonCommutativeExpression" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.coreerrors.<module>" -> "sympy.core.coreerrors.BaseCoreError" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.hypergeometric.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.functions.hypergeometric.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "25"];
    "sympy.core.decorators.Mul.binary_op_wrapper" -> "sympy.core.expr.Mul.__mul__" [color = "#b2b2b2ff", label = "1"];
    "sympy.logic.boolalg.Predicate.__and__" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "12"];
    "sympy.core.multidimensional.vectorize.__call__" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.multidimensional.vectorize.__call__" -> "functools.wraps" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.function.Derivative" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.Derivative" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.latex.<module>" -> "sympy.printing.latex.LatexPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.backend.<module>" -> "sympy.mpmath.libmp.six.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.backend.<module>" -> "UserDict._Environ.__contains__" [color = "#b2b2b2ff", label = "3"];
    "sympy.functions.elementary.<module>" -> "sympy.functions.elementary.complexes.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.functions.elementary.<module>" -> "sympy.functions.elementary.integers.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.__init__" -> "sympy.core.compatibility.as_int" [color = "#b2b2b2ff", label = "103"];
    "sympy.core.function.__init__" -> "sympy.core.compatibility.ordered" [color = "#aeb2b2ff", label = "40"];
    "sympy.core.function.__init__" -> "sympy.core.assumptions.__init__" [color = "#9ba9b2ff", label = "182"];
    "sympy.core.function.__init__" -> "inspect.getargspec" [color = "#b0b2b2ff", label = "182"];
    "sympy.core.function.__init__" -> "sympy.core.compatibility.is_sequence" [color = "#b1b2b2ff", label = "182"];
    "sre_parse.SubPattern.__getitem__" -> "sre_parse.SubPattern.__init__" [color = "#b1b2b2ff", label = "204"];
    "sympy.matrices.expressions.transpose.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.transpose.<module>" -> "sympy.matrices.expressions.transpose.Transpose" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "numpy.lib.utils.<module>" -> "numpy.lib.utils._Deprecate" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.utils.<module>" -> "numpy.lib.utils.SafeEval" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyroots.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyroots.<module>" -> "sympy.polys.polyquinticconst.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyroots.<module>" -> "sympy.simplify.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.matrices.expressions.inverse.<module>" -> "sympy.matrices.expressions.inverse.Inverse" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.inverse.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "pydoc.HTMLDoc" -> "pydoc.HTMLRepr.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Equivalent.__hash__" -> "sympy.core.basic.Equivalent._hashable_content" [color = "#b2b2b2ff", label = "14"];
    "sympy.mpmath.ctx_iv.convert_mpf_" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "8"];
    "sympy.functions.elementary.trigonometric.tan" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpi.mpi_from_str" -> "sympy.mpmath.libmp.libmpf.from_str" [color = "#b2b2b2ff", label = "4"];
    "joblib.my_exceptions._mk_common_exceptions" -> "joblib.my_exceptions._mk_exception" [color = "#b2b2b2ff", label = "48"];
    "sympy.core.singleton.__init__" -> "sympy.sets.fancysets.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.singleton.__init__" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "23"];
    "sympy.core.singleton.__init__" -> "sympy.core.numbers.__new__" [color = "#b1b2b2ff", label = "13"];
    "sympy.core.singleton.__init__" -> "sympy.functions.elementary.miscellaneous.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.singleton.__init__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.singleton.__init__" -> "sympy.core.core.SingletonRegistry.__setattr__" [color = "#b2b2b2ff", label = "23"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python._constant" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python.PythonMPContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python._mpf" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python.mpnumeric" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python.binary_op" [color = "#b2b2b2ff", label = "7"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "sympy.mpmath.ctx_mp_python._mpc" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "2"];
    "sympy.concrete.expr_with_intlimits.<module>" -> "sympy.concrete.expr_with_limits.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.expr_with_intlimits.<module>" -> "sympy.concrete.expr_with_intlimits.ExprWithIntLimits" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.expr_with_intlimits.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.concrete.expr_with_intlimits.<module>" -> "sympy.concrete.expr_with_intlimits.ReorderError" [color = "#b2b2b2ff", label = "1"];
    "joblib._memory_helpers.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sre_compile.compile" -> "sre_parse.parse" [color = "#a2aeb2ff", label = "57"];
    "sre_compile.compile" -> "sre_compile._code" [color = "#abb1b2ff", label = "57"];
    "sre_compile.compile" -> "sre_compile.isstring" [color = "#b2b2b2ff", label = "57"];
    "numpy.core.numerictypes.english_capitalize" -> "numpy.core.numerictypes.english_upper" [color = "#b2b2b2ff", label = "14"];
    "sympy.mpmath.ctx_iv._mpq" -> "sympy.mpmath.libmp.libmpf.from_rational" [color = "#b2b2b2ff", label = "34"];
    "sympy.mpmath.ctx_iv._mpq" -> "sympy.mpmath.ctx_iv.make_mpf" [color = "#b2b2b2ff", label = "17"];
    "sympy.mpmath.ctx_iv._mpq" -> "sympy.mpmath.ctx_iv.<lambda>" [color = "#b2b2b2ff", label = "34"];
    "sympy.logic.boolalg.Predicate.__invert__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "13"];
    "sympy.core.numbers.One.__divmod__" -> "sympy.core.containers.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.pretty.pretty_symbology.<lambda>" -> "sympy.printing.pretty.pretty_symbology.U" [color = "#b1b2b2ff", label = "189"];
    "sympy.assumptions.assume.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "43"];
    "sympy.geometry.line3d.<module>" -> "sympy.geometry.line3d.LinearEntity3D" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line3d.<module>" -> "sympy.geometry.line3d.Line3D" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line3d.<module>" -> "sympy.geometry.line3d.Segment3D" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line3d.<module>" -> "sympy.geometry.line3d.Ray3D" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.line3d.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "4"];
    "sympy.sets.sets.FiniteSet.__contains__" -> "sympy.logic.boolalg.BooleanTrue.__nonzero__" [color = "#b2b2b2ff", label = "4"];
    "sympy.sets.sets.FiniteSet.__contains__" -> "sympy.sets.sets.FiniteSet.contains" [color = "#b2b2b2ff", label = "4"];
    "locale.getpreferredencoding" -> "locale.setlocale" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.ctx_iv.convert" -> "sympy.mpmath.ctx_iv.convert_mpf_" [color = "#b2b2b2ff", label = "8"];
    "sympy.mpmath.ctx_iv.convert" -> "sympy.mpmath.libmp.libmpi.mpi_from_str" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_iv.convert" -> "sympy.mpmath.libmp.libmpf.mpf_le" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.ctx_iv.convert" -> "sympy.mpmath.ctx_iv.make_mpf" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.ctx_iv.convert" -> "sympy.mpmath.ctx_iv.<lambda>" [color = "#b2b2b2ff", label = "10"];
    "sympy.core.numbers.igcd" -> "sympy.core.compatibility.as_int" [color = "#b2b2b2ff", label = "22"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.catalan" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.utilities.memoization.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers._MultisetHistogram" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.harmonic" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.bell" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.elementary.<module>" [color = "#adb2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.euler" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "5"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.bernoulli" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.lucas" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "7"];
    "sympy.functions.combinatorial.numbers.<module>" -> "sympy.functions.combinatorial.numbers.fibonacci" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Half.__hash__" -> "sympy.core.numbers.Half._hashable_content" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.Pow._eval_power" -> "sympy.core.power.Pow.as_base_exp" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.Pow._eval_power" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "2"];
    "sympy.core.power.Pow._eval_power" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.acosh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.fresnels" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.special.error_functions.fresnels" -> "sympy.core.numbers.__neg__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.Application" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.matrices.dense.DenseMatrix" -> "sympy.core.decorators.call_highest_priority" [color = "#b2b2b2ff", label = "10"];
    "sympy.matrices.dense.DenseMatrix" -> "sympy.core.decorators.priority_decorator" [color = "#b2b2b2ff", label = "10"];
    "sympy.polys.domains.pythonintegerring.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonintegerring.<module>" -> "sympy.polys.domains.pythonintegerring.PythonIntegerRing" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.ZeroMatrix" -> "sympy.core.decorators.call_highest_priority" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.ZeroMatrix" -> "sympy.matrices.expressions.matexpr.deco" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.ZeroMatrix" -> "sympy.core.decorators.priority_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.matexpr.ZeroMatrix" -> "sympy.matrices.expressions.matexpr._sympifyit" [color = "#b2b2b2ff", label = "1"];
    "contextlib.contextmanager" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "4"];
    "contextlib.contextmanager" -> "functools.wraps" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.math2.<module>" -> "sympy.mpmath.math2._mathfun_real" [color = "#b2b2b2ff", label = "15"];
    "sympy.mpmath.math2.<module>" -> "sympy.mpmath.math2._mathfun" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.math2.<module>" -> "sympy.mpmath.math2._mathfun_n" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.domainelement.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.domainelement.<module>" -> "sympy.polys.domains.domainelement.DomainElement" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.ask.register_handler" -> "sympy.assumptions.assume.Predicate.add_handler" [color = "#b2b2b2ff", label = "37"];
    "RRtoolbox.lib.directory.getSplitted" -> "RRtoolbox.lib.directory.getSep" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.ProductSet" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.ProductSet" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.__new__" -> "sympy.core.numbers.Infinity.__neg__" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.fancysets.__new__" -> "sympy.sets.sets.__new__" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.cache.wrapper" -> "sympy.core.compatibility.wrapper" [color = "#a3aeb2ff", label = "323"];
    "numpy.compat._inspect.formatargspec" -> "numpy.compat._inspect.strseq" [color = "#b2b2b2ff", label = "75"];
    "numpy.compat._inspect.formatargspec" -> "numpy.compat._inspect.<lambda>" [color = "#b2b2b2ff", label = "48"];
    "sympy.sets.contains.<module>" -> "sympy.sets.contains.Contains" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.contains.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "multiprocessing.synchronize.Semaphore.__init__" -> "multiprocessing.util.debug" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.Semaphore.__init__" -> "multiprocessing.synchronize.Semaphore.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.Semaphore.__init__" -> "multiprocessing.synchronize.Semaphore._make_methods" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.Semaphore.__init__" -> "multiprocessing.util.register_after_fork" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.<module>" -> "encodings.hex_codec.IncrementalDecoder" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.<module>" -> "encodings.hex_codec.Codec" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.<module>" -> "encodings.hex_codec.StreamWriter" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.<module>" -> "encodings.hex_codec.IncrementalEncoder" [color = "#b2b2b2ff", label = "1"];
    "encodings.hex_codec.<module>" -> "encodings.hex_codec.StreamReader" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonfinitefield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonfinitefield.<module>" -> "sympy.polys.domains.pythonintegerring.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.pythonfinitefield.<module>" -> "sympy.polys.domains.pythonfinitefield.PythonFiniteField" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Float.__hash__" -> "sympy.core.numbers.Float._hashable_content" [color = "#b2b2b2ff", label = "2"];
    "sympy.tensor.index_methods.<module>" -> "sympy.tensor.index_methods.IndexConformanceException" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.linalg.linalg._determine_error_states" [color = "#b2b2b2ff", label = "1"];
    "numpy.linalg.linalg.<module>" -> "numpy.linalg.linalg.LinAlgError" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.objectGetter" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.notCreatable" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.cache" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.memoizedDict" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.resourceManager" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.retriever" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "joblib.<module>" [color = "#adb2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "4"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache._memoizedDict_old" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.Memoizer" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.notCallable" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.NotMemorizedFunc" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.MemorizedFunc" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.DynamicMemoizedFunc" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.Memoizer.__init__" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.<module>" -> "RRtoolbox.lib.cache.Memory" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.<genexpr>" -> "sympy.core.sympify._sympify" [color = "#adb2b2ff", label = "296"];
    "sympy.strategies.tools.typed" -> "sympy.strategies.core.switch" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.qfunctions.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.functions.qfunctions.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "numpy.core._internal.<module>" [color = "#b0b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.machar.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "copy_reg.pickle" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.shape_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "os._Environ.__delitem__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "numpy.testing.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.getlimits.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.defchararray.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.records.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.memmap.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "UserDict._Environ.__contains__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "numpy.core.function_base.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.core.<module>" -> "numpy.core.numeric.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "numpy.core.info.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.<module>" -> "os._Environ.__setitem__" [color = "#b2b2b2ff", label = "2"];
    "sre_compile._code" -> "sre_compile._compile_info" [color = "#b0b2b2ff", label = "57"];
    "sre_compile._code" -> "sre_compile._compile" [color = "#a5afb2ff", label = "57"];
    "multiprocessing.<module>" -> "multiprocessing.util.<module>" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.process.<module>" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.AuthenticationError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.BufferTooShort" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.ProcessError" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.<module>" -> "multiprocessing.TimeoutError" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.seterr" -> "numpy.core.numeric.geterr" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.elementary.trigonometric.cot" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "decimal.Context.__init__" -> "decimal.<genexpr>" [color = "#b2b2b2ff", label = "54"];
    "sympy.functions.elementary.trigonometric.cos" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.make_wrapper" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "7"];
    "sympy.integrals.transforms.make_wrapper" -> "functools.wraps" [color = "#b2b2b2ff", label = "7"];
    "sympy.matrices.matrices.<module>" -> "sympy.matrices.matrices.DeferredVector" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.matrices.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.matrices.<module>" -> "sympy.matrices.matrices.MatrixBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.matrices.<module>" -> "sympy.matrices.matrices.NonSquareMatrixError" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.matrices.<module>" -> "sympy.matrices.matrices.MatrixError" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.matrices.<module>" -> "sympy.matrices.matrices.ShapeError" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.zeta.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.zetazeros.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.theta.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.expintegrals.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.factorials.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.rszeta.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.bessel.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.elliptic.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.functions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.orthogonal.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.hypergeometric.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.functions.<module>" -> "sympy.mpmath.functions.qfunctions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.products.<module>" -> "sympy.concrete.expr_with_intlimits.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.products.<module>" -> "sympy.concrete.products.Product" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.products.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.utilities.decorator.depends_on_deco" -> "inspect.isclass" [color = "#b2b2b2ff", label = "13"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.RLock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.SemLock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Event" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Semaphore" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Lock" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.BoundedSemaphore" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.synchronize.Condition" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.synchronize.<module>" -> "multiprocessing.forking.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.preorder_traversal.next" -> "sympy.core.basic.preorder_traversal.__next__" [color = "#b2b2b2ff", label = "4"];
    "sympy.utilities.enumerative.<module>" -> "sympy.utilities.enumerative.MultisetPartitionTraverser" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.enumerative.<module>" -> "sympy.utilities.enumerative.PartComponent" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.Pow.getit" -> "sympy.core.assumptions._ask" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.assumptions.Pow.getit" -> "sympy.core.assumptions.StdFactKB.copy" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.ellipse.Ellipse" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.ellipse.Ellipse" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "numpy.matrixlib.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.matrixlib.<module>" -> "numpy.matrixlib.defmatrix.<module>" [color = "#b2b2b2ff", label = "1"];
    "threading._RLock.__exit__" -> "threading._RLock.release" [color = "#b0b2b2ff", label = "537"];
    "sympy.core.basic.Basic" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "3"];
    "sympy.core.basic.Basic" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.Basic" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "4"];
    "sympy.utilities.decorator.threaded_factory" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "sympy.utilities.decorator.threaded_factory" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "sympy.utilities.decorator.threaded_factory" -> "sympy.matrices.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.from_float" -> "sympy.mpmath.libmp.libmpf.from_man_exp" [color = "#b1b2b2ff", label = "6"];
    "json.scanner.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.polys.polyconfig.configure" -> "os.getenv" [color = "#b2b2b2ff", label = "12"];
    "sympy.mpmath.ctx_mp_python.binary_op" -> "sympy.mpmath.libmp.six.exec_" [color = "#b2b2b2ff", label = "7"];
    "threading._RLock.__init__" -> "threading._RLock.__init__" [color = "#b2b2b2ff", label = "77"];
    "sympy.printing.tableform.<module>" -> "sympy.printing.tableform.TableForm" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.add.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "3"];
    "sympy.core.function.<module>" -> "sympy.core.function.Subs" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.Derivative" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.Function" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.FunctionClass" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.Lambda" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.PoleError" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.Application" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.rules.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.function.<module>" -> "sympy.core.symbol.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "2"];
    "sympy.core.function.<module>" -> "sympy.core.core.__init__" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.AppliedUndef" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.ArgumentIndexError" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.WildFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.UndefinedFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "3"];
    "sympy.mpmath.functions.bessel.<module>" -> "sympy.mpmath.functions.bessel.c_memo" [color = "#b2b2b2ff", label = "4"];
    "sympy.mpmath.functions.bessel.<module>" -> "sympy.mpmath.functions.functions.defun_wrapped" [color = "#b2b2b2ff", label = "10"];
    "sympy.mpmath.functions.bessel.<module>" -> "sympy.mpmath.functions.functions.defun" [color = "#b2b2b2ff", label = "23"];
    "sympy.polys.partfrac.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "3"];
    "sympy.polys.partfrac.<module>" -> "sympy.utilities.decorator.xthreaded" [color = "#afb2b2ff", label = "1"];
    "unittest.signals.<module>" -> "weakref.WeakKeyDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "unittest.signals.<module>" -> "unittest.signals._InterruptHandler" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.__new__" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.__new__" -> "sympy.sets.sets.__new__" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.__new__" -> "sympy.core.containers.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.miscellaneous.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.numeric.errstate.__exit__" -> "numpy.core.numeric.seterr" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.directoryManager.__getattr__" -> "RRtoolbox.lib.config.directoryManager.__getattr__" [color = "#b1b2b2ff", label = "326"];
    "sympy.core.expr.Mul.__mul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.core.basic.preorder_traversal.__next__" -> "sympy.core.basic.preorder_traversal._preorder_traversal" [color = "#b2b2b2ff", label = "4"];
    "sympy.polys.domains.mpelements.RealElement._set_mpf" -> "sympy.mpmath.libmp.libmpf.mpf_abs" [color = "#b2b2b2ff", label = "20"];
    "sympy.polys.domains.mpelements.RealElement._set_mpf" -> "sympy.mpmath.libmp.libmpf.mpf_lt" [color = "#b2b2b2ff", label = "20"];
    "numpy.matrixlib.defmatrix.<module>" -> "numpy.matrixlib.defmatrix.matrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.strategies.util.<module>" -> "sympy.strategies.util.assoc" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.MAxisConcatenator" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction.__init__" [color = "#b2b2b2ff", label = "9"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras._fromnxfunction" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.core.doc_note" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.mr_class.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.extras.<module>" -> "numpy.ma.extras.mr_class" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.Pi.__mul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.fglmtools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.groebnertools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.polytools.GroebnerBasis" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.polytools.Poly" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.polytools.PurePoly" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "57"];
    "sympy.polys.polytools.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "3"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.domains.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.rationaltools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.constructor.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.polys.polyclasses.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.polys.polytools.<module>" -> "sympy.functions.<module>" [color = "#a3aeb2ff", label = "1"];
    "sympy.series.<module>" -> "sympy.series.series.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.<module>" -> "sympy.series.residues.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.<module>" -> "sympy.series.order.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.<module>" -> "sympy.series.limits.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "sympy.external.importtools.import_module" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.compatibility.<module>" -> "sympy.core.compatibility.Iterator" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "sympy.core.compatibility._getenv" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "sympy.external.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "sympy.core.compatibility._HashedSeq" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "subprocess.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.<module>" -> "sympy.core.compatibility.NotIterable" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Formatter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "posixpath.normcase" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Formatter.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.LoggerAdapter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.PlaceHolder" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "weakref.WeakValueDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "atexit.<module>" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Filter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.FileHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.RootLogger" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.RootLogger.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.NullHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.StreamHandler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.BufferingFormatter" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "atexit.register" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.LogRecord" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Filterer" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Logger" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Handler" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "threading.RLock" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Manager.__init__" [color = "#b2b2b2ff", label = "1"];
    "logging.<module>" -> "logging.Manager" [color = "#b2b2b2ff", label = "1"];
    "joblib.pool.<module>" -> "joblib.pool.CustomizablePicklingQueue" [color = "#b2b2b2ff", label = "1"];
    "joblib.pool.<module>" -> "joblib.pool.CustomizablePickler" [color = "#b2b2b2ff", label = "1"];
    "joblib.pool.<module>" -> "joblib.pool.MemmapingPool" [color = "#b2b2b2ff", label = "1"];
    "joblib.pool.<module>" -> "joblib.pool.ArrayMemmapReducer" [color = "#b2b2b2ff", label = "1"];
    "joblib.pool.<module>" -> "joblib.pool.PicklingPool" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.core.__lt__" -> "sympy.core.core.__cmp__" [color = "#b2b2b2ff", label = "3"];
    "sympy.printing.pretty.pretty_symbology.pretty_try_use_unicode" -> "sympy.printing.pretty.pretty_symbology.pretty_use_unicode" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.pygletplot.<module>" -> "sympy.utilities.decorator.doctest_depends_on" [color = "#b2b2b2ff", label = "1"];
    "sympy.plotting.pygletplot.<module>" -> "sympy.utilities.decorator.depends_on_deco" [color = "#b2b2b2ff", label = "1"];
    "pydoc.TextDoc" -> "pydoc.TextRepr.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.decorating_function" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "76"];
    "sympy.core.compatibility.decorating_function" -> "threading.RLock" [color = "#b2b2b2ff", label = "76"];
    "sympy.concrete.expr_with_limits.<module>" -> "sympy.concrete.expr_with_limits.AddWithLimits" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.expr_with_limits.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.concrete.expr_with_limits.<module>" -> "sympy.concrete.expr_with_limits.ExprWithLimits" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.trigonometry.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.trigonometry.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "PartsRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "PowerRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "InverseHyperbolicRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "<module>" [color = "#b0b2b2ff", label = "8"];
    "<module>" -> "Match" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "AddRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "Mismatch" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ConstantRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DontKnowRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DecimalTuple" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "DerivativeRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ConstantTimesRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ArcsinRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "CacheInfo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "AlternativeRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "CyclicPartsRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ExpRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "URule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ReciprocalRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "HeavisideRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "PiecewiseRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "IntegralInfo" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "ArctanRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "RewriteRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TestResults" [color = "#b2b2b2ff", label = "2"];
    "<module>" -> "TrigSubstitutionRule" [color = "#b2b2b2ff", label = "1"];
    "<module>" -> "TrigRule" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.operations.AssocOp" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.utilities.memoization.decorator" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "3"];
    "sympy.utilities.memoization.decorator" -> "functools.wraps" [color = "#b2b2b2ff", label = "3"];
    "sympy.integrals.transforms.CosineTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.CosineTransform" -> "sympy.functions.elementary.miscellaneous.sqrt" [color = "#b1b2b2ff", label = "2"];
    "sympy.polys.domains.realfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.realfield.<module>" -> "sympy.polys.domains.mpelements.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.realfield.<module>" -> "sympy.polys.domains.realfield.RealField" [color = "#b2b2b2ff", label = "1"];
    "collections.namedtuple" -> "<module>" [color = "#b0b2b2ff", label = "27"];
    "collections.namedtuple" -> "collections.<genexpr>" [color = "#adb2b2ff", label = "1253"];
    "sympy.mpmath.rational.__new__" -> "sympy.mpmath.rational.create_reduced" [color = "#b2b2b2ff", label = "28"];
    "multiprocessing.Semaphore" -> "multiprocessing.synchronize.Semaphore.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.Semaphore" -> "multiprocessing.synchronize.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Integer.compare" -> "sympy.core.core.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Integer.compare" -> "sympy.core.core.__gt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Not.__hash__" -> "sympy.core.basic.Predicate.__hash__" [color = "#b2b2b2ff", label = "38"];
    "sympy.core.basic.Not.__hash__" -> "sympy.core.basic.Not._hashable_content" [color = "#b2b2b2ff", label = "38"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.elliptic_integrals.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.delta_functions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.tensor_functions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.beta_functions.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.gamma_functions.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.functions.special.<module>" -> "sympy.functions.special.polynomials.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.from_int" -> "sympy.mpmath.libmp.libmpf.from_man_exp" [color = "#b0b2b2ff", label = "157"];
    "sympy.core.facts.Prover._process_rule" -> "sympy.core.facts.Prover.process_rule" [color = "#b0b2b2ff", label = "52"];
    "sympy.core.facts.Prover._process_rule" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "17"];
    "sympy.core.facts.Prover._process_rule" -> "sympy.core.logic.__new__" [color = "#acb1b2ff", label = "160"];
    "numpy.polynomial.polynomial.<module>" -> "numpy.polynomial.polyutils.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "numpy.polynomial.polynomial.Polynomial" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "numpy.polynomial._polybase.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.polynomial.polynomial.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Integer.sort_key" -> "sympy.core.numbers.class_key" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.One.__rmul__" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "numpy.core.numerictypes._register_types" -> "abc.register" [color = "#b2b2b2ff", label = "3"];
    "sympy.functions.<module>" -> "sympy.functions.special.bessel.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.functions.<module>" -> "sympy.functions.special.<module>" [color = "#abb1b2ff", label = "1"];
    "sympy.functions.<module>" -> "sympy.functions.special.spherical_harmonics.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.<module>" -> "sympy.functions.special.bsplines.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.<module>" -> "sympy.functions.combinatorial.<module>" [color = "#abb1b2ff", label = "1"];
    "re.compile" -> "re._compile" [color = "#9ba9b2ff", label = "60"];
    "sympy.mpmath.libmp.libmpf.<genexpr>" -> "sympy.mpmath.libmp.libmpf.from_man_exp" [color = "#b0b2b2ff", label = "267"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.functions.elementary.exponential.exp_polar" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.functions.elementary.exponential.LambertW" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.functions.elementary.exponential.exp" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.functions.elementary.exponential.log" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.functions.elementary.exponential.ExpBase" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "5"];
    "sympy.polys.euclidtools.<module>" -> "sympy.polys.galoistools.<module>" [color = "#b0b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.CalledProcessError" [color = "#b2b2b2ff", label = "1"];
    "subprocess.<module>" -> "subprocess.Popen" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts._base_fact" -> "sympy.core.logic.Not.arg" [color = "#b2b2b2ff", label = "18"];
    "sympy.core.expr.Pi.__rmul__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "2"];
    "sympy.core.basic.Implies.__hash__" -> "sympy.core.basic.And.__hash__" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.Implies.__hash__" -> "sympy.core.basic.Implies._hashable_content" [color = "#b2b2b2ff", label = "32"];
    "sympy.core.basic.Implies.__hash__" -> "sympy.core.basic.Not.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Implies.__hash__" -> "sympy.core.basic.Or.__hash__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Implies.__hash__" -> "sympy.core.basic.Predicate.__hash__" [color = "#b2b2b2ff", label = "58"];
    "sre_compile._compile_charset" -> "sre_compile._optimize_charset" [color = "#b1b2b2ff", label = "144"];
    "sympy.functions.special.error_functions.erfi" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource._FileOpeners.__init__" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource.DataSource" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource.Repository" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib._datasource.<module>" -> "numpy.lib._datasource._FileOpeners" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.fcode.<module>" -> "sympy.printing.fcode.FCodePrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.<genexpr>" -> "sympy.core.compatibility.preorder_traversal.next" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.<genexpr>" -> "sympy.core.basic.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.<module>" -> "sympy.mpmath.ctx_mp.PrecisionManager" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.<module>" -> "sympy.mpmath.ctx_mp_python.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.<module>" -> "sympy.mpmath.rational.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.<module>" -> "sympy.mpmath.ctx_mp.MPContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.numbers.bell" -> "sympy.utilities.memoization.decorator" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.combinatorial.numbers.bell" -> "sympy.utilities.memoization.recurrence_memo" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.special.error_functions.erfc" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.domains.simpledomain.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.simpledomain.<module>" -> "sympy.polys.domains.simpledomain.SimpleDomain" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.matrices.matrices.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.calculus.quadrature.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.functions.rszeta.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.functions.functions.MPContext.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.functions.functions.FPContext.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_base.__init__" -> "sympy.mpmath.functions.functions.MPIntervalContext.__init__" [color = "#b1b2b2ff", label = "1"];
    "joblib.<module>" -> "joblib.memory.<module>" [color = "#aeb2b2ff", label = "1"];
    "joblib.<module>" -> "joblib.parallel.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.One.__lt__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "24"];
    "sre_compile._compile" -> "sre_parse.SubPattern.__getitem__" [color = "#aeb2b2ff", label = "1039"];
    "sre_compile._compile" -> "sre_compile._compile" [color = "#a3aeb2ff", label = "390"];
    "sre_compile._compile" -> "sre_compile._compile_charset" [color = "#b0b2b2ff", label = "140"];
    "sre_compile._compile" -> "sre_compile._simple" [color = "#b1b2b2ff", label = "204"];
    "sympy.polys.orthopolys.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "6"];
    "sympy.strategies.branch.traverse.<module>" -> "sympy.strategies.branch.core.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.assumptions.assume.Predicate" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.polyutils.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.polys.polyutils.<module>" -> "sympy.polys.polyerrors.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyutils.<module>" -> "sympy.polys.polyutils.PicklableWithSlots" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.polyutils.<module>" -> "sympy.polys.polyoptions.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.legendre" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.jacobi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.hermite" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.chebyshevt" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.OrthogonalPolynomial" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.chebyshevt_root" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.chebyshevu" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.chebyshevu_root" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.assoc_laguerre" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.assoc_legendre" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.polys.orthopolys.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.gegenbauer" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "12"];
    "sympy.functions.special.polynomials.<module>" -> "sympy.functions.special.polynomials.laguerre" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.trace.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.matrices.expressions.trace.<module>" -> "sympy.matrices.expressions.trace.Trace" [color = "#b2b2b2ff", label = "1"];
    "bdb.<module>" -> "bdb.Tdb" [color = "#b2b2b2ff", label = "1"];
    "bdb.<module>" -> "bdb.BdbQuit" [color = "#b2b2b2ff", label = "1"];
    "bdb.<module>" -> "bdb.Bdb" [color = "#b2b2b2ff", label = "1"];
    "bdb.<module>" -> "bdb.Breakpoint" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._AssertRaisesContext" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._ExpectedFailure" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case.TestCase" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "pprint.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case.SkipTest" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "difflib.<module>" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case.FunctionTestCase" [color = "#b2b2b2ff", label = "1"];
    "unittest.case.<module>" -> "unittest.case._UnexpectedSuccess" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.plane.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.geometry.plane.<module>" -> "sympy.geometry.plane.Plane" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.InverseMellinTransform" -> "sympy.core.symbol.__new__" [color = "#b2b2b2ff", label = "2"];
    "sympy.functions.combinatorial.numbers.bernoulli" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "2"];
    "sympy.mpmath.libmp.libhyper.<module>" -> "sympy.mpmath.libmp.gammazeta.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libhyper.<module>" -> "sympy.mpmath.libmp.libhyper.NoConvergence" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Rational.__hash__" -> "sympy.core.numbers.Rational.__hash__" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.Rational.__hash__" -> "sympy.core.basic.Rational.__hash__" [color = "#b2b2b2ff", label = "4"];
    "sympy.functions.special.error_functions.Shi" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "1"];
    "sympy.functions.special.zeta_functions.<module>" -> "sympy.functions.special.zeta_functions.polylog" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.zeta_functions.<module>" -> "sympy.functions.special.zeta_functions.dirichlet_eta" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.zeta_functions.<module>" -> "sympy.functions.special.zeta_functions.lerchphi" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.special.zeta_functions.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "4"];
    "sympy.functions.special.zeta_functions.<module>" -> "sympy.functions.special.zeta_functions.zeta" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.add.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.core.add.<module>" -> "sympy.core.add.Add" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.add.<module>" -> "functools.cmp_to_key" [color = "#b2b2b2ff", label = "1"];
    "numpy._import_tools.<module>" -> "UserDict._Environ.get" [color = "#b2b2b2ff", label = "1"];
    "numpy._import_tools.<module>" -> "numpy._import_tools.PackageLoader" [color = "#b2b2b2ff", label = "1"];
    "numpy._import_tools.<module>" -> "numpy._import_tools.PackageLoaderDebug" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.diagonal.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.matrices.expressions.diagonal.<module>" -> "sympy.matrices.expressions.diagonal.DiagonalOf" [color = "#b2b2b2ff", label = "1"];
    "sympy.matrices.expressions.diagonal.<module>" -> "sympy.matrices.expressions.diagonal.DiagonalMatrix" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.FiniteSet" -> "sympy.core.decorators.deprecated_decorator" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.FiniteSet" -> "sympy.core.decorators.deprecated" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.Rational.as_coeff_Mul" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.One.__rmul__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul._gather" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "7"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.One.__mul__" [color = "#b2b2b2ff", label = "6"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.Pi.__hash__" [color = "#b2b2b2ff", label = "7"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.One.as_coeff_Mul" [color = "#b2b2b2ff", label = "6"];
    "sympy.core.mul._gather" -> "sympy.core.numbers.One.__hash__" [color = "#b2b2b2ff", label = "14"];
    "sympy.matrices.expressions.inverse.Inverse" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "1"];
    "distutils.version.StrictVersion" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.polys.domains.groundtypes.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.polys.domains.finitefield.FiniteField" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.polys.domains.simpledomain.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.polys.domains.modularinteger.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.finitefield.<module>" -> "sympy.polys.domains.field.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.timeutils.__do_timings" -> "os.getenv" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.arrayops.basic.<module>" -> "RRtoolbox.lib.config.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.core.ClassRegistry.__setattr__" -> "sympy.core.core.ClassRegistry.__setattr__" [color = "#b0b2b2ff", label = "345"];
    "sympy.mpmath.libmp.libmpi.<module>" -> "sympy.mpmath.libmp.libmpf.from_float" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.evalf.Half.evalf" -> "sympy.mpmath.libmp.libmpf.dps_to_prec" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Half.evalf" -> "sympy.core.evalf.evalf" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Half.evalf" -> "sympy.core.numbers._new" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Zero.__add__" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.Zero.__add__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "1"];
    "sympy.mpmath.matrices.eigen_symmetric.<module>" -> "sympy.mpmath.matrices.eigen.defun" [color = "#b2b2b2ff", label = "7"];
    "RRtoolbox.tools.lens.<module>" -> "RRtoolbox.lib.arrayops.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Or.__eq__" -> "sympy.core.sympify._sympify" [color = "#adb2b2ff", label = "274"];
    "sympy.polys.densebasic.<module>" -> "sympy.polys.orderings.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.densebasic.<module>" -> "sympy.polys.monomials.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.assumptions.StdFactKB" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.facts.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.compatibility.with_metaclass" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.compatibility.__new__" [color = "#afb2b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.facts.FactRules.__init__" [color = "#99a8b2ff", label = "1"];
    "sympy.core.assumptions.<module>" -> "sympy.core.assumptions.ManagedProperties" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.mpf_norm" -> "sympy.mpmath.libmp.libmpf._normalize" [color = "#b2b2b2ff", label = "4"];
    "sympy.concrete.<module>" -> "sympy.concrete.products.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.<module>" -> "sympy.concrete.summations.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.cache._getenv" -> "os.getenv" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp_python.mpf_convert_arg" -> "sympy.mpmath.libmp.libmpf.from_int" [color = "#b1b2b2ff", label = "6"];
    "sympy.sets.<module>" -> "sympy.sets.fancysets.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.<module>" -> "sympy.sets.sets.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.basic.Not.__eq__" -> "sympy.core.sympify._sympify" [color = "#adb2b2ff", label = "370"];
    "sympy.core.numbers.Integer._eval_evalf" -> "sympy.core.numbers.Integer._as_mpf_val" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Integer._eval_evalf" -> "sympy.core.numbers._new" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.facts.FactKB" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.facts.TautologyDetected" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.logic.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.facts.InconsistentAssumptions" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.facts.Prover" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.facts.<module>" -> "sympy.core.facts.FactRules" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.arrayops.filters.<module>" -> "RRtoolbox.lib.config.directoryManager.__getattr__" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.arrayops.filters.<module>" -> "sympy.<module>" [color = "#b23bb2ff", label = "1"];
    "RRtoolbox.lib.arrayops.filters.<module>" -> "RRtoolbox.lib.cache.<module>" [color = "#acb1b2ff", label = "1"];
    "numbers.Complex" -> "abc.abstractmethod" [color = "#b2b2b2ff", label = "16"];
    "sre_parse.Tokenizer.match" -> "sre_parse.Tokenizer.__next" [color = "#afb2b2ff", label = "366"];
    "numpy.ma.core._frommethod.__init__" -> "numpy.ma.core._frommethod.getdoc" [color = "#b2b2b2ff", label = "23"];
    "sympy.integrals.<module>" -> "sympy.integrals.transforms.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.integrals.<module>" -> "sympy.integrals.integrals.<module>" [color = "#aeb2b2ff", label = "1"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python._set_prec" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python.__nonzero__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python.make_mpf" [color = "#b2b2b2ff", label = "12"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python.__int__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python.make_mpc" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.mpmath.ctx_mp_python.__rdiv__" [color = "#b2b2b2ff", label = "2"];
    "sympy.polys.domains.mpelements.__init__" -> "sympy.polys.domains.mpelements._make_tol" [color = "#b2b2b2ff", label = "2"];
    "sympy.integrals.manualintegrate.Rule" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "20"];
    "sympy.core.evaluate.<module>" -> "sympy.core.evaluate._global_evaluate" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evaluate.<module>" -> "contextlib.contextmanager" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evaluate.<module>" -> "sympy.core.cache.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.domains.mpelements.ComplexElement._set_mpc" -> "sympy.mpmath.libmp.libmpf.mpf_abs" [color = "#b2b2b2ff", label = "8"];
    "sympy.polys.domains.mpelements.ComplexElement._set_mpc" -> "sympy.mpmath.libmp.libmpf.mpf_lt" [color = "#b2b2b2ff", label = "8"];
    "sympy.logic.boolalg.Not.__and__" -> "sympy.core.operations.__new__" [color = "#a6b0b2ff", label = "2"];
    "sympy.functions.special.error_functions.Ci" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.directory.copy" -> "RRtoolbox.lib.directory.__new__" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.IntegralTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms._noconds_" [color = "#b2b2b2ff", label = "6"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseCosineTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.MellinTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.SineTransform" [color = "#b1b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseSineTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.IntegralTransformError" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseLaplaceTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseFourierTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.HankelTypeTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseMellinTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.SineCosineTypeTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.MellinTransformStripError" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.InverseHankelTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.make_wrapper" [color = "#b2b2b2ff", label = "7"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.FourierTypeTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.LaplaceTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.FourierTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "16"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.HankelTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.integrals.transforms.<module>" -> "sympy.integrals.transforms.CosineTransform" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.power.Pow" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "2"];
    "fractions.Fraction" -> "fractions._operator_fallbacks" [color = "#b2b2b2ff", label = "5"];
    "decimal.<module>" -> "decimal._ContextManager" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Clamped" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal._Log10Memoize.__init__" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.DivisionImpossible" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Rounded" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Context.__init__" [color = "#b2b2b2ff", label = "3"];
    "decimal.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.DivisionUndefined" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Subnormal" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.InvalidOperation" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Inexact" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.InvalidContext" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.ConversionSyntax" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal._WorkRep" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "4"];
    "decimal.<module>" -> "decimal._Log10Memoize" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Underflow" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.DivisionByZero" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Overflow" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Context" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.DecimalException" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.Decimal" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "1"];
    "decimal.<module>" -> "decimal.__new__" [color = "#b2b2b2ff", label = "6"];
    "sympy.mpmath.ctx_mp.__init__" -> "sympy.mpmath.ctx_mp_python.default" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.__init__" -> "sympy.mpmath.ctx_mp.init_builtins" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.__init__" -> "sympy.mpmath.ctx_mp_python.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.__init__" -> "sympy.mpmath.ctx_base._init_aliases" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp.__init__" -> "sympy.mpmath.ctx_base.__init__" [color = "#b1b2b2ff", label = "1"];
    "sympy.calculus.<module>" -> "sympy.calculus.euler.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.calculus.<module>" -> "sympy.calculus.finite_diff.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.calculus.<module>" -> "sympy.calculus.singularities.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.singleton.<module>" -> "sympy.core.singleton.Singleton" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.singleton.<module>" -> "sympy.core.singleton.SingletonRegistry" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.singleton.<module>" -> "sympy.core.core.__init__" [color = "#b1b2b2ff", label = "1"];
    "sympy.sets.sets.__new__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "4"];
    "sympy.sets.sets.__new__" -> "sympy.core.basic.NegativeInfinity.is_comparable" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.__new__" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "43"];
    "sympy.sets.sets.__new__" -> "sympy.core.numbers.Infinity.__eq__" [color = "#b2b2b2ff", label = "3"];
    "sympy.sets.sets.__new__" -> "sympy.core.compatibility.ordered" [color = "#aeb2b2ff", label = "86"];
    "sympy.sets.sets.__new__" -> "sympy.core.basic.Infinity.is_comparable" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.__new__" -> "sympy.core.numbers.NegativeInfinity.__eq__" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.__new__" -> "sympy.core.numbers.One.__hash__" [color = "#b2b2b2ff", label = "86"];
    "sympy.sets.sets.__new__" -> "sympy.sets.sets.<genexpr>" [color = "#b2b2b2ff", label = "3"];
    "sympy.sets.sets.__new__" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "44"];
    "sympy.sets.sets.__new__" -> "sympy.core.numbers.Infinity.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.sets.sets.__new__" -> "sympy.logic.boolalg.BooleanFalse.__nonzero__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.Pi.binary_op_wrapper" -> "sympy.core.expr.Pi.__rmul__" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.decorators.Pi.binary_op_wrapper" -> "sympy.core.expr.Pi.__mul__" [color = "#b2b2b2ff", label = "1"];
    "pydoc.TextRepr.__init__" -> "repr.TextRepr.__init__" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.cache.Memoizer.__init__" -> "RRtoolbox.lib.cache.Memoizer.ignore" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.core._internal._getintp_ctype" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.ctypeslib.prep_simple" [color = "#b2b2b2ff", label = "12"];
    "numpy.ctypeslib.<module>" -> "numpy.lib.utils.deprecate" [color = "#b2b2b2ff", label = "1"];
    "numpy.ctypeslib.<module>" -> "numpy.ctypeslib._ndptr" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.combinatorial.factorials.subfactorial" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.expr.Pow.__div__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "8"];
    "doctest.<module>" -> "doctest.register_optionflag" [color = "#b2b2b2ff", label = "10"];
    "doctest.<module>" -> "doctest.DocTestCase" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocTestFinder" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocTest" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "collections.namedtuple" [color = "#aeb2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.Tester" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocTestRunner" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.UnexpectedException" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.OutputChecker" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest._TestClass" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.SkipDocTestCase" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DebugRunner" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocTestParser" [color = "#afb2b2ff", label = "1"];
    "doctest.<module>" -> "doctest._SpoofOut" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocTestFailure" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.DocFileCase" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest.Example" [color = "#b2b2b2ff", label = "1"];
    "doctest.<module>" -> "doctest._OutputRedirectingPdb" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core._frommethod.getdoc" -> "numpy.ma.core._arraymethod.__get__" [color = "#b2b2b2ff", label = "4"];
    "numpy.ma.core._frommethod.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "23"];
    "sympy.core.numbers.Infinity" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers.Infinity" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "4"];
    "multiprocessing.dummy.<module>" -> "multiprocessing.dummy.Namespace" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "multiprocessing.dummy.Condition" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "threading.currentThread" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "multiprocessing.dummy.connection.<module>" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "multiprocessing.dummy.Value" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "weakref.WeakKeyDictionary.__init__" [color = "#b2b2b2ff", label = "1"];
    "multiprocessing.dummy.<module>" -> "multiprocessing.dummy.DummyProcess" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.calculus.approximation.<module>" -> "sympy.mpmath.calculus.calculus.defun" [color = "#b2b2b2ff", label = "3"];
    "sympy.polys.domains.domain.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.domain.<module>" -> "sympy.polys.domains.domainelement.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.domain.<module>" -> "sympy.polys.domains.domain.Domain" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.mul.Mul.as_coeff_Mul" -> "sympy.core.basic.Mul.args" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.libmp.libmpf.<module>" -> "sympy.mpmath.libmp.libintmath.<module>" [color = "#afb2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.<module>" -> "sympy.mpmath.libmp.backend.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.<module>" -> "sympy.mpmath.libmp.libmpf.ComplexResult" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.<module>" -> "sympy.mpmath.libmp.libmpf.<genexpr>" [color = "#b0b2b2ff", label = "268"];
    "sympy.mpmath.libmp.libmpf.<module>" -> "sympy.mpmath.libmp.libmpf.h_mask_big" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libmpf.mpf_rdiv_int" -> "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#b1b2b2ff", label = "2"];
    "sympy.mpmath.libmp.libmpf.mpf_rdiv_int" -> "sympy.mpmath.libmp.libmpf._normalize1" [color = "#b2b2b2ff", label = "2"];
    "abc.__new__" -> "_weakrefset.WeakSet.__init__" [color = "#b2b2b2ff", label = "51"];
    "abc.__new__" -> "abc.<genexpr>" [color = "#b2b2b2ff", label = "73"];
    "RRtoolbox.lib.arrayops.<module>" -> "RRtoolbox.lib.arrayops.convert.<module>" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.arrayops.<module>" -> "RRtoolbox.lib.arrayops.filters.<module>" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.arrayops.<module>" -> "RRtoolbox.lib.arrayops.basic.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.ma.extras._fromnxfunction.getdoc" -> "numpy.ma.core.get_object_signature" [color = "#b2b2b2ff", label = "9"];
    "sympy.mpmath.ctx_mp_python.__rdiv__" -> "sympy.polys.domains.mpelements.RealElement.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp_python.__rdiv__" -> "sympy.polys.domains.mpelements.RealElement._set_mpf" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_mp_python.__rdiv__" -> "sympy.mpmath.libmp.libmpf.mpf_rdiv_int" [color = "#b2b2b2ff", label = "2"];
    "pprint.<module>" -> "pprint.PrettyPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.mathml.<module>" -> "sympy.printing.mathml.MathMLPrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python._set_prec" -> "sympy.mpmath.libmp.libmpf.prec_to_dps" [color = "#b2b2b2ff", label = "2"];
    "doctest.DocTestParser" -> "re.compile" [color = "#9ba9b2ff", label = "5"];
    "pickle.Unpickler.load_appends" -> "pickle.Unpickler.marker" [color = "#b2b2b2ff", label = "4"];
    "sympy.printing.codeprinter.<module>" -> "sympy.printing.codeprinter.CodePrinter" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.codeprinter.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.printing.codeprinter.<module>" -> "sympy.printing.codeprinter.AssignmentError" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.codeprinter.<module>" -> "sympy.printing.codeprinter.Assignment" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.decorators.__sympifyit" -> "functools.update_wrapper" [color = "#b2b2b2ff", label = "61"];
    "sympy.core.decorators.__sympifyit" -> "functools.wraps" [color = "#b2b2b2ff", label = "61"];
    "sympy.mpmath.rational.<module>" -> "sympy.mpmath.rational.__new__" [color = "#b2b2b2ff", label = "11"];
    "sympy.mpmath.rational.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.rational.<module>" -> "sympy.mpmath.rational.mpq" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers.Float.__eq__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "4"];
    "sympy.core.numbers.Float.__eq__" -> "sympy.core.numbers.NaN._as_mpf_val" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.numbers.Float.__eq__" -> "sympy.mpmath.libmp.libmpf.mpf_eq" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.libmp.libelefun.<module>" -> "sympy.mpmath.libmp.libintmath.python_bitcount" [color = "#b1b2b2ff", label = "1"];
    "sympy.mpmath.libmp.libelefun.<module>" -> "sympy.mpmath.libmp.libelefun.constant_memo" [color = "#b2b2b2ff", label = "7"];
    "sympy.mpmath.libmp.libelefun.<module>" -> "sympy.mpmath.libmp.libelefun.def_mpf_constant" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.expr.<module>" -> "sympy.core.expr.Expr" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.core.expr.<module>" -> "sympy.core.mul.<module>" [color = "#a7b0b2ff", label = "1"];
    "sympy.core.expr.<module>" -> "sympy.core.evalf.<module>" [color = "#9ba9b2ff", label = "1"];
    "sympy.core.expr.<module>" -> "sympy.core.mod.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.<module>" -> "sympy.core.exprtools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.expr.<module>" -> "sympy.core.expr.AtomicExpr" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.matrices.linalg.<module>" -> "sympy.mpmath.matrices.linalg.LinearAlgebraMethods" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "numpy.core.getlimits.iinfo.max" [color = "#b2b2b2ff", label = "2"];
    "numpy.random.<module>" -> "warnings.filterwarnings" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "warnings.catch_warnings.__enter__" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "numpy.random.info.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "warnings.catch_warnings.__exit__" [color = "#b2b2b2ff", label = "1"];
    "numpy.random.<module>" -> "numpy.core.getlimits.iinfo.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.random.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.random.<module>" -> "warnings.catch_warnings.__init__" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.gruntz.<module>" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "3"];
    "sympy.series.gruntz.<module>" -> "sympy.utilities.misc.debug_decorator" [color = "#b2b2b2ff", label = "6"];
    "sympy.series.gruntz.<module>" -> "sympy.utilities.timeutils.decorator" [color = "#b2b2b2ff", label = "5"];
    "sympy.series.gruntz.<module>" -> "sympy.utilities.timeutils.timethis" [color = "#b2b2b2ff", label = "1"];
    "sympy.series.gruntz.<module>" -> "sympy.series.gruntz.SubsSet" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.filterdata" -> "RRtoolbox.lib.directory.repr2list" [color = "#b2b2b2ff", label = "20"];
    "encodings.search_function" -> "encodings.hex_codec.<module>" [color = "#b2b2b2ff", label = "1"];
    "encodings.search_function" -> "encodings.hex_codec.getregentry" [color = "#b2b2b2ff", label = "1"];
    "encodings.search_function" -> "encodings.normalize_encoding" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.cache.<module>" -> "sympy.core.cache.__cacheit" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.cache.<module>" -> "sympy.core.cache._getenv" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.cache.<module>" -> "distutils.version.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.cache.<module>" -> "sympy.core.cache._cache" [color = "#b2b2b2ff", label = "1"];
    "unittest.loader.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "1"];
    "unittest.loader.<module>" -> "unittest.loader.TestLoader" [color = "#b2b2b2ff", label = "1"];
    "sre_parse.parse" -> "sre_parse.Tokenizer.get" [color = "#aeb2b2ff", label = "57"];
    "sre_parse.parse" -> "sre_parse.Pattern.__init__" [color = "#b2b2b2ff", label = "57"];
    "sre_parse.parse" -> "sre_parse.Tokenizer.__init__" [color = "#b2b2b2ff", label = "57"];
    "sre_parse.parse" -> "sre_parse._parse_sub" [color = "#97a6b2ff", label = "57"];
    "sympy.ntheory.generate.<module>" -> "sympy.ntheory.primetest.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.ntheory.generate.<module>" -> "sympy.ntheory.generate.Sieve" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.compatibility.default_sort_key" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "29"];
    "sympy.core.compatibility.default_sort_key" -> "sympy.core.compatibility.default_sort_key" [color = "#b1b2b2ff", label = "27"];
    "sympy.core.compatibility.default_sort_key" -> "sympy.core.sympify.sympify" [color = "#aeb2b2ff", label = "27"];
    "sympy.core.compatibility.default_sort_key" -> "sympy.core.compatibility.iterable" [color = "#b2b2b2ff", label = "27"];
    "sympy.integrals.transforms.InverseFourierTransform" -> "sympy.core.decorators.__sympifyit_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.basic.Equivalent.__eq__" -> "sympy.core.sympify._sympify" [color = "#aeb2b2ff", label = "56"];
    "sympy.interactive.<module>" -> "sympy.interactive.printing.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.interactive.<module>" -> "sympy.interactive.session.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv._init_builtins" -> "sympy.mpmath.ctx_iv.__new__" [color = "#b2b2b2ff", label = "16"];
    "sympy.mpmath.ctx_iv._init_builtins" -> "sympy.mpmath.ctx_iv._wrap_mpi_function" [color = "#b2b2b2ff", label = "10"];
    "sympy.mpmath.ctx_iv._init_builtins" -> "sympy.mpmath.ctx_iv.ivmpf.__neg__" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.fromnumeric.<module>" -> "numpy.core._methods.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.ellipse.<module>" -> "sympy.geometry.ellipse.Ellipse" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.ellipse.<module>" -> "sympy.geometry.polygon.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.geometry.ellipse.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "2"];
    "sympy.geometry.ellipse.<module>" -> "sympy.geometry.ellipse.Circle" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib.npyio.NpzFile" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib._iotools.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib.npyio.BagObj" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib._datasource.<module>" [color = "#b2b2b2ff", label = "1"];
    "numpy.lib.npyio.<module>" -> "numpy.lib.format.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.__new__" -> "sympy.sets.sets.FiniteSet.__contains__" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.function.__new__" -> "sympy.functions.elementary.complexes.eval" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.function.__new__" -> "sympy.logic.boolalg.eval" [color = "#b0b2b2ff", label = "70"];
    "sympy.core.function.__new__" -> "sympy.core.function.eval" [color = "#b2b2b2ff", label = "101"];
    "sympy.core.function.__new__" -> "sympy.sets.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.function.__new__" -> "sympy.core.singleton.__new__" [color = "#b2b2b2ff", label = "101"];
    "sympy.core.function.__new__" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "1"];
    "sympy.core.function.__new__" -> "sympy.core.function.__new__" [color = "#acb1b2ff", label = "1"];
    "sympy.core.function.__new__" -> "sympy.core.function.FunctionClass.nargs" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.function.__new__" -> "sympy.core.basic.__new__" [color = "#b1b2b2ff", label = "139"];
    "sympy.core.function.__new__" -> "sympy.core.compatibility.is_sequence" [color = "#b2b2b2ff", label = "17"];
    "sympy.core.function.__new__" -> "sympy.sets.sets.__new__" [color = "#b1b2b2ff", label = "38"];
    "sympy.core.function.__new__" -> "sympy.core.cache.wrapper" [color = "#a4afb2ff", label = "4"];
    "sympy.core.function.__new__" -> "sympy.core.sympify.sympify" [color = "#adb2b2ff", label = "207"];
    "sympy.printing.python.<module>" -> "sympy.printing.repr.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.printing.python.<module>" -> "sympy.printing.python.PythonPrinter" [color = "#b2b2b2ff", label = "1"];
    "ctypes._reset_cache" -> "ctypes.CFUNCTYPE" [color = "#b2b2b2ff", label = "1"];
    "sre_compile._compile_info" -> "sre_parse.SubPattern.getwidth" [color = "#afb2b2ff", label = "57"];
    "sre_compile._compile_info" -> "sre_compile._compile_charset" [color = "#b1b2b2ff", label = "4"];
    "sre_compile._compile_info" -> "sre_parse.SubPattern.__getitem__" [color = "#b1b2b2ff", label = "32"];
    "sre_compile._compile_info" -> "sre_parse.SubPattern.__len__" [color = "#b2b2b2ff", label = "35"];
    "sympy.mpmath.calculus.calculus.<module>" -> "sympy.mpmath.calculus.calculus.CalculusMethods" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.__float__" -> "sympy.mpmath.libmp.libmpf.to_float" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.ctx_fp.<module>" -> "sympy.mpmath.ctx_base.<module>" [color = "#aab1b2ff", label = "1"];
    "sympy.mpmath.ctx_fp.<module>" -> "sympy.mpmath.function_docs.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_fp.<module>" -> "sympy.mpmath.ctx_fp.FPContext" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_fp.<module>" -> "sympy.mpmath.math2.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.hyperbolic.tanh" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "json.encoder.<module>" -> "re.compile" [color = "#9ba9b2ff", label = "3"];
    "json.encoder.<module>" -> "json.encoder.JSONEncoder" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyrationalfield.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.gmpyrationalfield.<module>" -> "sympy.polys.domains.gmpyrationalfield.GMPYRationalField" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.exponential.exp" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.polys.specialpolys.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "5"];
    "sympy.polys.specialpolys.<module>" -> "sympy.polys.rings.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.evalf.Zero.evalf" -> "sympy.mpmath.libmp.libmpf.dps_to_prec" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.evalf.Zero.evalf" -> "sympy.core.evalf.evalf" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.core.MaskedArray" -> "numpy.ma.core._arraymethod.__init__" [color = "#b2b2b2ff", label = "9"];
    "sympy.core.core.__gt__" -> "sympy.core.core.__cmp__" [color = "#b2b2b2ff", label = "3"];
    "logging.RootLogger.__init__" -> "logging.RootLogger.__init__" [color = "#b2b2b2ff", label = "2"];
    "logging.RootLogger.__init__" -> "logging._checkLevel" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.<module>" -> "numpy.ma.core.<module>" [color = "#b1b2b2ff", label = "1"];
    "numpy.ma.<module>" -> "numpy.testing.nosetester.NoseTester.__init__" [color = "#b2b2b2ff", label = "2"];
    "numpy.ma.<module>" -> "numpy.ma.extras.<module>" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "numbers.Real" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "numbers.Rational" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "abc.__new__" [color = "#b2b2b2ff", label = "5"];
    "numbers.<module>" -> "numbers.Number" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "numbers.Complex" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "numbers.Integral" [color = "#b2b2b2ff", label = "1"];
    "numbers.<module>" -> "abc.register" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.basic.Pow.compare" -> "sympy.core.core.__lt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Pow.compare" -> "sympy.core.basic.Integer.compare" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.basic.Pow.compare" -> "sympy.core.basic.Pow._hashable_content" [color = "#b2b2b2ff", label = "2"];
    "sympy.core.basic.Pow.compare" -> "sympy.core.core.__gt__" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.function.Function" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.Equality" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational._Greater" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "10"];
    "sympy.core.relational.<module>" -> "sympy.core.relational._Less" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.Unequality" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.LessThan" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.StrictGreaterThan" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.Relational" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational._Inequality" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.GreaterThan" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.relational.<module>" -> "sympy.core.relational.StrictLessThan" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.compositedomain.<module>" -> "sympy.utilities.decorator.public" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.compositedomain.<module>" -> "sympy.utilities.magic.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.domains.compositedomain.<module>" -> "sympy.polys.domains.compositedomain.CompositeDomain" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.trigonometric.sec" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.concrete.summations.<module>" -> "sympy.concrete.gosper.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.concrete.summations.<module>" -> "sympy.core.assumptions.__init__" [color = "#9caab2ff", label = "1"];
    "sympy.concrete.summations.<module>" -> "sympy.concrete.summations.Sum" [color = "#b2b2b2ff", label = "1"];
    "os.getenv" -> "UserDict._Environ.get" [color = "#b2b2b2ff", label = "19"];
    "sympy.utilities.exceptions.<module>" -> "warnings.simplefilter" [color = "#b2b2b2ff", label = "1"];
    "sympy.utilities.exceptions.<module>" -> "sympy.utilities.exceptions.SymPyDeprecationWarning" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.numbers._new" -> "sympy.core.numbers.mpf_norm" [color = "#b2b2b2ff", label = "4"];
    "sympy.core.numbers._new" -> "sympy.core.basic.__new__" [color = "#b2b2b2ff", label = "4"];
    "RRtoolbox.lib.arrayops.convert.<module>" -> "RRtoolbox.lib.arrayops.convert.SimKeyPoint" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.directory.repr2list" -> "RRtoolbox.lib.directory.repr2list" [color = "#b2b2b2ff", label = "31"];
    "numpy.core.numerictypes._set_array_types" -> "numpy.core.numerictypes._add_array_type" [color = "#b2b2b2ff", label = "30"];
    "sympy.core.numbers.Rational" -> "sympy.core.cache.func_wrapper" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.numbers.Rational" -> "sympy.core.decorators.deco" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.numbers.Rational" -> "sympy.core.decorators._sympifyit" [color = "#b2b2b2ff", label = "8"];
    "sympy.core.logic.And._eval_propagate_not" -> "sympy.core.logic.__new__" [color = "#adb2b2ff", label = "18"];
    "sympy.ntheory.factor_.factorint" -> "sympy.core.compatibility.as_int" [color = "#b2b2b2ff", label = "4"];
    "sympy.functions.elementary.integers.<module>" -> "sympy.functions.elementary.integers.RoundFunction" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.integers.<module>" -> "sympy.functions.elementary.integers.floor" [color = "#b2b2b2ff", label = "1"];
    "sympy.functions.elementary.integers.<module>" -> "sympy.core.function.__init__" [color = "#a3aeb2ff", label = "3"];
    "sympy.functions.elementary.integers.<module>" -> "sympy.functions.elementary.integers.ceiling" [color = "#b2b2b2ff", label = "1"];
    "RRtoolbox.lib.config.loadConfigFile" -> "RRtoolbox.lib.session.readSession" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.ivmpf.__neg__" -> "sympy.mpmath.libmp.libmpi.mpi_neg" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.ivmpf.__neg__" -> "sympy.mpmath.ctx_iv.make_mpf" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_iv.ivmpf.__neg__" -> "sympy.mpmath.ctx_iv.<lambda>" [color = "#b2b2b2ff", label = "1"];
    "numpy.ma.core._arraymethod.__init__" -> "numpy.ma.core._arraymethod.getdoc" [color = "#b2b2b2ff", label = "9"];
    "numpy.core.getlimits.<module>" -> "numpy.core.getlimits.finfo" [color = "#b2b2b2ff", label = "1"];
    "numpy.core.getlimits.<module>" -> "numpy.core.getlimits.iinfo" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.ctx_mp_python.__nonzero__" -> "sympy.polys.domains.mpelements.RealElement.<lambda>" [color = "#b2b2b2ff", label = "2"];
    "sympy.mpmath.calculus.quadrature.__init__" -> "sympy.mpmath.calculus.quadrature.GaussLegendre.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.mpmath.calculus.quadrature.__init__" -> "sympy.mpmath.calculus.quadrature.TanhSinh.__init__" [color = "#b2b2b2ff", label = "3"];
    "sympy.core.<module>" -> "sympy.core.sympify.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.<module>" -> "sympy.core.expr.<module>" [color = "#8f9db2ff", label = "1"];
    "sympy.core.<module>" -> "sympy.core.basic.<module>" [color = "#99a7b2ff", label = "1"];
    "sympy.core.<module>" -> "sympy.core.relational.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.<module>" -> "sympy.core.multidimensional.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.core.logic.fromstring" -> "sympy.core.logic.__new__" [color = "#adb2b2ff", label = "27"];
    "sympy.simplify.<module>" -> "sympy.simplify.traversaltools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.<module>" -> "sympy.simplify.epathtools.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.<module>" -> "sympy.simplify.fu.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.simplify.<module>" -> "sympy.simplify.simplify.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.simplify.<module>" -> "sympy.simplify.hyperexpand.<module>" [color = "#b1b2b2ff", label = "1"];
    "sympy.core.facts.deduce_alpha_implications" -> "sympy.core.logic.Not.__hash__" [color = "#aeb2b2ff", label = "381"];
    "sympy.core.facts.deduce_alpha_implications" -> "sympy.core.facts.transitive_closure" [color = "#a9b1b2ff", label = "1"];
    "sympy.core.facts.deduce_alpha_implications" -> "sympy.core.logic.__new__" [color = "#acb1b2ff", label = "208"];
    "sympy.core.facts.deduce_alpha_implications" -> "sympy.core.logic.__eq__" [color = "#b1b2b2ff", label = "253"];
    "sympy.utilities.decorator.xthreaded" -> "sympy.utilities.decorator.threaded_factory" [color = "#afb2b2ff", label = "3"];
    "sympy.mpmath.matrices.<module>" -> "sympy.mpmath.matrices.eigen.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.mpmath.matrices.<module>" -> "sympy.mpmath.matrices.eigen_symmetric.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.<module>" -> "sympy.polys.polyfuncs.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.<module>" -> "sympy.polys.numberfields.<module>" [color = "#b0b2b2ff", label = "1"];
    "sympy.polys.<module>" -> "sympy.polys.fields.<module>" [color = "#b2b2b2ff", label = "1"];
    "sympy.polys.<module>" -> "sympy.polys.polytools.<module>" [color = "#9caab2ff", label = "1"];
    "sympy.polys.<module>" -> "sympy.polys.partfrac.<module>" [color = "#afb2b2ff", label = "1"];
    "weakref.WeakValueDictionary.__setitem__" -> "weakref.__new__" [color = "#b2b2b2ff", label = "1"];
    "weakref.WeakValueDictionary.__setitem__" -> "weakref.KeyedRef.__init__" [color = "#b2b2b2ff", label = "1"];

}
