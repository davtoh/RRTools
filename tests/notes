backmask = normsigmoid(backgray.astype("float"),20,150)
foremask = normsigmoid(foregray.astype("float"),-100,200)*normsigmoid(foregray.astype("float"),1,150)*backmask
foremask = foremask*backmask
fore = fore.astype("float")
fore[:,:,3]=foremask*fore[:,:,3]


# almost perfect, hight stitches
backmask = normalize(normsigmoid(backgray,10,180)+normsigmoid(backgray,3.14,192)+normsigmoid(backgray,-3.14,45))
foremask = normalize(normsigmoid(foregray,-1,242)*normsigmoid(foregray,3.14,50))
window = normalize(fore[:,:,3].copy())
foremask = normalize(foremask * backmask)
foremask[foremask>0.9] = 2.0
ksize = (21,21)
foremask = normalize(cv2.blur(foremask,ksize))
foremask*=window


#### Prototyper

__author__ = 'Davtoh'
from cache import cache
from structure import structure

from plotim import plotim
import numpy as np
import cv2
from overlay import overlay
from tesisfunctions import normsigmoid,normalize
from imtester import imtester
import time

fn1 = r'C:\Users\Davtoh\Dropbox\PYTHON\projects\Descriptors\im1_1.jpg'
fn2 = r"C:\Users\Davtoh\Dropbox\PYTHON\projects\tesis\asift2fore.png"
back = cv2.imread(fn1)
fore = cv2.imread(fn2,-1)
foregray = cv2.cvtColor(fore.copy(),cv2.COLOR_BGRA2GRAY).astype("float")
backgray = cv2.cvtColor(back.copy(),cv2.COLOR_BGR2GRAY).astype("float")
fore = fore.astype("float")
t1 = time.time()
backmask = normalize(normsigmoid(backgray,10,180)+normsigmoid(backgray,3.14,192)+normsigmoid(backgray,-3.14,45))
foremask = normalize(normsigmoid(foregray,-1,242)*normsigmoid(foregray,3.14,50))
window = normalize(fore[:,:,3].copy())
print time.time()-t1
plot = plotim("foremask",foremask)
plot.show()
plot = plotim("backmask",backmask)
plot.show()
plot = plotim("window",window)
plot.show()
foremask = normalize(foremask * backmask)
foremask[foremask>0.9] = 2.0
ksize = (21,21)
foremask = normalize(cv2.blur(foremask,ksize))
plot = plotim("foremask * backmask",foremask)
plot.show()
foremask*=window
plot = plotim("foremask*window",foremask)
plot.show()

fore[:,:,3]=foremask
result = overlay(back,fore)

#imtester(result)
plot = plotim("result",result)
plot.show()
