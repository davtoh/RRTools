########################### LOG
# scripts were written in python 2 and ported to python 3 with back compatibility using
	$ find . -name "*.py" | xargs -I{} futurize --both-stages -w -n {}
# version control from https://www.python.org/dev/peps/pep-0440/ or http://semver.org/ in which case Python projects adopting semantic versioning should abide by clauses 1-8 of the Semantic Versioning 2.0.0 specification.
	# From http://semver.org but not supported by PEP440 but useful for version precedence
		1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0.
	1.2.0.dev1  # Development release
	1.2.0a1     # Alpha Release
	1.2.0b1     # Beta Release
	1.2.0rc1    # Release Candidate
	1.2.0       # Final Release
	1.2.0.post1 # Post Release
	15.10       # Date based release
	23          # Serial release
	# use + sign to denote local version not intended for publication
		1.2.0.dev1+hg.5.b11e5e6f0b0b  # 5th VCS commmit since 1.2.0.dev1 release
# see how to create a setup.py file from example
	# https://github.com/pypa/sampleproject
	# https://github.com/mkrphys/ipython-tikzmagic
	# https://github.com/pyserial/pyserial
	# run $ python setup.py --help-commands
	# localy install pip install -e .
# see how to distribute package
	# https://packaging.python.org/distributing/
	# http://peterdowns.com/posts/first-time-with-pypi.html
	# to install localy
		$ pip install -e .
	# ready to upload
		# create Source distribution
		$ python setup.py sdist
		# Create univerlas wheels (py2 and py3 supported)
		$ python setup.py bdist_wheel --universal
# build relseases
	# https://travis-ci.org/pyserial/pyserial

# install virtualenvwrapper for virtual enviroments
	$ pip install virtualenvwrapper
	# make commands permanet
	$ echo -e "\n# virtualenv and virtualenvwrapper" >> ~/.profile
	$ echo "export WORKON_HOME=$HOME/.virtualenvs" >> ~/.profile
	$ echo "source /usr/local/bin/virtualenvwrapper.sh" >> ~/.profile
########################### NOTEs
do not use __dict__ to not overlook custom setters

*Threat http://stackoverflow.com/questions/1865727/how-to-design-an-application-in-a-modular-way

Try to keep things loosely coupled, and use interfaces liberally to help.

I'd start the design with the Separation of Concerns. The major architectural layers are:

Problem Domain (aka. Engine, Back-end): the domain classes, which do all the actual work, have domain knowledge implement domain behaviour
Persistence: storage management for domain classes, database/filesystem layer
User Interface: the GUI, which talks to the domain classes
System Interfaces: talking to other systems, eg. networking, web services
The domain classes do the work, but don't know about the UI. The persistence layer knows about the domain classes, enough to save/load as required. The system interface layer abstracts away external systems, which lets you plug a simulator in behind while testing. The UI should ideally use MVC, for maximum flexibility.

Without putting too fine a point on it, one would not ordinarily look to Drupal as an exemplar of good architectural design. It has grown rather organically, and there have been many upheavals of the design, as evidenced by the regular plugin breakage upon system upgrades.

I would also echo what MicSim said, regarding carefully designing the plugin interface and writing multiple different plugins to exercise it. This is the only way to really flesh out the issues of how the app and plugins interact.

*http://docs.python-guide.org/en/latest/writing/structure/

*http://stackoverflow.com/questions/1707709/list-all-the-modules-that-are-part-of-a-python-package

*http://sphinx-doc.org/tutorial.html

########################### RECOMMENDATIONS
Load convensions http://chimera.labs.oreilly.com/books/1230000000393/ch10.html#namespacepackage

Recommendations:
always import as relative imports and use hole modules:
- from . import mymodule #Ok
- import mymodule # sometimes import cannot find the path if the script is run from another source
- from Mypackage import mymodule #code is not portable, it is hardcoded
- from mymodule import myfunciton #this does not work with imp.reload(mymodule)
- import mymodule
    mymodule.myfunction #Ok #this works with imp.reload(mymodule)

always add relative paths, not absolute paths
import os
# add to main path of file lib folder to look for
sys.path.append(os.path.join(os.path.dirname(__file__), 'lib'))

########################### LICENSES
Eclipse Public Licens Version 1.0 for Graphviz
GNU GENERAL PUBLIC LICENSE for pycallgraph
https://github.com/uqfoundation/dill
http://www.qt.io/faq/

sources:
register your code in Colombia: http://www.derechodeautor.gov.co/web/guest/home
the OSI organization: https://opensource.org/licenses
license comparisons: https://en.wikipedia.org/wiki/Comparison_of_free_and_open-source_software_licenses

########################### VIRTUAL MACHINES LOG
For the OS shared virtualMachine
-Installed Virtualbox
-Installed virutalMachine Tiny7 in shared directory between the two OS
-Tiny7 deleted from register without eliminating archives
-Obtained Tiny7 disk and moved outside Tiny7 folder
-deleted Tiny7 folder
-from windows created new virtualMachine "Tiny7-win" with the Tiny7 disk
-from linux created new virutalMachine "Tiny7-linux" with the same Tiny7 disk
-shared folder can be created independet in each virtual machine in each OS

Inside virtualMachine disk of Tiny7
-installed Tiny7
-installed Guest additions
-installed python xy
-installed all RRtoolbox dependencies
-installed graphviz or a zip file can be extracted
-added enviroment path to graphviz
-installed pycharm

########################### MANUAL INSTALL QT4

cd Downloads/
#manual can be found in "doc/html/index.html
tar -xf sip-4.17.tar.gz 
cd sip-4.17/
python configure.py
make
sudo make install
"insert password"

cd ..
tar -xf PyQt-x11-gpl-4.11.4.tar.gz
cd PyQt-x11-gpl-4.11.4/
python configure-ng.py
"accept the license"
# make files will be created

############################ DEPENDENCIES

# three party
opencv-python==2.4.11 # for image manipulation
numpy==1.9.2 # for array manipulation and Memory-mapped file
dill==0.2.4 # for serializing manipulation
joblib>=0.8.4 # for memoization and Memory-mapped file
pycallgraph==1.0.1
pyqtgraph==0.9.10 # for image array visualization and visual interfaces (it got pyqt in it)
sympy==1.0
matplotlib==1.4.3
clipboard==0.0.4 or pyperclip>=1.5.26

#imagemagic?
#wand (candidate over opencv) http://www.imagemagick.org/script/api.php ; http://docs.wand-py.org/en/0.4.1/
#vigra (candidate over opencv) http://ukoethe.github.io/vigra/
#h5py (candidate over serializing) https://www.hdfgroup.org/ ; http://www.h5py.org/ ; https://pypi.python.org/pypi/h5py
#PostgreSQL (candidate over serializing) http://www.postgresql.org/about/ ; https://wiki.postgresql.org/wiki/Python

############################# CONCEPTS

memoization, caching, persistence
serializing and de-serializing a Python object structure
https://docs.python.org/2/glossary.html
https://docs.python.org/2/library/persistence.html

############################# LICENSES

dill==0.2.4
"""
    session module made by Davtoh and powered by dill
    Dependency project: https://github.com/uqfoundation/dill

    dill dependency license:

    This software is part of the open-source mystic project at the California
    Institute of Technology, and is available subject to the conditions and
    terms laid out below. By downloading and using this software you are
    agreeing to the following conditions.

    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions
    are met::

        - Redistribution of source code must retain the above copyright
          notice, this list of conditions and the following disclaimer.

        - Redistribution in binary form must reproduce the above copyright
          notice, this list of conditions and the following disclaimer in the
          documentations and/or other materials provided with the distribution.

        - Neither the name of the California Institute of Technology nor
          the names of its contributors may be used to endorse or promote
          products derived from this software without specific prior written
          permission.

    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
    OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
    ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

    Copyright (c) 2015 California Institute of Technology. All rights reserved.

    M.M. McKerns, L. Strand, T. Sullivan, A. Fang, M.A.G. Aivazis,
    "Building a framework for predictive science", Proceedings of
    the 10th Python in Science Conference, 2011;
    http://arxiv.org/pdf/1202.1056

    Michael McKerns and Michael Aivazis,
    "pathos: a framework for heterogeneous computing", 2010- ;
    http://trac.mystic.cacr.caltech.edu/project/pathos
"""

joblib>=0.8.4
"""
    cache module made by Davtoh and powered by joblib
    Dependency project: https://github.com/joblib/joblib

    joblib is BSD-licenced (3 clause):

    This software is OSI Certified Open Source Software. OSI Certified is a
    certification mark of the Open Source Initiative.

    Copyright (c) 2009-2011, joblib developpers All rights reserved.

    Redistribution and use in source and binary forms, with or without modification,
    are permitted provided that the following conditions are met:

    ** Redistributions of source code must retain the above copyright notice,
    this list of conditions and the following disclaimer.
    ** Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation and/or
    other materials provided with the distribution.
    ** Neither the name of Gael Varoquaux. nor the names of other joblib contributors may be used
    to endorse or promote products derived from this software without specific prior written permission.

    This software is provided by the copyright holders and contributors "as is" and any
    express or implied warranties, including, but not limited to, the implied warranties
    of merchantability and fitness for a particular purpose are disclaimed.
    In no event shall the copyright owner or contributors be liable for any direct, indirect,
    incidental, special, exemplary, or consequential damages (including, but not limited to,
    procurement of substitute goods or services; loss of use, data, or profits; or business
    interruption) however caused and on any theory of liability, whether in contract, strict
    liability, or tort (including negligence or otherwise) arising in any way out of the use
    of this software, even if advised of the possibility of such damage.

"""

opencv == 2.9.11
BSD License
"""
http://opencv.org/license.html
"""
